{
  "contractName": "ERC721A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Does not support burning tokens to address(0). Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}. This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first. It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xde12e1021bb82916df6379505b293d31386e900050483927f20fcbd8ac41a859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0200aa479b89bc2638f8843675242906c479793cab7c34cb9725e1b9f4d4995\",\"dweb:/ipfs/QmZTKbajF1qQUiMEJHYdeXC6GBqa4yKV8SU2LK1Th8o1Di\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002f0038038062002f008339818101604052810190620000379190620002be565b81600190805190602001906200004f92919062000071565b5080600290805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b612b4880620003b86000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb465146102d3578063b88d4fde146102ef578063c87b56dd1461030b578063e985e9c51461033b57610100565b80634f6ccce7146102255780636352211e1461025557806370a082311461028557806395d89b41146102b557610100565b806318160ddd116100d357806318160ddd1461019f57806323b872dd146101bd5780632f745c59146101d957806342842e0e1461020957610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906119ed565b61036b565b60405161012c9190611a35565b60405180910390f35b61013d6104b5565b60405161014a9190611ae9565b60405180910390f35b61016d60048036038101906101689190611b41565b610547565b60405161017a9190611baf565b60405180910390f35b61019d60048036038101906101989190611bf6565b6105cc565b005b6101a76106e5565b6040516101b49190611c45565b60405180910390f35b6101d760048036038101906101d29190611c60565b6106ee565b005b6101f360048036038101906101ee9190611bf6565b6106fe565b6040516102009190611c45565b60405180910390f35b610223600480360381019061021e9190611c60565b6108f0565b005b61023f600480360381019061023a9190611b41565b610910565b60405161024c9190611c45565b60405180910390f35b61026f600480360381019061026a9190611b41565b610963565b60405161027c9190611baf565b60405180910390f35b61029f600480360381019061029a9190611cb3565b610979565b6040516102ac9190611c45565b60405180910390f35b6102bd610a62565b6040516102ca9190611ae9565b60405180910390f35b6102ed60048036038101906102e89190611d0c565b610af4565b005b61030960048036038101906103049190611e81565b610c75565b005b61032560048036038101906103209190611b41565b610cd1565b6040516103329190611ae9565b60405180910390f35b61035560048036038101906103509190611f04565b610d79565b6040516103629190611a35565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061049e57507f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104ae57506104ad82610e0d565b5b9050919050565b6060600180546104c490611f73565b80601f01602080910402602001604051908101604052809291908181526020018280546104f090611f73565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b5050505050905090565b600061055282610e77565b610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890612017565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d782610963565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f906120a9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610667610e84565b73ffffffffffffffffffffffffffffffffffffffff161480610696575061069581610690610e84565b610d79565b5b6106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc9061213b565b60405180910390fd5b6106e0838383610e8c565b505050565b60008054905090565b6106f9838383610f3e565b505050565b600061070983610979565b821061074a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610741906121cd565b60405180910390fd5b60006107546106e5565b905060008060005b838110156108ae576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461084e57806000015192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108a057868414156108975781955050505050506108ea565b83806001019450505b50808060010191505061075c565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e19061225f565b60405180910390fd5b92915050565b61090b83838360405180602001604052806000815250610c75565b505050565b600061091a6106e5565b821061095b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610952906122f1565b60405180910390fd5b819050919050565b600061096e8261147e565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190612383565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b606060028054610a7190611f73565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9d90611f73565b8015610aea5780601f10610abf57610100808354040283529160200191610aea565b820191906000526020600020905b815481529060010190602001808311610acd57829003601f168201915b5050505050905090565b610afc610e84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906123ef565b60405180910390fd5b8060066000610b77610e84565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c24610e84565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c699190611a35565b60405180910390a35050565b610c80848484610f3e565b610c8c84848484611618565b610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc290612481565b60405180910390fd5b50505050565b6060610cdc82610e77565b610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1290612513565b60405180910390fd5b6000610d256117a0565b9050600081511415610d465760405180602001604052806000815250610d71565b80610d50846117b7565b604051602001610d6192919061256f565b6040516020818303038152906040525b915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610f498261147e565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610f70610e84565b73ffffffffffffffffffffffffffffffffffffffff161480610fcc5750610f95610e84565b73ffffffffffffffffffffffffffffffffffffffff16610fb484610547565b73ffffffffffffffffffffffffffffffffffffffff16145b80610fe85750610fe78260000151610fe2610e84565b610d79565b5b90508061102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102190612605565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161461109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390612697565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561110c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110390612729565b60405180910390fd5b6111198585856001611918565b6111296000848460000151610e8c565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160392506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160192506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550836003600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003600085815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600184019050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561140e5761136d81610e77565b1561140d5782600001516003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082602001516003600083815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b50828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611477858585600161191e565b5050505050565b611486611947565b61148f82610e77565b6114ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c5906127bb565b60405180910390fd5b60008290505b600081106115d7576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146115c8578092505050611613565b508080600190039150506114d4565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160a9061284d565b60405180910390fd5b919050565b60006116398473ffffffffffffffffffffffffffffffffffffffff16611924565b15611793578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611662610e84565b8786866040518563ffffffff1660e01b815260040161168494939291906128c2565b6020604051808303816000875af19250505080156116c057506040513d601f19601f820116820180604052508101906116bd9190612923565b60015b611743573d80600081146116f0576040519150601f19603f3d011682016040523d82523d6000602084013e6116f5565b606091505b5060008151141561173b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173290612481565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611798565b600190505b949350505050565b606060405180602001604052806000815250905090565b606060008214156117ff576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611913565b600082905060005b6000821461183157808061181a9061297f565b915050600a8261182a91906129f7565b9150611807565b60008167ffffffffffffffff81111561184d5761184c611d56565b5b6040519080825280601f01601f19166020018201604052801561187f5781602001600182028036833780820191505090505b5090505b6000851461190c576001826118989190612a28565b9150600a856118a79190612a5c565b60306118b39190612a8d565b60f81b8183815181106118c9576118c8612ae3565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561190591906129f7565b9450611883565b8093505050505b919050565b50505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119ca81611995565b81146119d557600080fd5b50565b6000813590506119e7816119c1565b92915050565b600060208284031215611a0357611a0261198b565b5b6000611a11848285016119d8565b91505092915050565b60008115159050919050565b611a2f81611a1a565b82525050565b6000602082019050611a4a6000830184611a26565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a8a578082015181840152602081019050611a6f565b83811115611a99576000848401525b50505050565b6000601f19601f8301169050919050565b6000611abb82611a50565b611ac58185611a5b565b9350611ad5818560208601611a6c565b611ade81611a9f565b840191505092915050565b60006020820190508181036000830152611b038184611ab0565b905092915050565b6000819050919050565b611b1e81611b0b565b8114611b2957600080fd5b50565b600081359050611b3b81611b15565b92915050565b600060208284031215611b5757611b5661198b565b5b6000611b6584828501611b2c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b9982611b6e565b9050919050565b611ba981611b8e565b82525050565b6000602082019050611bc46000830184611ba0565b92915050565b611bd381611b8e565b8114611bde57600080fd5b50565b600081359050611bf081611bca565b92915050565b60008060408385031215611c0d57611c0c61198b565b5b6000611c1b85828601611be1565b9250506020611c2c85828601611b2c565b9150509250929050565b611c3f81611b0b565b82525050565b6000602082019050611c5a6000830184611c36565b92915050565b600080600060608486031215611c7957611c7861198b565b5b6000611c8786828701611be1565b9350506020611c9886828701611be1565b9250506040611ca986828701611b2c565b9150509250925092565b600060208284031215611cc957611cc861198b565b5b6000611cd784828501611be1565b91505092915050565b611ce981611a1a565b8114611cf457600080fd5b50565b600081359050611d0681611ce0565b92915050565b60008060408385031215611d2357611d2261198b565b5b6000611d3185828601611be1565b9250506020611d4285828601611cf7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d8e82611a9f565b810181811067ffffffffffffffff82111715611dad57611dac611d56565b5b80604052505050565b6000611dc0611981565b9050611dcc8282611d85565b919050565b600067ffffffffffffffff821115611dec57611deb611d56565b5b611df582611a9f565b9050602081019050919050565b82818337600083830152505050565b6000611e24611e1f84611dd1565b611db6565b905082815260208101848484011115611e4057611e3f611d51565b5b611e4b848285611e02565b509392505050565b600082601f830112611e6857611e67611d4c565b5b8135611e78848260208601611e11565b91505092915050565b60008060008060808587031215611e9b57611e9a61198b565b5b6000611ea987828801611be1565b9450506020611eba87828801611be1565b9350506040611ecb87828801611b2c565b925050606085013567ffffffffffffffff811115611eec57611eeb611990565b5b611ef887828801611e53565b91505092959194509250565b60008060408385031215611f1b57611f1a61198b565b5b6000611f2985828601611be1565b9250506020611f3a85828601611be1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f8b57607f821691505b60208210811415611f9f57611f9e611f44565b5b50919050565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b6000612001602d83611a5b565b915061200c82611fa5565b604082019050919050565b6000602082019050818103600083015261203081611ff4565b9050919050565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000612093602283611a5b565b915061209e82612037565b604082019050919050565b600060208201905081810360008301526120c281612086565b9050919050565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b6000612125603983611a5b565b9150612130826120c9565b604082019050919050565b6000602082019050818103600083015261215481612118565b9050919050565b7f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b60006121b7602283611a5b565b91506121c28261215b565b604082019050919050565b600060208201905081810360008301526121e6816121aa565b9050919050565b7f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060008201527f6f776e657220627920696e646578000000000000000000000000000000000000602082015250565b6000612249602e83611a5b565b9150612254826121ed565b604082019050919050565b600060208201905081810360008301526122788161223c565b9050919050565b7f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b60006122db602383611a5b565b91506122e68261227f565b604082019050919050565b6000602082019050818103600083015261230a816122ce565b9050919050565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b600061236d602b83611a5b565b915061237882612311565b604082019050919050565b6000602082019050818103600083015261239c81612360565b9050919050565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b60006123d9601a83611a5b565b91506123e4826123a3565b602082019050919050565b60006020820190508181036000830152612408816123cc565b9050919050565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b600061246b603383611a5b565b91506124768261240f565b604082019050919050565b6000602082019050818103600083015261249a8161245e565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b60006124fd602f83611a5b565b9150612508826124a1565b604082019050919050565b6000602082019050818103600083015261252c816124f0565b9050919050565b600081905092915050565b600061254982611a50565b6125538185612533565b9350612563818560208601611a6c565b80840191505092915050565b600061257b828561253e565b9150612587828461253e565b91508190509392505050565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b60006125ef603283611a5b565b91506125fa82612593565b604082019050919050565b6000602082019050818103600083015261261e816125e2565b9050919050565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b6000612681602683611a5b565b915061268c82612625565b604082019050919050565b600060208201905081810360008301526126b081612674565b9050919050565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612713602583611a5b565b915061271e826126b7565b604082019050919050565b6000602082019050818103600083015261274281612706565b9050919050565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b60006127a5602a83611a5b565b91506127b082612749565b604082019050919050565b600060208201905081810360008301526127d481612798565b9050919050565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b6000612837602f83611a5b565b9150612842826127db565b604082019050919050565b600060208201905081810360008301526128668161282a565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006128948261286d565b61289e8185612878565b93506128ae818560208601611a6c565b6128b781611a9f565b840191505092915050565b60006080820190506128d76000830187611ba0565b6128e46020830186611ba0565b6128f16040830185611c36565b81810360608301526129038184612889565b905095945050505050565b60008151905061291d816119c1565b92915050565b6000602082840312156129395761293861198b565b5b60006129478482850161290e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061298a82611b0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156129bd576129bc612950565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612a0282611b0b565b9150612a0d83611b0b565b925082612a1d57612a1c6129c8565b5b828204905092915050565b6000612a3382611b0b565b9150612a3e83611b0b565b925082821015612a5157612a50612950565b5b828203905092915050565b6000612a6782611b0b565b9150612a7283611b0b565b925082612a8257612a816129c8565b5b828206905092915050565b6000612a9882611b0b565b9150612aa383611b0b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ad857612ad7612950565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220727eeab668efcc1c61d47c0d87f9447e6859ad777ad39e45e960406d3033ebde64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb465146102d3578063b88d4fde146102ef578063c87b56dd1461030b578063e985e9c51461033b57610100565b80634f6ccce7146102255780636352211e1461025557806370a082311461028557806395d89b41146102b557610100565b806318160ddd116100d357806318160ddd1461019f57806323b872dd146101bd5780632f745c59146101d957806342842e0e1461020957610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906119ed565b61036b565b60405161012c9190611a35565b60405180910390f35b61013d6104b5565b60405161014a9190611ae9565b60405180910390f35b61016d60048036038101906101689190611b41565b610547565b60405161017a9190611baf565b60405180910390f35b61019d60048036038101906101989190611bf6565b6105cc565b005b6101a76106e5565b6040516101b49190611c45565b60405180910390f35b6101d760048036038101906101d29190611c60565b6106ee565b005b6101f360048036038101906101ee9190611bf6565b6106fe565b6040516102009190611c45565b60405180910390f35b610223600480360381019061021e9190611c60565b6108f0565b005b61023f600480360381019061023a9190611b41565b610910565b60405161024c9190611c45565b60405180910390f35b61026f600480360381019061026a9190611b41565b610963565b60405161027c9190611baf565b60405180910390f35b61029f600480360381019061029a9190611cb3565b610979565b6040516102ac9190611c45565b60405180910390f35b6102bd610a62565b6040516102ca9190611ae9565b60405180910390f35b6102ed60048036038101906102e89190611d0c565b610af4565b005b61030960048036038101906103049190611e81565b610c75565b005b61032560048036038101906103209190611b41565b610cd1565b6040516103329190611ae9565b60405180910390f35b61035560048036038101906103509190611f04565b610d79565b6040516103629190611a35565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061049e57507f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104ae57506104ad82610e0d565b5b9050919050565b6060600180546104c490611f73565b80601f01602080910402602001604051908101604052809291908181526020018280546104f090611f73565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b5050505050905090565b600061055282610e77565b610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890612017565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d782610963565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f906120a9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610667610e84565b73ffffffffffffffffffffffffffffffffffffffff161480610696575061069581610690610e84565b610d79565b5b6106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc9061213b565b60405180910390fd5b6106e0838383610e8c565b505050565b60008054905090565b6106f9838383610f3e565b505050565b600061070983610979565b821061074a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610741906121cd565b60405180910390fd5b60006107546106e5565b905060008060005b838110156108ae576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461084e57806000015192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108a057868414156108975781955050505050506108ea565b83806001019450505b50808060010191505061075c565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e19061225f565b60405180910390fd5b92915050565b61090b83838360405180602001604052806000815250610c75565b505050565b600061091a6106e5565b821061095b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610952906122f1565b60405180910390fd5b819050919050565b600061096e8261147e565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190612383565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b606060028054610a7190611f73565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9d90611f73565b8015610aea5780601f10610abf57610100808354040283529160200191610aea565b820191906000526020600020905b815481529060010190602001808311610acd57829003601f168201915b5050505050905090565b610afc610e84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906123ef565b60405180910390fd5b8060066000610b77610e84565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c24610e84565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c699190611a35565b60405180910390a35050565b610c80848484610f3e565b610c8c84848484611618565b610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc290612481565b60405180910390fd5b50505050565b6060610cdc82610e77565b610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1290612513565b60405180910390fd5b6000610d256117a0565b9050600081511415610d465760405180602001604052806000815250610d71565b80610d50846117b7565b604051602001610d6192919061256f565b6040516020818303038152906040525b915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610f498261147e565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610f70610e84565b73ffffffffffffffffffffffffffffffffffffffff161480610fcc5750610f95610e84565b73ffffffffffffffffffffffffffffffffffffffff16610fb484610547565b73ffffffffffffffffffffffffffffffffffffffff16145b80610fe85750610fe78260000151610fe2610e84565b610d79565b5b90508061102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102190612605565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161461109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390612697565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561110c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110390612729565b60405180910390fd5b6111198585856001611918565b6111296000848460000151610e8c565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160392506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160192506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550836003600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003600085815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600184019050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561140e5761136d81610e77565b1561140d5782600001516003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082602001516003600083815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b50828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611477858585600161191e565b5050505050565b611486611947565b61148f82610e77565b6114ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c5906127bb565b60405180910390fd5b60008290505b600081106115d7576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146115c8578092505050611613565b508080600190039150506114d4565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160a9061284d565b60405180910390fd5b919050565b60006116398473ffffffffffffffffffffffffffffffffffffffff16611924565b15611793578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611662610e84565b8786866040518563ffffffff1660e01b815260040161168494939291906128c2565b6020604051808303816000875af19250505080156116c057506040513d601f19601f820116820180604052508101906116bd9190612923565b60015b611743573d80600081146116f0576040519150601f19603f3d011682016040523d82523d6000602084013e6116f5565b606091505b5060008151141561173b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173290612481565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611798565b600190505b949350505050565b606060405180602001604052806000815250905090565b606060008214156117ff576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611913565b600082905060005b6000821461183157808061181a9061297f565b915050600a8261182a91906129f7565b9150611807565b60008167ffffffffffffffff81111561184d5761184c611d56565b5b6040519080825280601f01601f19166020018201604052801561187f5781602001600182028036833780820191505090505b5090505b6000851461190c576001826118989190612a28565b9150600a856118a79190612a5c565b60306118b39190612a8d565b60f81b8183815181106118c9576118c8612ae3565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561190591906129f7565b9450611883565b8093505050505b919050565b50505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119ca81611995565b81146119d557600080fd5b50565b6000813590506119e7816119c1565b92915050565b600060208284031215611a0357611a0261198b565b5b6000611a11848285016119d8565b91505092915050565b60008115159050919050565b611a2f81611a1a565b82525050565b6000602082019050611a4a6000830184611a26565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a8a578082015181840152602081019050611a6f565b83811115611a99576000848401525b50505050565b6000601f19601f8301169050919050565b6000611abb82611a50565b611ac58185611a5b565b9350611ad5818560208601611a6c565b611ade81611a9f565b840191505092915050565b60006020820190508181036000830152611b038184611ab0565b905092915050565b6000819050919050565b611b1e81611b0b565b8114611b2957600080fd5b50565b600081359050611b3b81611b15565b92915050565b600060208284031215611b5757611b5661198b565b5b6000611b6584828501611b2c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b9982611b6e565b9050919050565b611ba981611b8e565b82525050565b6000602082019050611bc46000830184611ba0565b92915050565b611bd381611b8e565b8114611bde57600080fd5b50565b600081359050611bf081611bca565b92915050565b60008060408385031215611c0d57611c0c61198b565b5b6000611c1b85828601611be1565b9250506020611c2c85828601611b2c565b9150509250929050565b611c3f81611b0b565b82525050565b6000602082019050611c5a6000830184611c36565b92915050565b600080600060608486031215611c7957611c7861198b565b5b6000611c8786828701611be1565b9350506020611c9886828701611be1565b9250506040611ca986828701611b2c565b9150509250925092565b600060208284031215611cc957611cc861198b565b5b6000611cd784828501611be1565b91505092915050565b611ce981611a1a565b8114611cf457600080fd5b50565b600081359050611d0681611ce0565b92915050565b60008060408385031215611d2357611d2261198b565b5b6000611d3185828601611be1565b9250506020611d4285828601611cf7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d8e82611a9f565b810181811067ffffffffffffffff82111715611dad57611dac611d56565b5b80604052505050565b6000611dc0611981565b9050611dcc8282611d85565b919050565b600067ffffffffffffffff821115611dec57611deb611d56565b5b611df582611a9f565b9050602081019050919050565b82818337600083830152505050565b6000611e24611e1f84611dd1565b611db6565b905082815260208101848484011115611e4057611e3f611d51565b5b611e4b848285611e02565b509392505050565b600082601f830112611e6857611e67611d4c565b5b8135611e78848260208601611e11565b91505092915050565b60008060008060808587031215611e9b57611e9a61198b565b5b6000611ea987828801611be1565b9450506020611eba87828801611be1565b9350506040611ecb87828801611b2c565b925050606085013567ffffffffffffffff811115611eec57611eeb611990565b5b611ef887828801611e53565b91505092959194509250565b60008060408385031215611f1b57611f1a61198b565b5b6000611f2985828601611be1565b9250506020611f3a85828601611be1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f8b57607f821691505b60208210811415611f9f57611f9e611f44565b5b50919050565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b6000612001602d83611a5b565b915061200c82611fa5565b604082019050919050565b6000602082019050818103600083015261203081611ff4565b9050919050565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000612093602283611a5b565b915061209e82612037565b604082019050919050565b600060208201905081810360008301526120c281612086565b9050919050565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b6000612125603983611a5b565b9150612130826120c9565b604082019050919050565b6000602082019050818103600083015261215481612118565b9050919050565b7f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b60006121b7602283611a5b565b91506121c28261215b565b604082019050919050565b600060208201905081810360008301526121e6816121aa565b9050919050565b7f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060008201527f6f776e657220627920696e646578000000000000000000000000000000000000602082015250565b6000612249602e83611a5b565b9150612254826121ed565b604082019050919050565b600060208201905081810360008301526122788161223c565b9050919050565b7f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b60006122db602383611a5b565b91506122e68261227f565b604082019050919050565b6000602082019050818103600083015261230a816122ce565b9050919050565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b600061236d602b83611a5b565b915061237882612311565b604082019050919050565b6000602082019050818103600083015261239c81612360565b9050919050565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b60006123d9601a83611a5b565b91506123e4826123a3565b602082019050919050565b60006020820190508181036000830152612408816123cc565b9050919050565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b600061246b603383611a5b565b91506124768261240f565b604082019050919050565b6000602082019050818103600083015261249a8161245e565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b60006124fd602f83611a5b565b9150612508826124a1565b604082019050919050565b6000602082019050818103600083015261252c816124f0565b9050919050565b600081905092915050565b600061254982611a50565b6125538185612533565b9350612563818560208601611a6c565b80840191505092915050565b600061257b828561253e565b9150612587828461253e565b91508190509392505050565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b60006125ef603283611a5b565b91506125fa82612593565b604082019050919050565b6000602082019050818103600083015261261e816125e2565b9050919050565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b6000612681602683611a5b565b915061268c82612625565b604082019050919050565b600060208201905081810360008301526126b081612674565b9050919050565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612713602583611a5b565b915061271e826126b7565b604082019050919050565b6000602082019050818103600083015261274281612706565b9050919050565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b60006127a5602a83611a5b565b91506127b082612749565b604082019050919050565b600060208201905081810360008301526127d481612798565b9050919050565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b6000612837602f83611a5b565b9150612842826127db565b604082019050919050565b600060208201905081810360008301526128668161282a565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006128948261286d565b61289e8185612878565b93506128ae818560208601611a6c565b6128b781611a9f565b840191505092915050565b60006080820190506128d76000830187611ba0565b6128e46020830186611ba0565b6128f16040830185611c36565b81810360608301526129038184612889565b905095945050505050565b60008151905061291d816119c1565b92915050565b6000602082840312156129395761293861198b565b5b60006129478482850161290e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061298a82611b0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156129bd576129bc612950565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612a0282611b0b565b9150612a0d83611b0b565b925082612a1d57612a1c6129c8565b5b828204905092915050565b6000612a3382611b0b565b9150612a3e83611b0b565b925082821015612a5157612a50612950565b5b828203905092915050565b6000612a6782611b0b565b9150612a7283611b0b565b925082612a8257612a816129c8565b5b828206905092915050565b6000612a9882611b0b565b9150612aa383611b0b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ad857612ad7612950565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220727eeab668efcc1c61d47c0d87f9447e6859ad777ad39e45e960406d3033ebde64736f6c634300080b0033",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Does not support burning tokens to address(0). Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}. This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first. It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xde12e1021bb82916df6379505b293d31386e900050483927f20fcbd8ac41a859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0200aa479b89bc2638f8843675242906c479793cab7c34cb9725e1b9f4d4995\",\"dweb:/ipfs/QmZTKbajF1qQUiMEJHYdeXC6GBqa4yKV8SU2LK1Th8o1Di\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002f0038038062002f008339818101604052810190620000379190620002be565b81600190805190602001906200004f92919062000071565b5080600290805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b612b4880620003b86000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb465146102d3578063b88d4fde146102ef578063c87b56dd1461030b578063e985e9c51461033b57610100565b80634f6ccce7146102255780636352211e1461025557806370a082311461028557806395d89b41146102b557610100565b806318160ddd116100d357806318160ddd1461019f57806323b872dd146101bd5780632f745c59146101d957806342842e0e1461020957610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906119ed565b61036b565b60405161012c9190611a35565b60405180910390f35b61013d6104b5565b60405161014a9190611ae9565b60405180910390f35b61016d60048036038101906101689190611b41565b610547565b60405161017a9190611baf565b60405180910390f35b61019d60048036038101906101989190611bf6565b6105cc565b005b6101a76106e5565b6040516101b49190611c45565b60405180910390f35b6101d760048036038101906101d29190611c60565b6106ee565b005b6101f360048036038101906101ee9190611bf6565b6106fe565b6040516102009190611c45565b60405180910390f35b610223600480360381019061021e9190611c60565b6108f0565b005b61023f600480360381019061023a9190611b41565b610910565b60405161024c9190611c45565b60405180910390f35b61026f600480360381019061026a9190611b41565b610963565b60405161027c9190611baf565b60405180910390f35b61029f600480360381019061029a9190611cb3565b610979565b6040516102ac9190611c45565b60405180910390f35b6102bd610a62565b6040516102ca9190611ae9565b60405180910390f35b6102ed60048036038101906102e89190611d0c565b610af4565b005b61030960048036038101906103049190611e81565b610c75565b005b61032560048036038101906103209190611b41565b610cd1565b6040516103329190611ae9565b60405180910390f35b61035560048036038101906103509190611f04565b610d79565b6040516103629190611a35565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061049e57507f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104ae57506104ad82610e0d565b5b9050919050565b6060600180546104c490611f73565b80601f01602080910402602001604051908101604052809291908181526020018280546104f090611f73565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b5050505050905090565b600061055282610e77565b610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890612017565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d782610963565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f906120a9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610667610e84565b73ffffffffffffffffffffffffffffffffffffffff161480610696575061069581610690610e84565b610d79565b5b6106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc9061213b565b60405180910390fd5b6106e0838383610e8c565b505050565b60008054905090565b6106f9838383610f3e565b505050565b600061070983610979565b821061074a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610741906121cd565b60405180910390fd5b60006107546106e5565b905060008060005b838110156108ae576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461084e57806000015192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108a057868414156108975781955050505050506108ea565b83806001019450505b50808060010191505061075c565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e19061225f565b60405180910390fd5b92915050565b61090b83838360405180602001604052806000815250610c75565b505050565b600061091a6106e5565b821061095b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610952906122f1565b60405180910390fd5b819050919050565b600061096e8261147e565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190612383565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b606060028054610a7190611f73565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9d90611f73565b8015610aea5780601f10610abf57610100808354040283529160200191610aea565b820191906000526020600020905b815481529060010190602001808311610acd57829003601f168201915b5050505050905090565b610afc610e84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906123ef565b60405180910390fd5b8060066000610b77610e84565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c24610e84565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c699190611a35565b60405180910390a35050565b610c80848484610f3e565b610c8c84848484611618565b610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc290612481565b60405180910390fd5b50505050565b6060610cdc82610e77565b610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1290612513565b60405180910390fd5b6000610d256117a0565b9050600081511415610d465760405180602001604052806000815250610d71565b80610d50846117b7565b604051602001610d6192919061256f565b6040516020818303038152906040525b915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610f498261147e565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610f70610e84565b73ffffffffffffffffffffffffffffffffffffffff161480610fcc5750610f95610e84565b73ffffffffffffffffffffffffffffffffffffffff16610fb484610547565b73ffffffffffffffffffffffffffffffffffffffff16145b80610fe85750610fe78260000151610fe2610e84565b610d79565b5b90508061102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102190612605565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161461109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390612697565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561110c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110390612729565b60405180910390fd5b6111198585856001611918565b6111296000848460000151610e8c565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160392506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160192506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550836003600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003600085815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600184019050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561140e5761136d81610e77565b1561140d5782600001516003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082602001516003600083815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b50828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611477858585600161191e565b5050505050565b611486611947565b61148f82610e77565b6114ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c5906127bb565b60405180910390fd5b60008290505b600081106115d7576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146115c8578092505050611613565b508080600190039150506114d4565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160a9061284d565b60405180910390fd5b919050565b60006116398473ffffffffffffffffffffffffffffffffffffffff16611924565b15611793578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611662610e84565b8786866040518563ffffffff1660e01b815260040161168494939291906128c2565b6020604051808303816000875af19250505080156116c057506040513d601f19601f820116820180604052508101906116bd9190612923565b60015b611743573d80600081146116f0576040519150601f19603f3d011682016040523d82523d6000602084013e6116f5565b606091505b5060008151141561173b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173290612481565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611798565b600190505b949350505050565b606060405180602001604052806000815250905090565b606060008214156117ff576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611913565b600082905060005b6000821461183157808061181a9061297f565b915050600a8261182a91906129f7565b9150611807565b60008167ffffffffffffffff81111561184d5761184c611d56565b5b6040519080825280601f01601f19166020018201604052801561187f5781602001600182028036833780820191505090505b5090505b6000851461190c576001826118989190612a28565b9150600a856118a79190612a5c565b60306118b39190612a8d565b60f81b8183815181106118c9576118c8612ae3565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561190591906129f7565b9450611883565b8093505050505b919050565b50505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119ca81611995565b81146119d557600080fd5b50565b6000813590506119e7816119c1565b92915050565b600060208284031215611a0357611a0261198b565b5b6000611a11848285016119d8565b91505092915050565b60008115159050919050565b611a2f81611a1a565b82525050565b6000602082019050611a4a6000830184611a26565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a8a578082015181840152602081019050611a6f565b83811115611a99576000848401525b50505050565b6000601f19601f8301169050919050565b6000611abb82611a50565b611ac58185611a5b565b9350611ad5818560208601611a6c565b611ade81611a9f565b840191505092915050565b60006020820190508181036000830152611b038184611ab0565b905092915050565b6000819050919050565b611b1e81611b0b565b8114611b2957600080fd5b50565b600081359050611b3b81611b15565b92915050565b600060208284031215611b5757611b5661198b565b5b6000611b6584828501611b2c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b9982611b6e565b9050919050565b611ba981611b8e565b82525050565b6000602082019050611bc46000830184611ba0565b92915050565b611bd381611b8e565b8114611bde57600080fd5b50565b600081359050611bf081611bca565b92915050565b60008060408385031215611c0d57611c0c61198b565b5b6000611c1b85828601611be1565b9250506020611c2c85828601611b2c565b9150509250929050565b611c3f81611b0b565b82525050565b6000602082019050611c5a6000830184611c36565b92915050565b600080600060608486031215611c7957611c7861198b565b5b6000611c8786828701611be1565b9350506020611c9886828701611be1565b9250506040611ca986828701611b2c565b9150509250925092565b600060208284031215611cc957611cc861198b565b5b6000611cd784828501611be1565b91505092915050565b611ce981611a1a565b8114611cf457600080fd5b50565b600081359050611d0681611ce0565b92915050565b60008060408385031215611d2357611d2261198b565b5b6000611d3185828601611be1565b9250506020611d4285828601611cf7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d8e82611a9f565b810181811067ffffffffffffffff82111715611dad57611dac611d56565b5b80604052505050565b6000611dc0611981565b9050611dcc8282611d85565b919050565b600067ffffffffffffffff821115611dec57611deb611d56565b5b611df582611a9f565b9050602081019050919050565b82818337600083830152505050565b6000611e24611e1f84611dd1565b611db6565b905082815260208101848484011115611e4057611e3f611d51565b5b611e4b848285611e02565b509392505050565b600082601f830112611e6857611e67611d4c565b5b8135611e78848260208601611e11565b91505092915050565b60008060008060808587031215611e9b57611e9a61198b565b5b6000611ea987828801611be1565b9450506020611eba87828801611be1565b9350506040611ecb87828801611b2c565b925050606085013567ffffffffffffffff811115611eec57611eeb611990565b5b611ef887828801611e53565b91505092959194509250565b60008060408385031215611f1b57611f1a61198b565b5b6000611f2985828601611be1565b9250506020611f3a85828601611be1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f8b57607f821691505b60208210811415611f9f57611f9e611f44565b5b50919050565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b6000612001602d83611a5b565b915061200c82611fa5565b604082019050919050565b6000602082019050818103600083015261203081611ff4565b9050919050565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000612093602283611a5b565b915061209e82612037565b604082019050919050565b600060208201905081810360008301526120c281612086565b9050919050565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b6000612125603983611a5b565b9150612130826120c9565b604082019050919050565b6000602082019050818103600083015261215481612118565b9050919050565b7f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b60006121b7602283611a5b565b91506121c28261215b565b604082019050919050565b600060208201905081810360008301526121e6816121aa565b9050919050565b7f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060008201527f6f776e657220627920696e646578000000000000000000000000000000000000602082015250565b6000612249602e83611a5b565b9150612254826121ed565b604082019050919050565b600060208201905081810360008301526122788161223c565b9050919050565b7f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b60006122db602383611a5b565b91506122e68261227f565b604082019050919050565b6000602082019050818103600083015261230a816122ce565b9050919050565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b600061236d602b83611a5b565b915061237882612311565b604082019050919050565b6000602082019050818103600083015261239c81612360565b9050919050565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b60006123d9601a83611a5b565b91506123e4826123a3565b602082019050919050565b60006020820190508181036000830152612408816123cc565b9050919050565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b600061246b603383611a5b565b91506124768261240f565b604082019050919050565b6000602082019050818103600083015261249a8161245e565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b60006124fd602f83611a5b565b9150612508826124a1565b604082019050919050565b6000602082019050818103600083015261252c816124f0565b9050919050565b600081905092915050565b600061254982611a50565b6125538185612533565b9350612563818560208601611a6c565b80840191505092915050565b600061257b828561253e565b9150612587828461253e565b91508190509392505050565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b60006125ef603283611a5b565b91506125fa82612593565b604082019050919050565b6000602082019050818103600083015261261e816125e2565b9050919050565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b6000612681602683611a5b565b915061268c82612625565b604082019050919050565b600060208201905081810360008301526126b081612674565b9050919050565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612713602583611a5b565b915061271e826126b7565b604082019050919050565b6000602082019050818103600083015261274281612706565b9050919050565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b60006127a5602a83611a5b565b91506127b082612749565b604082019050919050565b600060208201905081810360008301526127d481612798565b9050919050565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b6000612837602f83611a5b565b9150612842826127db565b604082019050919050565b600060208201905081810360008301526128668161282a565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006128948261286d565b61289e8185612878565b93506128ae818560208601611a6c565b6128b781611a9f565b840191505092915050565b60006080820190506128d76000830187611ba0565b6128e46020830186611ba0565b6128f16040830185611c36565b81810360608301526129038184612889565b905095945050505050565b60008151905061291d816119c1565b92915050565b6000602082840312156129395761293861198b565b5b60006129478482850161290e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061298a82611b0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156129bd576129bc612950565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612a0282611b0b565b9150612a0d83611b0b565b925082612a1d57612a1c6129c8565b5b828204905092915050565b6000612a3382611b0b565b9150612a3e83611b0b565b925082821015612a5157612a50612950565b5b828203905092915050565b6000612a6782611b0b565b9150612a7283611b0b565b925082612a8257612a816129c8565b5b828206905092915050565b6000612a9882611b0b565b9150612aa383611b0b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ad857612ad7612950565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220186d10edf96d30bd87036a36f5b757d096d042c6a6d20d699ba7bead2ff3909064736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb465146102d3578063b88d4fde146102ef578063c87b56dd1461030b578063e985e9c51461033b57610100565b80634f6ccce7146102255780636352211e1461025557806370a082311461028557806395d89b41146102b557610100565b806318160ddd116100d357806318160ddd1461019f57806323b872dd146101bd5780632f745c59146101d957806342842e0e1461020957610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906119ed565b61036b565b60405161012c9190611a35565b60405180910390f35b61013d6104b5565b60405161014a9190611ae9565b60405180910390f35b61016d60048036038101906101689190611b41565b610547565b60405161017a9190611baf565b60405180910390f35b61019d60048036038101906101989190611bf6565b6105cc565b005b6101a76106e5565b6040516101b49190611c45565b60405180910390f35b6101d760048036038101906101d29190611c60565b6106ee565b005b6101f360048036038101906101ee9190611bf6565b6106fe565b6040516102009190611c45565b60405180910390f35b610223600480360381019061021e9190611c60565b6108f0565b005b61023f600480360381019061023a9190611b41565b610910565b60405161024c9190611c45565b60405180910390f35b61026f600480360381019061026a9190611b41565b610963565b60405161027c9190611baf565b60405180910390f35b61029f600480360381019061029a9190611cb3565b610979565b6040516102ac9190611c45565b60405180910390f35b6102bd610a62565b6040516102ca9190611ae9565b60405180910390f35b6102ed60048036038101906102e89190611d0c565b610af4565b005b61030960048036038101906103049190611e81565b610c75565b005b61032560048036038101906103209190611b41565b610cd1565b6040516103329190611ae9565b60405180910390f35b61035560048036038101906103509190611f04565b610d79565b6040516103629190611a35565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061049e57507f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104ae57506104ad82610e0d565b5b9050919050565b6060600180546104c490611f73565b80601f01602080910402602001604051908101604052809291908181526020018280546104f090611f73565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b5050505050905090565b600061055282610e77565b610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890612017565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d782610963565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f906120a9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610667610e84565b73ffffffffffffffffffffffffffffffffffffffff161480610696575061069581610690610e84565b610d79565b5b6106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc9061213b565b60405180910390fd5b6106e0838383610e8c565b505050565b60008054905090565b6106f9838383610f3e565b505050565b600061070983610979565b821061074a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610741906121cd565b60405180910390fd5b60006107546106e5565b905060008060005b838110156108ae576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461084e57806000015192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108a057868414156108975781955050505050506108ea565b83806001019450505b50808060010191505061075c565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e19061225f565b60405180910390fd5b92915050565b61090b83838360405180602001604052806000815250610c75565b505050565b600061091a6106e5565b821061095b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610952906122f1565b60405180910390fd5b819050919050565b600061096e8261147e565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190612383565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b606060028054610a7190611f73565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9d90611f73565b8015610aea5780601f10610abf57610100808354040283529160200191610aea565b820191906000526020600020905b815481529060010190602001808311610acd57829003601f168201915b5050505050905090565b610afc610e84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906123ef565b60405180910390fd5b8060066000610b77610e84565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c24610e84565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c699190611a35565b60405180910390a35050565b610c80848484610f3e565b610c8c84848484611618565b610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc290612481565b60405180910390fd5b50505050565b6060610cdc82610e77565b610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1290612513565b60405180910390fd5b6000610d256117a0565b9050600081511415610d465760405180602001604052806000815250610d71565b80610d50846117b7565b604051602001610d6192919061256f565b6040516020818303038152906040525b915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610f498261147e565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610f70610e84565b73ffffffffffffffffffffffffffffffffffffffff161480610fcc5750610f95610e84565b73ffffffffffffffffffffffffffffffffffffffff16610fb484610547565b73ffffffffffffffffffffffffffffffffffffffff16145b80610fe85750610fe78260000151610fe2610e84565b610d79565b5b90508061102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102190612605565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161461109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390612697565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561110c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110390612729565b60405180910390fd5b6111198585856001611918565b6111296000848460000151610e8c565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160392506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff160192506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550836003600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003600085815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600184019050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561140e5761136d81610e77565b1561140d5782600001516003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082602001516003600083815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b50828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611477858585600161191e565b5050505050565b611486611947565b61148f82610e77565b6114ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c5906127bb565b60405180910390fd5b60008290505b600081106115d7576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146115c8578092505050611613565b508080600190039150506114d4565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160a9061284d565b60405180910390fd5b919050565b60006116398473ffffffffffffffffffffffffffffffffffffffff16611924565b15611793578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611662610e84565b8786866040518563ffffffff1660e01b815260040161168494939291906128c2565b6020604051808303816000875af19250505080156116c057506040513d601f19601f820116820180604052508101906116bd9190612923565b60015b611743573d80600081146116f0576040519150601f19603f3d011682016040523d82523d6000602084013e6116f5565b606091505b5060008151141561173b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173290612481565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611798565b600190505b949350505050565b606060405180602001604052806000815250905090565b606060008214156117ff576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611913565b600082905060005b6000821461183157808061181a9061297f565b915050600a8261182a91906129f7565b9150611807565b60008167ffffffffffffffff81111561184d5761184c611d56565b5b6040519080825280601f01601f19166020018201604052801561187f5781602001600182028036833780820191505090505b5090505b6000851461190c576001826118989190612a28565b9150600a856118a79190612a5c565b60306118b39190612a8d565b60f81b8183815181106118c9576118c8612ae3565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561190591906129f7565b9450611883565b8093505050505b919050565b50505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119ca81611995565b81146119d557600080fd5b50565b6000813590506119e7816119c1565b92915050565b600060208284031215611a0357611a0261198b565b5b6000611a11848285016119d8565b91505092915050565b60008115159050919050565b611a2f81611a1a565b82525050565b6000602082019050611a4a6000830184611a26565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a8a578082015181840152602081019050611a6f565b83811115611a99576000848401525b50505050565b6000601f19601f8301169050919050565b6000611abb82611a50565b611ac58185611a5b565b9350611ad5818560208601611a6c565b611ade81611a9f565b840191505092915050565b60006020820190508181036000830152611b038184611ab0565b905092915050565b6000819050919050565b611b1e81611b0b565b8114611b2957600080fd5b50565b600081359050611b3b81611b15565b92915050565b600060208284031215611b5757611b5661198b565b5b6000611b6584828501611b2c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b9982611b6e565b9050919050565b611ba981611b8e565b82525050565b6000602082019050611bc46000830184611ba0565b92915050565b611bd381611b8e565b8114611bde57600080fd5b50565b600081359050611bf081611bca565b92915050565b60008060408385031215611c0d57611c0c61198b565b5b6000611c1b85828601611be1565b9250506020611c2c85828601611b2c565b9150509250929050565b611c3f81611b0b565b82525050565b6000602082019050611c5a6000830184611c36565b92915050565b600080600060608486031215611c7957611c7861198b565b5b6000611c8786828701611be1565b9350506020611c9886828701611be1565b9250506040611ca986828701611b2c565b9150509250925092565b600060208284031215611cc957611cc861198b565b5b6000611cd784828501611be1565b91505092915050565b611ce981611a1a565b8114611cf457600080fd5b50565b600081359050611d0681611ce0565b92915050565b60008060408385031215611d2357611d2261198b565b5b6000611d3185828601611be1565b9250506020611d4285828601611cf7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d8e82611a9f565b810181811067ffffffffffffffff82111715611dad57611dac611d56565b5b80604052505050565b6000611dc0611981565b9050611dcc8282611d85565b919050565b600067ffffffffffffffff821115611dec57611deb611d56565b5b611df582611a9f565b9050602081019050919050565b82818337600083830152505050565b6000611e24611e1f84611dd1565b611db6565b905082815260208101848484011115611e4057611e3f611d51565b5b611e4b848285611e02565b509392505050565b600082601f830112611e6857611e67611d4c565b5b8135611e78848260208601611e11565b91505092915050565b60008060008060808587031215611e9b57611e9a61198b565b5b6000611ea987828801611be1565b9450506020611eba87828801611be1565b9350506040611ecb87828801611b2c565b925050606085013567ffffffffffffffff811115611eec57611eeb611990565b5b611ef887828801611e53565b91505092959194509250565b60008060408385031215611f1b57611f1a61198b565b5b6000611f2985828601611be1565b9250506020611f3a85828601611be1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f8b57607f821691505b60208210811415611f9f57611f9e611f44565b5b50919050565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b6000612001602d83611a5b565b915061200c82611fa5565b604082019050919050565b6000602082019050818103600083015261203081611ff4565b9050919050565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000612093602283611a5b565b915061209e82612037565b604082019050919050565b600060208201905081810360008301526120c281612086565b9050919050565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b6000612125603983611a5b565b9150612130826120c9565b604082019050919050565b6000602082019050818103600083015261215481612118565b9050919050565b7f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b60006121b7602283611a5b565b91506121c28261215b565b604082019050919050565b600060208201905081810360008301526121e6816121aa565b9050919050565b7f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060008201527f6f776e657220627920696e646578000000000000000000000000000000000000602082015250565b6000612249602e83611a5b565b9150612254826121ed565b604082019050919050565b600060208201905081810360008301526122788161223c565b9050919050565b7f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b60006122db602383611a5b565b91506122e68261227f565b604082019050919050565b6000602082019050818103600083015261230a816122ce565b9050919050565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b600061236d602b83611a5b565b915061237882612311565b604082019050919050565b6000602082019050818103600083015261239c81612360565b9050919050565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b60006123d9601a83611a5b565b91506123e4826123a3565b602082019050919050565b60006020820190508181036000830152612408816123cc565b9050919050565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b600061246b603383611a5b565b91506124768261240f565b604082019050919050565b6000602082019050818103600083015261249a8161245e565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b60006124fd602f83611a5b565b9150612508826124a1565b604082019050919050565b6000602082019050818103600083015261252c816124f0565b9050919050565b600081905092915050565b600061254982611a50565b6125538185612533565b9350612563818560208601611a6c565b80840191505092915050565b600061257b828561253e565b9150612587828461253e565b91508190509392505050565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b60006125ef603283611a5b565b91506125fa82612593565b604082019050919050565b6000602082019050818103600083015261261e816125e2565b9050919050565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b6000612681602683611a5b565b915061268c82612625565b604082019050919050565b600060208201905081810360008301526126b081612674565b9050919050565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612713602583611a5b565b915061271e826126b7565b604082019050919050565b6000602082019050818103600083015261274281612706565b9050919050565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b60006127a5602a83611a5b565b91506127b082612749565b604082019050919050565b600060208201905081810360008301526127d481612798565b9050919050565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b6000612837602f83611a5b565b9150612842826127db565b604082019050919050565b600060208201905081810360008301526128668161282a565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006128948261286d565b61289e8185612878565b93506128ae818560208601611a6c565b6128b781611a9f565b840191505092915050565b60006080820190506128d76000830187611ba0565b6128e46020830186611ba0565b6128f16040830185611c36565b81810360608301526129038184612889565b905095945050505050565b60008151905061291d816119c1565b92915050565b6000602082840312156129395761293861198b565b5b60006129478482850161290e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061298a82611b0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156129bd576129bc612950565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612a0282611b0b565b9150612a0d83611b0b565b925082612a1d57612a1c6129c8565b5b828204905092915050565b6000612a3382611b0b565b9150612a3e83611b0b565b925082821015612a5157612a50612950565b5b828203905092915050565b6000612a6782611b0b565b9150612a7283611b0b565b925082612a8257612a816129c8565b5b828206905092915050565b6000612a9882611b0b565b9150612aa383611b0b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ad857612ad7612950565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220186d10edf96d30bd87036a36f5b757d096d042c6a6d20d699ba7bead2ff3909064736f6c634300080c0033",
>>>>>>> Till-Pascal
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4093:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:13",
                "type": ""
              }
            ],
            "src": "7:75:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:13"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:13"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "423:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "433:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "433:12:13"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "334:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "546:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "563:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "566:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "556:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:12:13"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "457:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "628:54:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "638:38:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "656:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "663:2:13",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "652:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "652:14:13"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "672:2:13",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "668:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "668:7:13"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "648:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:28:13"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "611:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "621:6:13",
                "type": ""
              }
            ],
            "src": "580:102:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "716:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "733:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "736:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "726:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "726:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "726:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "830:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:4:13",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "823:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "823:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "823:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "854:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "857:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "847:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "847:15:13"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "688:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:238:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "927:58:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "949:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "979:4:13"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "957:21:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "957:27:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "945:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "945:40:13"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "931:10:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1096:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1098:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1098:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1098:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1039:10:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1051:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1036:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:34:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1075:10:13"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1087:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1072:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:22:13"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1033:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1033:62:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1030:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1134:2:13",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1138:10:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1127:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1127:22:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1127:22:13"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "903:6:13",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "911:4:13",
                "type": ""
              }
            ],
            "src": "874:281:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:88:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:30:13",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "1222:18:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1212:6:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1271:6:13"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1279:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "1251:19:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:33:13"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1186:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1195:6:13",
                "type": ""
              }
            ],
            "src": "1161:129:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1363:241:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1468:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1470:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1470:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1470:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1440:6:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:18:13",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1437:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1437:30:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1434:56:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1500:37:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1530:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "1508:21:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:29:13"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1500:4:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1574:23:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1586:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1582:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:15:13"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1574:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1347:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1358:4:13",
                "type": ""
              }
            ],
            "src": "1296:308:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1659:258:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1669:10:13",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1678:1:13",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1673:1:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1738:63:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1763:3:13"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1768:1:13"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1759:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1759:11:13"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1782:3:13"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1787:1:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1778:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1778:11:13"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1772:5:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1772:18:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1752:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1752:39:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1752:39:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1699:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1702:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1696:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1696:13:13"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1710:19:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1712:15:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1721:1:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1724:2:13",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1717:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1717:10:13"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1712:1:13"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1692:3:13",
                    "statements": []
                  },
                  "src": "1688:113:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1835:76:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1885:3:13"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1890:6:13"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1881:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1881:16:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1899:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1874:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1874:27:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1874:27:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1816:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1819:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1813:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1813:13:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1810:101:13"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1641:3:13",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1646:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1651:6:13",
                "type": ""
              }
            ],
            "src": "1610:307:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2018:326:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2028:75:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2095:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2053:41:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2053:49:13"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2037:15:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:66:13"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2028:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2119:5:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2126:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2112:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2112:21:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2142:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2157:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2164:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2153:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:16:13"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2146:3:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2207:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "2209:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2209:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2209:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2188:3:13"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2193:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2184:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2184:16:13"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2202:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2181:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:25:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2178:112:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2321:3:13"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2326:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2331:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2299:21:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2299:39:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2299:39:13"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1991:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1996:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2004:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2012:5:13",
                "type": ""
              }
            ],
            "src": "1923:421:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2437:282:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2486:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "2488:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2488:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2488:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2465:6:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2473:4:13",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2461:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2461:17:13"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2480:3:13"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2457:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2457:27:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2450:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2450:35:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2447:122:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2578:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2598:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2592:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2592:13:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2582:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2614:99:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2686:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2694:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2682:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2682:17:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2701:6:13"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2709:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2623:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2623:90:13"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2614:5:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2415:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2423:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2431:5:13",
                "type": ""
              }
            ],
            "src": "2364:355:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2839:739:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2885:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2887:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2887:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2887:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2860:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2869:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2856:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2856:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2881:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2852:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2852:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "2849:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2978:291:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2993:38:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3017:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3028:1:13",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3013:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3013:17:13"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3007:5:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3007:24:13"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2997:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3078:83:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "3080:77:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3080:79:13"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3080:79:13"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3050:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3058:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3047:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3047:30:13"
                      },
                      "nodeType": "YulIf",
                      "src": "3044:117:13"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3175:84:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3231:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3242:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3227:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3227:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3251:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3185:41:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3185:74:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3175:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3279:292:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3294:39:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3318:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3329:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3314:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3314:18:13"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3308:5:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3308:25:13"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3298:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3380:83:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "3382:77:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3382:79:13"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3382:79:13"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3352:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3360:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3349:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3349:30:13"
                      },
                      "nodeType": "YulIf",
                      "src": "3346:117:13"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3477:84:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3533:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3544:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3529:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3529:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3553:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3487:41:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3487:74:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3477:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2801:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2812:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2824:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2832:6:13",
                "type": ""
              }
            ],
            "src": "2725:853:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3612:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3629:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3632:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3622:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3622:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3622:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3726:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3729:4:13",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3719:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3719:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3719:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3750:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3753:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3743:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3743:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3743:15:13"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "3584:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3821:269:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3831:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3845:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3851:1:13",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3841:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3841:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3831:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3862:38:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3892:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3898:1:13",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3888:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3888:12:13"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3866:18:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3939:51:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3953:27:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3967:6:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3975:4:13",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3963:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3963:17:13"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3953:6:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3919:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3912:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3912:26:13"
                  },
                  "nodeType": "YulIf",
                  "src": "3909:81:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4042:42:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "4056:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4056:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4056:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4006:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4029:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4037:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4026:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4026:14:13"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4003:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4003:38:13"
                  },
                  "nodeType": "YulIf",
                  "src": "4000:84:13"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3805:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3814:6:13",
                "type": ""
              }
            ],
            "src": "3770:320:13"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:30916:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:13",
                "type": ""
              }
            ],
            "src": "7:75:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:13"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:13"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:105:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "388:89:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "403:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "410:66:13",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "399:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:78:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "388:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "360:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "370:7:13",
                "type": ""
              }
            ],
            "src": "334:149:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:78:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "587:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "596:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "589:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "589:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "589:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "554:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "578:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "561:16:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "561:23:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "551:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:34:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:42:13"
                  },
                  "nodeType": "YulIf",
                  "src": "541:62:13"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "524:5:13",
                "type": ""
              }
            ],
            "src": "489:120:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:86:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "698:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "685:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "676:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "740:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "714:25:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:32:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "714:32:13"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "652:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "660:5:13",
                "type": ""
              }
            ],
            "src": "615:137:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "823:262:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "871:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "844:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "853:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "840:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "840:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "865:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "836:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "833:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "962:116:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "977:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "991:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "981:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1006:62:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1040:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1051:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1036:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1036:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1060:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "1016:19:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1016:52:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1006:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "793:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "804:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "816:6:13",
                "type": ""
              }
            ],
            "src": "758:327:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1133:48:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1143:32:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1168:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1161:6:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:13:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:21:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1143:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1115:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1125:7:13",
                "type": ""
              }
            ],
            "src": "1091:90:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1246:50:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1263:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1283:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1268:14:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:21:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1256:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:34:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1256:34:13"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1234:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1241:3:13",
                "type": ""
              }
            ],
            "src": "1187:109:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1394:118:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1404:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1416:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1427:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1412:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1404:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1478:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1502:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1487:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1440:37:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:65:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:65:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1366:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1378:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1389:4:13",
                "type": ""
              }
            ],
            "src": "1302:210:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1577:40:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1588:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1604:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1598:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1598:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1588:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1560:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1570:6:13",
                "type": ""
              }
            ],
            "src": "1518:99:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1719:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1736:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1741:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1729:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1729:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1729:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1757:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1776:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1781:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1772:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1757:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1691:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1696:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1707:11:13",
                "type": ""
              }
            ],
            "src": "1623:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1847:258:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1857:10:13",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1866:1:13",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1861:1:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1926:63:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1951:3:13"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1956:1:13"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1947:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1947:11:13"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1970:3:13"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1975:1:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1966:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1966:11:13"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1960:5:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1960:18:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1940:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1940:39:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1940:39:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1887:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1890:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1884:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:13:13"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1898:19:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1900:15:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1909:1:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1912:2:13",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1905:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1905:10:13"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1900:1:13"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1880:3:13",
                    "statements": []
                  },
                  "src": "1876:113:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2023:76:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2073:3:13"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2078:6:13"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2069:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2069:16:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2087:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2062:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2062:27:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2062:27:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2004:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2007:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2001:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2001:13:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1998:101:13"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1829:3:13",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1834:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1839:6:13",
                "type": ""
              }
            ],
            "src": "1798:307:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2159:54:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2169:38:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2187:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2194:2:13",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2183:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2183:14:13"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2203:2:13",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2199:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2199:7:13"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2179:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2179:28:13"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "2169:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2142:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "2152:6:13",
                "type": ""
              }
            ],
            "src": "2111:102:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2311:272:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2321:53:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2368:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2335:32:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2335:39:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2325:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2383:78:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2449:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2454:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2390:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:71:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2383:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2496:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2503:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2492:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2492:16:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2510:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2515:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2470:21:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2470:52:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2470:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2531:46:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2542:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2569:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2547:21:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2547:29:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2538:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2538:39:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2531:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2292:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2299:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2307:3:13",
                "type": ""
              }
            ],
            "src": "2219:364:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2707:195:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2717:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2729:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2740:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2725:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2717:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2764:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2775:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2760:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2760:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2783:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2789:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2779:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2779:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2753:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2753:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2753:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2809:86:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2881:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2890:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2817:63:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2817:78:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2809:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2679:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2691:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2702:4:13",
                "type": ""
              }
            ],
            "src": "2589:313:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2953:32:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2963:16:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2974:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2963:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2935:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2945:7:13",
                "type": ""
              }
            ],
            "src": "2908:77:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3034:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3091:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3100:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3103:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3093:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3093:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3093:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3057:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3082:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3064:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3064:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3054:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3054:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3047:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3047:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "3044:63:13"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3027:5:13",
                "type": ""
              }
            ],
            "src": "2991:122:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3171:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3181:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3203:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3190:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3181:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3246:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3219:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:33:13"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3149:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3157:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3165:5:13",
                "type": ""
              }
            ],
            "src": "3119:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3330:263:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3376:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3378:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3378:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3378:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3351:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3360:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3347:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3347:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3372:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3343:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "3340:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3469:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3484:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3498:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3488:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3513:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3548:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3559:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3544:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3544:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3568:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3523:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3523:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3513:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3300:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3311:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3323:6:13",
                "type": ""
              }
            ],
            "src": "3264:329:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3644:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3654:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3669:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3676:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3665:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3665:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3654:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3626:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3636:7:13",
                "type": ""
              }
            ],
            "src": "3599:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3776:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3786:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3815:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3797:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3797:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3786:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3758:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3768:7:13",
                "type": ""
              }
            ],
            "src": "3731:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3898:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3915:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3938:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3920:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3920:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3908:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3908:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3908:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3886:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3893:3:13",
                "type": ""
              }
            ],
            "src": "3833:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4055:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4065:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4077:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4088:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4073:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4073:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4065:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4145:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4158:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4169:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4154:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4154:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4101:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4101:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4101:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4027:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4039:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4050:4:13",
                "type": ""
              }
            ],
            "src": "3957:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4228:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4285:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4294:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4297:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4287:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4287:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4287:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4251:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4276:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4258:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4258:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4248:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4248:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4241:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4241:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "4238:63:13"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4221:5:13",
                "type": ""
              }
            ],
            "src": "4185:122:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4365:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4375:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4397:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4384:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4384:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4375:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4440:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4413:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4413:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4413:33:13"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4343:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4351:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4359:5:13",
                "type": ""
              }
            ],
            "src": "4313:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4541:391:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4587:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4589:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4589:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4589:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4562:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4571:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4558:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4558:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4583:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4554:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4554:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "4551:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4680:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4695:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4709:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4699:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4724:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4759:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4770:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4755:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4755:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4779:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4734:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4734:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4724:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4807:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4822:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4836:2:13",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4826:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4852:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4887:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4898:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4883:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4883:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4907:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4862:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4862:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4852:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4503:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4514:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4526:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4534:6:13",
                "type": ""
              }
            ],
            "src": "4458:474:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5003:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5020:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5043:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5025:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5025:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5013:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5013:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5013:37:13"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4991:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4998:3:13",
                "type": ""
              }
            ],
            "src": "4938:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5160:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5170:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5182:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5193:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5178:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5178:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5170:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5250:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5263:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5274:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5259:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5259:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5206:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5206:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5206:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5132:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5144:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5155:4:13",
                "type": ""
              }
            ],
            "src": "5062:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5390:519:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5436:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5438:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5438:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5438:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5411:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5420:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5407:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5407:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5432:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5403:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5403:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "5400:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5529:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5544:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5558:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5548:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5573:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5608:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5619:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5604:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5604:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5628:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5583:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5583:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5573:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5656:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5671:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5685:2:13",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5675:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5701:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5736:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5747:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5732:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5732:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5756:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5711:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5711:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5701:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5784:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5799:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5813:2:13",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5803:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5829:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5864:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5875:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5860:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5860:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5884:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5839:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5839:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5829:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5344:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5355:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5367:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5375:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5383:6:13",
                "type": ""
              }
            ],
            "src": "5290:619:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5981:263:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6027:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6029:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6029:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6029:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6002:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6011:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5998:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5998:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6023:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5994:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5994:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "5991:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6120:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6135:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6149:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6139:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6164:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6199:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6210:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6195:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6195:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6219:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6174:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6174:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6164:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5951:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5962:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5974:6:13",
                "type": ""
              }
            ],
            "src": "5915:329:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6290:76:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6344:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6353:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6356:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6346:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6346:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6346:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6313:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6335:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "6320:14:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6320:21:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6310:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6310:32:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6303:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6303:40:13"
                  },
                  "nodeType": "YulIf",
                  "src": "6300:60:13"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6283:5:13",
                "type": ""
              }
            ],
            "src": "6250:116:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6421:84:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6431:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6453:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6440:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6440:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6431:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6493:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6469:23:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6469:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6469:30:13"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6399:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6407:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6415:5:13",
                "type": ""
              }
            ],
            "src": "6372:133:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6591:388:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6637:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6639:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6639:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6639:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6612:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6621:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6608:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6608:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6633:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6604:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "6601:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6730:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6745:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6759:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6749:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6774:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6809:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6820:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6805:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6805:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6829:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6784:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6784:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6774:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6857:115:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6872:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6886:2:13",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6876:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6902:60:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6934:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6945:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6930:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6930:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6954:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "6912:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6912:50:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6902:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6553:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6564:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6576:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6584:6:13",
                "type": ""
              }
            ],
            "src": "6511:468:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7074:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7091:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7094:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7084:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7084:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7084:12:13"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "6985:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7197:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7214:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7217:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7207:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7207:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7207:12:13"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "7108:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7259:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7276:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7279:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7269:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7269:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7269:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7373:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7376:4:13",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7366:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7366:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7366:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7397:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7400:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7390:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7390:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7390:15:13"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7231:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7460:238:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7470:58:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7492:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "7522:4:13"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "7500:21:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7500:27:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7488:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7488:40:13"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7474:10:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7639:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7641:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7641:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7641:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7582:10:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7594:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7579:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7579:34:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7618:10:13"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7630:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7615:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7615:22:13"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7576:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7576:62:13"
                  },
                  "nodeType": "YulIf",
                  "src": "7573:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7677:2:13",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7681:10:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7670:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7670:22:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7670:22:13"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7446:6:13",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7454:4:13",
                "type": ""
              }
            ],
            "src": "7417:281:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7745:88:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7755:30:13",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "7765:18:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7765:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7755:6:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7814:6:13"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7822:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "7794:19:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7794:33:13"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7729:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7738:6:13",
                "type": ""
              }
            ],
            "src": "7704:129:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7905:241:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8010:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8012:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8012:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8012:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7982:6:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7990:18:13",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7979:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7979:30:13"
                  },
                  "nodeType": "YulIf",
                  "src": "7976:56:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8042:37:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8072:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "8050:21:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8050:29:13"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8042:4:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8116:23:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "8128:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8134:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8124:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8124:15:13"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8116:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7889:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7900:4:13",
                "type": ""
              }
            ],
            "src": "7839:307:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8203:103:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "8226:3:13"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "8231:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8236:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "8213:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8213:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8213:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "8284:3:13"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8289:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8280:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8280:16:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8298:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8273:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8273:27:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8273:27:13"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8185:3:13",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8190:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8195:6:13",
                "type": ""
              }
            ],
            "src": "8152:154:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8395:327:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8405:74:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8471:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8430:40:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8430:48:13"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8414:15:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8414:65:13"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "8405:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "8495:5:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8502:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8488:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8488:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8488:21:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8518:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "8533:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8540:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8529:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8529:16:13"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "8522:3:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8583:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "8585:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8585:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8585:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "8564:3:13"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8569:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8560:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8560:16:13"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "8578:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8557:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8557:25:13"
                  },
                  "nodeType": "YulIf",
                  "src": "8554:112:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "8699:3:13"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "8704:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8709:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8675:23:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8675:41:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8675:41:13"
                }
              ]
            },
            "name": "abi_decode_available_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8368:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8373:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8381:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "8389:5:13",
                "type": ""
              }
            ],
            "src": "8312:410:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8802:277:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8851:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "8853:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8853:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8853:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8830:6:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8838:4:13",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8826:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8826:17:13"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "8845:3:13"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8822:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8822:27:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8815:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8815:35:13"
                  },
                  "nodeType": "YulIf",
                  "src": "8812:122:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8943:34:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8970:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8957:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8957:20:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8947:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8986:87:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9046:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9054:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9042:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9042:17:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9061:6:13"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "9069:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "8995:46:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8995:78:13"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "8986:5:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8780:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8788:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "8796:5:13",
                "type": ""
              }
            ],
            "src": "8741:338:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9211:817:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9258:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9260:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9260:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9260:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9232:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9241:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9228:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9228:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9253:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9224:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9224:33:13"
                  },
                  "nodeType": "YulIf",
                  "src": "9221:120:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9351:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9366:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9380:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9370:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9395:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9430:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9441:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9426:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9426:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9450:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9405:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9405:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9395:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9478:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9493:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9507:2:13",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9497:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9523:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9558:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9569:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9554:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9554:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9578:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9533:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9533:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9523:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9606:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9621:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9635:2:13",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9625:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9651:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9686:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9697:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9682:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9682:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9706:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9661:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9661:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "9651:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9734:287:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9749:46:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9780:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9791:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9776:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9776:18:13"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9763:12:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9763:32:13"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9753:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9842:83:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "9844:77:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9844:79:13"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9844:79:13"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9814:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9822:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9811:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9811:30:13"
                      },
                      "nodeType": "YulIf",
                      "src": "9808:117:13"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9939:72:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9983:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9994:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9979:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9979:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10003:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "9949:29:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9949:62:13"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "9939:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9157:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9168:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9180:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9188:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9196:6:13",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9204:6:13",
                "type": ""
              }
            ],
            "src": "9085:943:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10117:391:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10163:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10165:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10165:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10165:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10138:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10147:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10134:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10134:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10159:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10130:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10130:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "10127:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10256:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10271:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10285:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10275:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10300:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10335:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10346:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10331:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10331:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10355:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10310:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10310:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10300:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10383:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10398:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10412:2:13",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10402:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10428:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10463:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10474:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10459:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10459:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10483:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10438:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10438:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "10428:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10079:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10090:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10102:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10110:6:13",
                "type": ""
              }
            ],
            "src": "10034:474:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10542:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10559:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10562:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10552:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10552:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10552:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10656:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10659:4:13",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10649:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10649:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10649:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10680:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10683:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10673:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10673:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10673:15:13"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "10514:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10751:269:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10761:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "10775:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10781:1:13",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10771:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10771:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "10761:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10792:38:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "10822:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10828:1:13",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10818:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10818:12:13"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "10796:18:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10869:51:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10883:27:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "10897:6:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10905:4:13",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10893:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10893:17:13"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10883:6:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "10849:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10842:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10842:26:13"
                  },
                  "nodeType": "YulIf",
                  "src": "10839:81:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10972:42:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "10986:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10986:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10986:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "10936:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10959:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10967:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10956:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10956:14:13"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10933:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10933:38:13"
                  },
                  "nodeType": "YulIf",
                  "src": "10930:84:13"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "10735:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10744:6:13",
                "type": ""
              }
            ],
            "src": "10700:320:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11132:126:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11154:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11162:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11150:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11150:14:13"
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11166:34:13",
                        "type": "",
                        "value": "ERC721A: approved query for none"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11143:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11143:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11143:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11222:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11230:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11218:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11218:15:13"
                      },
                      {
                        "hexValue": "78697374656e7420746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11235:15:13",
                        "type": "",
                        "value": "xistent token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11211:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11211:40:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11211:40:13"
                }
              ]
            },
            "name": "store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11124:6:13",
                "type": ""
              }
            ],
            "src": "11026:232:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11410:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11420:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11486:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11491:2:13",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11427:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11427:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11420:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11592:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
                      "nodeType": "YulIdentifier",
                      "src": "11503:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11503:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11503:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11605:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11616:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11621:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11612:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11612:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11605:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11398:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11406:3:13",
                "type": ""
              }
            ],
            "src": "11264:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11807:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11817:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11829:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11840:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11825:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11825:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11817:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11864:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11875:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11860:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11860:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11883:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11889:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11879:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11879:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11853:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11853:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11853:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11909:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12043:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11917:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11917:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11909:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11787:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11802:4:13",
                "type": ""
              }
            ],
            "src": "11636:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12167:115:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12189:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12197:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12185:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12185:14:13"
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12201:34:13",
                        "type": "",
                        "value": "ERC721A: approval to current own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12178:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12178:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12178:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12257:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12265:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12253:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12253:15:13"
                      },
                      {
                        "hexValue": "6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12270:4:13",
                        "type": "",
                        "value": "er"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12246:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12246:29:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12246:29:13"
                }
              ]
            },
            "name": "store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12159:6:13",
                "type": ""
              }
            ],
            "src": "12061:221:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12434:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12444:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12510:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12515:2:13",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12451:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12451:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12444:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12616:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
                      "nodeType": "YulIdentifier",
                      "src": "12527:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12527:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12527:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12629:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12640:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12645:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12636:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12636:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12629:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12422:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12430:3:13",
                "type": ""
              }
            ],
            "src": "12288:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12831:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12841:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12853:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12864:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12849:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12849:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12841:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12888:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12899:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12884:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12884:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12907:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12913:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12903:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12903:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12877:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12877:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12877:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12933:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13067:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12941:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12941:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12933:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12811:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12826:4:13",
                "type": ""
              }
            ],
            "src": "12660:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13191:138:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13213:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13221:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13209:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13209:14:13"
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13225:34:13",
                        "type": "",
                        "value": "ERC721A: approve caller is not o"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13202:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13202:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13202:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13281:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13289:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13277:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13277:15:13"
                      },
                      {
                        "hexValue": "776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13294:27:13",
                        "type": "",
                        "value": "wner nor approved for all"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13270:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13270:52:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13270:52:13"
                }
              ]
            },
            "name": "store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13183:6:13",
                "type": ""
              }
            ],
            "src": "13085:244:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13481:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13491:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13557:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13562:2:13",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13498:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13498:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13491:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13663:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
                      "nodeType": "YulIdentifier",
                      "src": "13574:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13574:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13574:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13676:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13687:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13692:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13683:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13683:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13676:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13469:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13477:3:13",
                "type": ""
              }
            ],
            "src": "13335:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13878:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13888:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13900:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13911:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13896:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13896:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13888:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13935:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13946:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13931:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13931:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13954:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13960:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13950:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13950:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13924:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13924:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13924:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13980:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14114:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13988:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13988:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13980:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13858:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13873:4:13",
                "type": ""
              }
            ],
            "src": "13707:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14238:115:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14260:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14268:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14256:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14256:14:13"
                      },
                      {
                        "hexValue": "455243373231413a206f776e657220696e646578206f7574206f6620626f756e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14272:34:13",
                        "type": "",
                        "value": "ERC721A: owner index out of boun"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14249:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14249:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14249:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14328:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14336:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14324:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14324:15:13"
                      },
                      {
                        "hexValue": "6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14341:4:13",
                        "type": "",
                        "value": "ds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14317:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14317:29:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14317:29:13"
                }
              ]
            },
            "name": "store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14230:6:13",
                "type": ""
              }
            ],
            "src": "14132:221:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14505:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14515:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14581:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14586:2:13",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14522:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14522:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14515:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14687:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
                      "nodeType": "YulIdentifier",
                      "src": "14598:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14598:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14598:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14700:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14711:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14716:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14707:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14707:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14700:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14493:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14501:3:13",
                "type": ""
              }
            ],
            "src": "14359:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14902:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14912:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14924:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14935:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14920:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14920:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14912:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14959:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14970:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14955:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14955:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14978:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14984:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14974:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14974:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14948:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14948:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14948:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15004:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15138:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15012:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15012:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15004:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14882:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14897:4:13",
                "type": ""
              }
            ],
            "src": "14731:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15262:127:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15284:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15292:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15280:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15280:14:13"
                      },
                      {
                        "hexValue": "455243373231413a20756e61626c6520746f2067657420746f6b656e206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15296:34:13",
                        "type": "",
                        "value": "ERC721A: unable to get token of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15273:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15273:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15273:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15352:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15360:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15348:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15348:15:13"
                      },
                      {
                        "hexValue": "6f776e657220627920696e646578",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15365:16:13",
                        "type": "",
                        "value": "owner by index"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15341:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15341:41:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15341:41:13"
                }
              ]
            },
            "name": "store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15254:6:13",
                "type": ""
              }
            ],
            "src": "15156:233:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15541:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15551:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15617:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15622:2:13",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15558:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15558:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15551:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15723:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
                      "nodeType": "YulIdentifier",
                      "src": "15634:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15634:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15634:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15736:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15747:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15752:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15743:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15743:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15736:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15529:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15537:3:13",
                "type": ""
              }
            ],
            "src": "15395:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15938:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15948:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15960:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15971:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15956:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15956:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15948:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15995:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16006:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15991:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15991:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16014:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16020:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16010:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16010:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15984:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15984:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15984:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16040:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16174:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16048:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16048:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16040:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15918:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15933:4:13",
                "type": ""
              }
            ],
            "src": "15767:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16298:116:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16320:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16328:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16316:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16316:14:13"
                      },
                      {
                        "hexValue": "455243373231413a20676c6f62616c20696e646578206f7574206f6620626f75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16332:34:13",
                        "type": "",
                        "value": "ERC721A: global index out of bou"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16309:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16309:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16309:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16388:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16396:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16384:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16384:15:13"
                      },
                      {
                        "hexValue": "6e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16401:5:13",
                        "type": "",
                        "value": "nds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16377:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16377:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16377:30:13"
                }
              ]
            },
            "name": "store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16290:6:13",
                "type": ""
              }
            ],
            "src": "16192:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16566:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16576:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16642:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16647:2:13",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16583:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16583:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16576:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16748:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
                      "nodeType": "YulIdentifier",
                      "src": "16659:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16659:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16659:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16761:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16772:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16777:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16768:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16768:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16761:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16554:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16562:3:13",
                "type": ""
              }
            ],
            "src": "16420:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16963:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16973:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16985:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16996:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16981:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16981:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16973:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17020:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17031:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17016:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17016:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17039:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17045:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17035:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17035:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17009:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17009:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17009:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17065:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17199:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17073:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17073:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17065:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16943:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16958:4:13",
                "type": ""
              }
            ],
            "src": "16792:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17323:124:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17345:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17353:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17341:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17341:14:13"
                      },
                      {
                        "hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17357:34:13",
                        "type": "",
                        "value": "ERC721A: balance query for the z"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17334:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17334:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17334:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17413:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17421:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17409:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17409:15:13"
                      },
                      {
                        "hexValue": "65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17426:13:13",
                        "type": "",
                        "value": "ero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17402:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17402:38:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17402:38:13"
                }
              ]
            },
            "name": "store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17315:6:13",
                "type": ""
              }
            ],
            "src": "17217:230:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17599:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17609:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17675:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17680:2:13",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17616:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17616:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17609:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17781:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
                      "nodeType": "YulIdentifier",
                      "src": "17692:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17692:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17692:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17794:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17805:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17810:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17801:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17801:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17794:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17587:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17595:3:13",
                "type": ""
              }
            ],
            "src": "17453:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17996:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18006:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18018:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18029:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18014:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18014:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18006:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18053:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18064:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18049:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18049:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18072:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18078:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18068:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18068:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18042:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18042:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18042:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18098:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18232:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18106:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18106:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18098:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17976:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17991:4:13",
                "type": ""
              }
            ],
            "src": "17825:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18356:70:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18378:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18386:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18374:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18374:14:13"
                      },
                      {
                        "hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18390:28:13",
                        "type": "",
                        "value": "ERC721A: approve to caller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18367:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18367:52:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18367:52:13"
                }
              ]
            },
            "name": "store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18348:6:13",
                "type": ""
              }
            ],
            "src": "18250:176:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18578:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18588:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18654:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18659:2:13",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18595:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18595:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18588:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18760:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
                      "nodeType": "YulIdentifier",
                      "src": "18671:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18671:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18671:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18773:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18784:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18789:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18780:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18780:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18773:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18566:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18574:3:13",
                "type": ""
              }
            ],
            "src": "18432:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18975:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18985:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18997:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19008:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18993:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18993:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18985:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19032:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19043:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19028:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19028:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19051:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19057:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19047:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19047:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19021:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19021:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19021:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19077:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19211:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19085:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19085:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19077:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18955:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18970:4:13",
                "type": ""
              }
            ],
            "src": "18804:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19335:132:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19357:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19365:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19353:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19353:14:13"
                      },
                      {
                        "hexValue": "455243373231413a207472616e7366657220746f206e6f6e2045524337323152",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19369:34:13",
                        "type": "",
                        "value": "ERC721A: transfer to non ERC721R"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19346:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19346:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19346:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19425:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19433:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19421:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19421:15:13"
                      },
                      {
                        "hexValue": "6563656976657220696d706c656d656e746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19438:21:13",
                        "type": "",
                        "value": "eceiver implementer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19414:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19414:46:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19414:46:13"
                }
              ]
            },
            "name": "store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19327:6:13",
                "type": ""
              }
            ],
            "src": "19229:238:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19619:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19629:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19695:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19700:2:13",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19636:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19636:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19629:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19801:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                      "nodeType": "YulIdentifier",
                      "src": "19712:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19712:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19712:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19814:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19825:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19830:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19821:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19821:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19814:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19607:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19615:3:13",
                "type": ""
              }
            ],
            "src": "19473:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20016:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20026:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20038:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20049:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20034:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20034:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20026:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20073:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20084:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20069:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20069:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20092:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20098:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20088:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20088:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20062:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20062:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20062:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20118:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20252:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20126:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20126:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20118:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19996:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20011:4:13",
                "type": ""
              }
            ],
            "src": "19845:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20376:128:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20398:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20406:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20394:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20394:14:13"
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20410:34:13",
                        "type": "",
                        "value": "ERC721Metadata: URI query for no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20387:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20387:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20387:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20466:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20474:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20462:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20462:15:13"
                      },
                      {
                        "hexValue": "6e6578697374656e7420746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20479:17:13",
                        "type": "",
                        "value": "nexistent token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20455:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20455:42:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20455:42:13"
                }
              ]
            },
            "name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20368:6:13",
                "type": ""
              }
            ],
            "src": "20270:234:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20656:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20666:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20732:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20737:2:13",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20673:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20673:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20666:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20838:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                      "nodeType": "YulIdentifier",
                      "src": "20749:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20749:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20749:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20851:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20862:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20867:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20858:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20858:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20851:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20644:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20652:3:13",
                "type": ""
              }
            ],
            "src": "20510:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21053:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21063:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21075:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21086:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21071:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21071:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21063:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21110:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21121:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21106:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21106:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21129:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21135:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21125:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21125:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21099:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21099:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21099:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21155:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21289:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21163:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21163:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21155:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21033:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21048:4:13",
                "type": ""
              }
            ],
            "src": "20882:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21421:34:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21431:18:13",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "21446:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "21431:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21393:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "21398:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "21409:11:13",
                "type": ""
              }
            ],
            "src": "21307:148:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21571:267:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21581:53:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21628:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "21595:32:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21595:39:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21585:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21643:96:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21727:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21732:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21650:76:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21650:89:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21643:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21774:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21781:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21770:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21770:16:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21788:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21793:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21748:21:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21748:52:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21748:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21809:23:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21820:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21825:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21816:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21816:16:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21809:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21552:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21559:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21567:3:13",
                "type": ""
              }
            ],
            "src": "21461:377:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22028:251:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22039:102:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22128:6:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22137:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22046:81:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22046:95:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22039:3:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22151:102:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22240:6:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22249:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22158:81:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22158:95:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22151:3:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22263:10:13",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "22270:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22263:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21999:3:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22005:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22013:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22024:3:13",
                "type": ""
              }
            ],
            "src": "21844:435:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22391:131:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22413:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22421:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22409:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22409:14:13"
                      },
                      {
                        "hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22425:34:13",
                        "type": "",
                        "value": "ERC721A: transfer caller is not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22402:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22402:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22402:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22481:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22489:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22477:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22477:15:13"
                      },
                      {
                        "hexValue": "6f776e6572206e6f7220617070726f766564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22494:20:13",
                        "type": "",
                        "value": "owner nor approved"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22470:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22470:45:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22470:45:13"
                }
              ]
            },
            "name": "store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22383:6:13",
                "type": ""
              }
            ],
            "src": "22285:237:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22674:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22684:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22750:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22755:2:13",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22691:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22691:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22684:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22856:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
                      "nodeType": "YulIdentifier",
                      "src": "22767:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22767:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22767:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22869:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22880:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22885:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22876:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22876:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22869:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22662:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22670:3:13",
                "type": ""
              }
            ],
            "src": "22528:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23071:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23081:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23093:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23104:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23089:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23089:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23081:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23128:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23139:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23124:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23124:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23147:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23153:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23143:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23143:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23117:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23117:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23117:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23173:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "23307:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23181:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23181:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23173:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23051:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23066:4:13",
                "type": ""
              }
            ],
            "src": "22900:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23431:119:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23453:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23461:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23449:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23449:14:13"
                      },
                      {
                        "hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23465:34:13",
                        "type": "",
                        "value": "ERC721A: transfer from incorrect"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23442:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23442:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23442:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23521:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23529:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23517:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23517:15:13"
                      },
                      {
                        "hexValue": "206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23534:8:13",
                        "type": "",
                        "value": " owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23510:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23510:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23510:33:13"
                }
              ]
            },
            "name": "store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23423:6:13",
                "type": ""
              }
            ],
            "src": "23325:225:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23702:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23712:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23778:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23783:2:13",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23719:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23719:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "23712:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23884:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
                      "nodeType": "YulIdentifier",
                      "src": "23795:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23795:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23795:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23897:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23908:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23913:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23904:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23904:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23897:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23690:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23698:3:13",
                "type": ""
              }
            ],
            "src": "23556:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24099:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24109:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24121:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24132:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24117:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24117:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24109:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24156:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24167:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24152:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24152:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "24175:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24181:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24171:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24171:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24145:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24145:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24145:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24201:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "24335:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24209:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24209:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24201:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24079:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24094:4:13",
                "type": ""
              }
            ],
            "src": "23928:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24459:118:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24481:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24489:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24477:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24477:14:13"
                      },
                      {
                        "hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24493:34:13",
                        "type": "",
                        "value": "ERC721A: transfer to the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24470:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24470:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24470:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24549:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24557:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24545:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24545:15:13"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24562:7:13",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24538:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24538:32:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24538:32:13"
                }
              ]
            },
            "name": "store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24451:6:13",
                "type": ""
              }
            ],
            "src": "24353:224:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24729:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24739:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24805:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24810:2:13",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24746:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24746:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24739:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24911:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
                      "nodeType": "YulIdentifier",
                      "src": "24822:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24822:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24822:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24924:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24935:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24940:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24931:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24931:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24924:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24717:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24725:3:13",
                "type": ""
              }
            ],
            "src": "24583:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25126:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25136:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25148:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25159:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25144:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25144:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25136:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25183:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25194:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25179:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25179:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25202:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25208:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25198:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25198:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25172:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25172:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25172:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25228:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25362:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25236:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25236:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25228:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25106:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25121:4:13",
                "type": ""
              }
            ],
            "src": "24955:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25486:123:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25508:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25516:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25504:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25504:14:13"
                      },
                      {
                        "hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e65786973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25520:34:13",
                        "type": "",
                        "value": "ERC721A: owner query for nonexis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25497:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25497:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25497:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25576:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25584:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25572:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25572:15:13"
                      },
                      {
                        "hexValue": "74656e7420746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25589:12:13",
                        "type": "",
                        "value": "tent token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25565:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25565:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25565:37:13"
                }
              ]
            },
            "name": "store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25478:6:13",
                "type": ""
              }
            ],
            "src": "25380:229:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25761:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25771:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25837:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25842:2:13",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25778:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25778:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25771:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25943:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
                      "nodeType": "YulIdentifier",
                      "src": "25854:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25854:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25854:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25956:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25967:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25972:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25963:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25963:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25956:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25749:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25757:3:13",
                "type": ""
              }
            ],
            "src": "25615:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26158:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26168:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26180:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26191:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26176:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26176:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26168:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26215:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26226:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26211:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26211:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26234:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26240:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26230:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26230:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26204:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26204:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26204:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26260:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26394:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26268:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26268:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26260:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26138:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26153:4:13",
                "type": ""
              }
            ],
            "src": "25987:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26518:128:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26540:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26548:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26536:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26536:14:13"
                      },
                      {
                        "hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26552:34:13",
                        "type": "",
                        "value": "ERC721A: unable to determine the"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26529:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26529:58:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26529:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26608:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26616:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26604:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26604:15:13"
                      },
                      {
                        "hexValue": "206f776e6572206f6620746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26621:17:13",
                        "type": "",
                        "value": " owner of token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26597:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26597:42:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26597:42:13"
                }
              ]
            },
            "name": "store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26510:6:13",
                "type": ""
              }
            ],
            "src": "26412:234:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26798:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26808:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26874:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26879:2:13",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26815:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26815:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "26808:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26980:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
                      "nodeType": "YulIdentifier",
                      "src": "26891:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26891:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26891:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26993:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27004:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27009:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27000:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27000:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "26993:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "26786:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "26794:3:13",
                "type": ""
              }
            ],
            "src": "26652:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27195:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27205:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27217:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27228:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27213:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27213:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27205:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27252:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27263:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27248:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27248:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27271:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27277:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27267:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27267:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27241:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27241:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27241:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27297:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27431:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27305:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27305:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27297:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27175:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27190:4:13",
                "type": ""
              }
            ],
            "src": "27024:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27507:40:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27518:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "27534:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "27528:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27528:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "27518:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "27490:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "27500:6:13",
                "type": ""
              }
            ],
            "src": "27449:98:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27648:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27665:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "27670:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27658:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27658:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27658:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27686:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27705:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27710:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27701:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27701:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "27686:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27620:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "27625:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "27636:11:13",
                "type": ""
              }
            ],
            "src": "27553:168:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27817:270:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "27827:52:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "27873:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "27841:31:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27841:38:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "27831:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27888:77:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27953:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "27958:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27895:57:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27895:70:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27888:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28000:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28007:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27996:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27996:16:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28014:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "28019:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "27974:21:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27974:52:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27974:52:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28035:46:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28046:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "28073:6:13"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "28051:21:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28051:29:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28042:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28042:39:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "28035:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "27798:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27805:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27813:3:13",
                "type": ""
              }
            ],
            "src": "27727:360:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28293:440:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28303:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28315:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28326:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28311:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28311:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28303:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "28384:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28397:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28408:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28393:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28393:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28340:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28340:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28340:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "28465:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28478:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28489:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28474:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28474:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28421:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28421:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28421:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "28547:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28560:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28571:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28556:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28556:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28503:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28503:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28503:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28596:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28607:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28592:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28592:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28616:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28622:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28612:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28612:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28585:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28585:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28585:48:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28642:84:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "28712:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28721:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28650:61:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28650:76:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28642:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28241:9:13",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "28253:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "28261:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "28269:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "28277:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28288:4:13",
                "type": ""
              }
            ],
            "src": "28093:640:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28801:79:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28811:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "28826:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "28820:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28820:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "28811:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "28868:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "28842:25:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28842:32:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28842:32:13"
                }
              ]
            },
            "name": "abi_decode_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "28779:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "28787:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "28795:5:13",
                "type": ""
              }
            ],
            "src": "28739:141:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28962:273:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "29008:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "29010:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "29010:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "29010:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "28983:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28992:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28979:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28979:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29004:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "28975:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28975:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "28972:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "29101:127:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "29116:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29130:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "29120:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "29145:73:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "29190:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "29201:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "29186:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "29186:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "29210:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "29155:30:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29155:63:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "29145:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28932:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "28943:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "28955:6:13",
                "type": ""
              }
            ],
            "src": "28886:349:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29269:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29286:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29289:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29279:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29279:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29279:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29383:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29386:4:13",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29376:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29376:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29376:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29407:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29410:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "29400:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29400:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29400:15:13"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "29241:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29470:190:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29480:33:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "29507:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "29489:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29489:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "29480:5:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "29603:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "29605:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "29605:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "29605:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "29528:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29535:66:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "29525:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29525:77:13"
                  },
                  "nodeType": "YulIf",
                  "src": "29522:103:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29634:20:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "29645:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29652:1:13",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29641:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29641:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "29634:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "29456:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "29466:3:13",
                "type": ""
              }
            ],
            "src": "29427:233:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29694:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29711:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29714:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29704:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29704:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29704:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29808:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29811:4:13",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29801:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29801:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29801:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29832:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29835:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "29825:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29825:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29825:15:13"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "29666:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29894:143:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29904:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "29927:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "29909:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29909:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "29904:1:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29938:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "29961:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "29943:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29943:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "29938:1:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "29985:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "29987:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "29987:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "29987:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "29982:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "29975:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29975:9:13"
                  },
                  "nodeType": "YulIf",
                  "src": "29972:35:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30017:14:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30026:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30029:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "30022:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30022:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "30017:1:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "29883:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "29886:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "29892:1:13",
                "type": ""
              }
            ],
            "src": "29852:185:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30088:146:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30098:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30121:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30103:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30103:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "30098:1:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30132:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30155:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30137:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30137:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "30132:1:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30179:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "30181:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30181:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30181:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30173:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30176:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "30170:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30170:8:13"
                  },
                  "nodeType": "YulIf",
                  "src": "30167:34:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30211:17:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30223:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30226:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "30219:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30219:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "30211:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "30074:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "30077:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "30083:4:13",
                "type": ""
              }
            ],
            "src": "30043:191:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30274:142:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30284:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30307:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30289:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30289:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "30284:1:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30318:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30341:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30323:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30323:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "30318:1:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30365:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "30367:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30367:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30367:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30362:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "30355:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30355:9:13"
                  },
                  "nodeType": "YulIf",
                  "src": "30352:35:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30396:14:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30405:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30408:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "30401:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30401:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "30396:1:13"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "30263:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "30266:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "30272:1:13",
                "type": ""
              }
            ],
            "src": "30240:176:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30466:261:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30476:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30499:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30481:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30481:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "30476:1:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30510:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30533:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30515:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30515:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "30510:1:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30673:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "30675:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30675:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30675:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30594:1:13"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30601:66:13",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "30669:1:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "30597:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30597:74:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "30591:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30591:81:13"
                  },
                  "nodeType": "YulIf",
                  "src": "30588:107:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30705:16:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "30716:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "30719:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30712:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30712:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "30705:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "30453:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "30456:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "30462:3:13",
                "type": ""
              }
            ],
            "src": "30422:305:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30761:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30778:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30781:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30771:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30771:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30771:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30875:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30878:4:13",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30868:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30868:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30868:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30899:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30902:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "30892:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30892:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30892:15:13"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "30733:180:13"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approved query for none\")\n\n        mstore(add(memPtr, 32), \"xistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approval to current own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approve caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: owner index out of boun\")\n\n        mstore(add(memPtr, 32), \"ds\")\n\n    }\n\n    function abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: unable to get token of \")\n\n        mstore(add(memPtr, 32), \"owner by index\")\n\n    }\n\n    function abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: global index out of bou\")\n\n        mstore(add(memPtr, 32), \"nds\")\n\n    }\n\n    function abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer to non ERC721R\")\n\n        mstore(add(memPtr, 32), \"eceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer from incorrect\")\n\n        mstore(add(memPtr, 32), \" owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: owner query for nonexis\")\n\n        mstore(add(memPtr, 32), \"tent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: unable to determine the\")\n\n        mstore(add(memPtr, 32), \" owner of token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< HEAD
  "sourceMap": "1033:15643:9:-:0;;;2058:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2132:5;2124;:13;;;;;;;;;;;;:::i;:::-;;2157:7;2147;:17;;;;;;;;;;;;:::i;:::-;;2058:113;;1033:15643;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1033:15643:9:-;;;;;;;",
  "deployedSourceMap": "1033:15643:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3940:366;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5776:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7290:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6826:403;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2242:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8140:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2889:984;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8362:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2412:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5592:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4365:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5938:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7567:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8599:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6106:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7916:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3940:366;4042:4;4092:25;4077:40;;;:11;:40;;;;:104;;;;4148:33;4133:48;;;:11;:48;;;;4077:104;:170;;;;4212:35;4197:50;;;:11;:50;;;;4077:170;:222;;;;4263:36;4287:11;4263:23;:36::i;:::-;4077:222;4058:241;;3940:366;;;:::o;5776:98::-;5830:13;5862:5;5855:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5776:98;:::o;7290:210::-;7358:7;7385:16;7393:7;7385;:16::i;:::-;7377:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7469:15;:24;7485:7;7469:24;;;;;;;;;;;;;;;;;;;;;7462:31;;7290:210;;;:::o;6826:403::-;6898:13;6914:24;6930:7;6914:15;:24::i;:::-;6898:40;;6962:5;6956:11;;:2;:11;;;;6948:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7054:5;7038:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;7063:37;7080:5;7087:12;:10;:12::i;:::-;7063:16;:37::i;:::-;7038:62;7017:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;7194:28;7203:2;7207:7;7216:5;7194:8;:28::i;:::-;6888:341;6826:403;;:::o;2242:98::-;2295:7;2321:12;;2314:19;;2242:98;:::o;8140:156::-;8261:28;8271:4;8277:2;8281:7;8261:9;:28::i;:::-;8140:156;;;:::o;2889:984::-;2978:7;3013:16;3023:5;3013:9;:16::i;:::-;3005:5;:24;2997:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3078:22;3103:13;:11;:13::i;:::-;3078:38;;3126:19;3155:25;3340:9;3335:455;3355:14;3351:1;:18;3335:455;;;3394:31;3428:11;:14;3440:1;3428:14;;;;;;;;;;;3394:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3490:1;3464:28;;:9;:14;;;:28;;;3460:109;;3536:9;:14;;;3516:34;;3460:109;3611:5;3590:26;;:17;:26;;;3586:190;;;3659:5;3644:11;:20;3640:83;;;3699:1;3692:8;;;;;;;;;3640:83;3744:13;;;;;;;3586:190;3376:414;3371:3;;;;;;;3335:455;;;;3810:56;;;;;;;;;;:::i;:::-;;;;;;;;2889:984;;;;;:::o;8362:171::-;8487:39;8504:4;8510:2;8514:7;8487:39;;;;;;;;;;;;:16;:39::i;:::-;8362:171;;;:::o;2412:184::-;2479:7;2514:13;:11;:13::i;:::-;2506:5;:21;2498:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2584:5;2577:12;;2412:184;;;:::o;5592:122::-;5656:7;5682:20;5694:7;5682:11;:20::i;:::-;:25;;;5675:32;;5592:122;;;:::o;4365:218::-;4429:7;4473:1;4456:19;;:5;:19;;;;4448:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4548:12;:19;4561:5;4548:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4540:36;;4533:43;;4365:218;;;:::o;5938:102::-;5994:13;6026:7;6019:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5938:102;:::o;7567:283::-;7673:12;:10;:12::i;:::-;7661:24;;:8;:24;;;;7653:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;7772:8;7727:18;:32;7746:12;:10;:12::i;:::-;7727:32;;;;;;;;;;;;;;;:42;7760:8;7727:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7824:8;7795:48;;7810:12;:10;:12::i;:::-;7795:48;;;7834:8;7795:48;;;;;;:::i;:::-;;;;;;;;7567:283;;:::o;8599:344::-;8752:28;8762:4;8768:2;8772:7;8752:9;:28::i;:::-;8811:48;8834:4;8840:2;8844:7;8853:5;8811:22;:48::i;:::-;8790:146;;;;;;;;;;;;:::i;:::-;;;;;;;;;8599:344;;;;:::o;6106:330::-;6179:13;6212:16;6220:7;6212;:16::i;:::-;6204:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6291:21;6315:10;:8;:10::i;:::-;6291:34;;6367:1;6348:7;6342:21;:26;;:87;;;;;;;;;;;;;;;;;6395:7;6404:18;:7;:16;:18::i;:::-;6378:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6342:87;6335:94;;;6106:330;;;:::o;7916:162::-;8013:4;8036:18;:25;8055:5;8036:25;;;;;;;;;;;;;;;:35;8062:8;8036:35;;;;;;;;;;;;;;;;;;;;;;;;;8029:42;;7916:162;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;9189:109:9:-;9246:4;9279:12;;9269:7;:22;9262:29;;9189:109;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;13970:189:9:-;14107:2;14080:15;:24;14096:7;14080:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14144:7;14140:2;14124:28;;14133:5;14124:28;;;;;;;;;;;;13970:189;;;:::o;11901:1958::-;12011:35;12049:20;12061:7;12049:11;:20::i;:::-;12011:58;;12080:22;12122:13;:18;;;12106:34;;:12;:10;:12::i;:::-;:34;;;:86;;;;12180:12;:10;:12::i;:::-;12156:36;;:20;12168:7;12156:11;:20::i;:::-;:36;;;12106:86;:152;;;;12208:50;12225:13;:18;;;12245:12;:10;:12::i;:::-;12208:16;:50::i;:::-;12106:152;12080:179;;12278:17;12270:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;12391:4;12369:26;;:13;:18;;;:26;;;12361:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;12470:1;12456:16;;:2;:16;;;;12448:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;12525:43;12547:4;12553:2;12557:7;12566:1;12525:21;:43::i;:::-;12630:49;12647:1;12651:7;12660:13;:18;;;12630:8;:49::i;:::-;12999:1;12969:12;:18;12982:4;12969:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13042:1;13014:12;:16;13027:2;13014:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13086:2;13058:11;:20;13070:7;13058:20;;;;;;;;;;;:25;;;:30;;;;;;;;;;;;;;;;;;13147:15;13102:11;:20;13114:7;13102:20;;;;;;;;;;;:35;;;:61;;;;;;;;;;;;;;;;;;13411:19;13443:1;13433:7;:11;13411:33;;13503:1;13462:43;;:11;:24;13474:11;13462:24;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;13458:290;;;13529:20;13537:11;13529:7;:20::i;:::-;13525:209;;;13605:13;:18;;;13573:11;:24;13585:11;13573:24;;;;;;;;;;;:29;;;:50;;;;;;;;;;;;;;;;;;13687:13;:28;;;13645:11;:24;13657:11;13645:24;;;;;;;;;;;:39;;;:70;;;;;;;;;;;;;;;;;;13525:209;13458:290;12945:813;13792:7;13788:2;13773:27;;13782:4;13773:27;;;;;;;;;;;;13810:42;13831:4;13837:2;13841:7;13850:1;13810:20;:42::i;:::-;12001:1858;;11901:1958;;;:::o;5011:524::-;5072:21;;:::i;:::-;5113:16;5121:7;5113;:16::i;:::-;5105:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5216:12;5231:7;5216:22;;5211:240;5248:1;5240:4;:9;5211:240;;5277:31;5311:11;:17;5323:4;5311:17;;;;;;;;;;;5277:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:1;5350:28;;:9;:14;;;:28;;;5346:91;;5409:9;5402:16;;;;;;5346:91;5259:192;5251:6;;;;;;;;5211:240;;;;5471:57;;;;;;;;;;:::i;:::-;;;;;;;;5011:524;;;;:::o;14712:783::-;14862:4;14882:15;:2;:13;;;:15::i;:::-;14878:611;;;14933:2;14917:36;;;14954:12;:10;:12::i;:::-;14968:4;14974:7;14983:5;14917:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14913:524;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15177:1;15160:6;:13;:18;15156:267;;;15202:61;;;;;;;;;;:::i;:::-;;;;;;;;15156:267;15375:6;15369:13;15360:6;15356:2;15352:15;15345:38;14913:524;15049:45;;;15039:55;;;:6;:55;;;;15032:62;;;;;14878:611;15474:4;15467:11;;14712:783;;;;;;;:::o;6677:92::-;6728:13;6753:9;;;;;;;;;;;;;;6677:92;:::o;328:703:6:-;384:13;610:1;601:5;:10;597:51;;;627:10;;;;;;;;;;;;;;;;;;;;;597:51;657:12;672:5;657:20;;687:14;711:75;726:1;718:4;:9;711:75;;743:8;;;;;:::i;:::-;;;;773:2;765:10;;;;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:39;;844:150;860:1;851:5;:10;844:150;;887:1;877:11;;;;;:::i;:::-;;;953:2;945:5;:10;;;;:::i;:::-;932:2;:24;;;;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;981:2;972:11;;;;;:::i;:::-;;;844:150;;;1017:6;1003:21;;;;;328:703;;;;:::o;15969:154:9:-;;;;;:::o;16521:153::-;;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:232::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:15;11230:2;11222:6;11218:15;11211:40;11026:232;:::o;11264:366::-;11406:3;11427:67;11491:2;11486:3;11427:67;:::i;:::-;11420:74;;11503:93;11592:3;11503:93;:::i;:::-;11621:2;11616:3;11612:12;11605:19;;11264:366;;;:::o;11636:419::-;11802:4;11840:2;11829:9;11825:18;11817:26;;11889:9;11883:4;11879:20;11875:1;11864:9;11860:17;11853:47;11917:131;12043:4;11917:131;:::i;:::-;11909:139;;11636:419;;;:::o;12061:221::-;12201:34;12197:1;12189:6;12185:14;12178:58;12270:4;12265:2;12257:6;12253:15;12246:29;12061:221;:::o;12288:366::-;12430:3;12451:67;12515:2;12510:3;12451:67;:::i;:::-;12444:74;;12527:93;12616:3;12527:93;:::i;:::-;12645:2;12640:3;12636:12;12629:19;;12288:366;;;:::o;12660:419::-;12826:4;12864:2;12853:9;12849:18;12841:26;;12913:9;12907:4;12903:20;12899:1;12888:9;12884:17;12877:47;12941:131;13067:4;12941:131;:::i;:::-;12933:139;;12660:419;;;:::o;13085:244::-;13225:34;13221:1;13213:6;13209:14;13202:58;13294:27;13289:2;13281:6;13277:15;13270:52;13085:244;:::o;13335:366::-;13477:3;13498:67;13562:2;13557:3;13498:67;:::i;:::-;13491:74;;13574:93;13663:3;13574:93;:::i;:::-;13692:2;13687:3;13683:12;13676:19;;13335:366;;;:::o;13707:419::-;13873:4;13911:2;13900:9;13896:18;13888:26;;13960:9;13954:4;13950:20;13946:1;13935:9;13931:17;13924:47;13988:131;14114:4;13988:131;:::i;:::-;13980:139;;13707:419;;;:::o;14132:221::-;14272:34;14268:1;14260:6;14256:14;14249:58;14341:4;14336:2;14328:6;14324:15;14317:29;14132:221;:::o;14359:366::-;14501:3;14522:67;14586:2;14581:3;14522:67;:::i;:::-;14515:74;;14598:93;14687:3;14598:93;:::i;:::-;14716:2;14711:3;14707:12;14700:19;;14359:366;;;:::o;14731:419::-;14897:4;14935:2;14924:9;14920:18;14912:26;;14984:9;14978:4;14974:20;14970:1;14959:9;14955:17;14948:47;15012:131;15138:4;15012:131;:::i;:::-;15004:139;;14731:419;;;:::o;15156:233::-;15296:34;15292:1;15284:6;15280:14;15273:58;15365:16;15360:2;15352:6;15348:15;15341:41;15156:233;:::o;15395:366::-;15537:3;15558:67;15622:2;15617:3;15558:67;:::i;:::-;15551:74;;15634:93;15723:3;15634:93;:::i;:::-;15752:2;15747:3;15743:12;15736:19;;15395:366;;;:::o;15767:419::-;15933:4;15971:2;15960:9;15956:18;15948:26;;16020:9;16014:4;16010:20;16006:1;15995:9;15991:17;15984:47;16048:131;16174:4;16048:131;:::i;:::-;16040:139;;15767:419;;;:::o;16192:222::-;16332:34;16328:1;16320:6;16316:14;16309:58;16401:5;16396:2;16388:6;16384:15;16377:30;16192:222;:::o;16420:366::-;16562:3;16583:67;16647:2;16642:3;16583:67;:::i;:::-;16576:74;;16659:93;16748:3;16659:93;:::i;:::-;16777:2;16772:3;16768:12;16761:19;;16420:366;;;:::o;16792:419::-;16958:4;16996:2;16985:9;16981:18;16973:26;;17045:9;17039:4;17035:20;17031:1;17020:9;17016:17;17009:47;17073:131;17199:4;17073:131;:::i;:::-;17065:139;;16792:419;;;:::o;17217:230::-;17357:34;17353:1;17345:6;17341:14;17334:58;17426:13;17421:2;17413:6;17409:15;17402:38;17217:230;:::o;17453:366::-;17595:3;17616:67;17680:2;17675:3;17616:67;:::i;:::-;17609:74;;17692:93;17781:3;17692:93;:::i;:::-;17810:2;17805:3;17801:12;17794:19;;17453:366;;;:::o;17825:419::-;17991:4;18029:2;18018:9;18014:18;18006:26;;18078:9;18072:4;18068:20;18064:1;18053:9;18049:17;18042:47;18106:131;18232:4;18106:131;:::i;:::-;18098:139;;17825:419;;;:::o;18250:176::-;18390:28;18386:1;18378:6;18374:14;18367:52;18250:176;:::o;18432:366::-;18574:3;18595:67;18659:2;18654:3;18595:67;:::i;:::-;18588:74;;18671:93;18760:3;18671:93;:::i;:::-;18789:2;18784:3;18780:12;18773:19;;18432:366;;;:::o;18804:419::-;18970:4;19008:2;18997:9;18993:18;18985:26;;19057:9;19051:4;19047:20;19043:1;19032:9;19028:17;19021:47;19085:131;19211:4;19085:131;:::i;:::-;19077:139;;18804:419;;;:::o;19229:238::-;19369:34;19365:1;19357:6;19353:14;19346:58;19438:21;19433:2;19425:6;19421:15;19414:46;19229:238;:::o;19473:366::-;19615:3;19636:67;19700:2;19695:3;19636:67;:::i;:::-;19629:74;;19712:93;19801:3;19712:93;:::i;:::-;19830:2;19825:3;19821:12;19814:19;;19473:366;;;:::o;19845:419::-;20011:4;20049:2;20038:9;20034:18;20026:26;;20098:9;20092:4;20088:20;20084:1;20073:9;20069:17;20062:47;20126:131;20252:4;20126:131;:::i;:::-;20118:139;;19845:419;;;:::o;20270:234::-;20410:34;20406:1;20398:6;20394:14;20387:58;20479:17;20474:2;20466:6;20462:15;20455:42;20270:234;:::o;20510:366::-;20652:3;20673:67;20737:2;20732:3;20673:67;:::i;:::-;20666:74;;20749:93;20838:3;20749:93;:::i;:::-;20867:2;20862:3;20858:12;20851:19;;20510:366;;;:::o;20882:419::-;21048:4;21086:2;21075:9;21071:18;21063:26;;21135:9;21129:4;21125:20;21121:1;21110:9;21106:17;21099:47;21163:131;21289:4;21163:131;:::i;:::-;21155:139;;20882:419;;;:::o;21307:148::-;21409:11;21446:3;21431:18;;21307:148;;;;:::o;21461:377::-;21567:3;21595:39;21628:5;21595:39;:::i;:::-;21650:89;21732:6;21727:3;21650:89;:::i;:::-;21643:96;;21748:52;21793:6;21788:3;21781:4;21774:5;21770:16;21748:52;:::i;:::-;21825:6;21820:3;21816:16;21809:23;;21571:267;21461:377;;;;:::o;21844:435::-;22024:3;22046:95;22137:3;22128:6;22046:95;:::i;:::-;22039:102;;22158:95;22249:3;22240:6;22158:95;:::i;:::-;22151:102;;22270:3;22263:10;;21844:435;;;;;:::o;22285:237::-;22425:34;22421:1;22413:6;22409:14;22402:58;22494:20;22489:2;22481:6;22477:15;22470:45;22285:237;:::o;22528:366::-;22670:3;22691:67;22755:2;22750:3;22691:67;:::i;:::-;22684:74;;22767:93;22856:3;22767:93;:::i;:::-;22885:2;22880:3;22876:12;22869:19;;22528:366;;;:::o;22900:419::-;23066:4;23104:2;23093:9;23089:18;23081:26;;23153:9;23147:4;23143:20;23139:1;23128:9;23124:17;23117:47;23181:131;23307:4;23181:131;:::i;:::-;23173:139;;22900:419;;;:::o;23325:225::-;23465:34;23461:1;23453:6;23449:14;23442:58;23534:8;23529:2;23521:6;23517:15;23510:33;23325:225;:::o;23556:366::-;23698:3;23719:67;23783:2;23778:3;23719:67;:::i;:::-;23712:74;;23795:93;23884:3;23795:93;:::i;:::-;23913:2;23908:3;23904:12;23897:19;;23556:366;;;:::o;23928:419::-;24094:4;24132:2;24121:9;24117:18;24109:26;;24181:9;24175:4;24171:20;24167:1;24156:9;24152:17;24145:47;24209:131;24335:4;24209:131;:::i;:::-;24201:139;;23928:419;;;:::o;24353:224::-;24493:34;24489:1;24481:6;24477:14;24470:58;24562:7;24557:2;24549:6;24545:15;24538:32;24353:224;:::o;24583:366::-;24725:3;24746:67;24810:2;24805:3;24746:67;:::i;:::-;24739:74;;24822:93;24911:3;24822:93;:::i;:::-;24940:2;24935:3;24931:12;24924:19;;24583:366;;;:::o;24955:419::-;25121:4;25159:2;25148:9;25144:18;25136:26;;25208:9;25202:4;25198:20;25194:1;25183:9;25179:17;25172:47;25236:131;25362:4;25236:131;:::i;:::-;25228:139;;24955:419;;;:::o;25380:229::-;25520:34;25516:1;25508:6;25504:14;25497:58;25589:12;25584:2;25576:6;25572:15;25565:37;25380:229;:::o;25615:366::-;25757:3;25778:67;25842:2;25837:3;25778:67;:::i;:::-;25771:74;;25854:93;25943:3;25854:93;:::i;:::-;25972:2;25967:3;25963:12;25956:19;;25615:366;;;:::o;25987:419::-;26153:4;26191:2;26180:9;26176:18;26168:26;;26240:9;26234:4;26230:20;26226:1;26215:9;26211:17;26204:47;26268:131;26394:4;26268:131;:::i;:::-;26260:139;;25987:419;;;:::o;26412:234::-;26552:34;26548:1;26540:6;26536:14;26529:58;26621:17;26616:2;26608:6;26604:15;26597:42;26412:234;:::o;26652:366::-;26794:3;26815:67;26879:2;26874:3;26815:67;:::i;:::-;26808:74;;26891:93;26980:3;26891:93;:::i;:::-;27009:2;27004:3;27000:12;26993:19;;26652:366;;;:::o;27024:419::-;27190:4;27228:2;27217:9;27213:18;27205:26;;27277:9;27271:4;27267:20;27263:1;27252:9;27248:17;27241:47;27305:131;27431:4;27305:131;:::i;:::-;27297:139;;27024:419;;;:::o;27449:98::-;27500:6;27534:5;27528:12;27518:22;;27449:98;;;:::o;27553:168::-;27636:11;27670:6;27665:3;27658:19;27710:4;27705:3;27701:14;27686:29;;27553:168;;;;:::o;27727:360::-;27813:3;27841:38;27873:5;27841:38;:::i;:::-;27895:70;27958:6;27953:3;27895:70;:::i;:::-;27888:77;;27974:52;28019:6;28014:3;28007:4;28000:5;27996:16;27974:52;:::i;:::-;28051:29;28073:6;28051:29;:::i;:::-;28046:3;28042:39;28035:46;;27817:270;27727:360;;;;:::o;28093:640::-;28288:4;28326:3;28315:9;28311:19;28303:27;;28340:71;28408:1;28397:9;28393:17;28384:6;28340:71;:::i;:::-;28421:72;28489:2;28478:9;28474:18;28465:6;28421:72;:::i;:::-;28503;28571:2;28560:9;28556:18;28547:6;28503:72;:::i;:::-;28622:9;28616:4;28612:20;28607:2;28596:9;28592:18;28585:48;28650:76;28721:4;28712:6;28650:76;:::i;:::-;28642:84;;28093:640;;;;;;;:::o;28739:141::-;28795:5;28826:6;28820:13;28811:22;;28842:32;28868:5;28842:32;:::i;:::-;28739:141;;;;:::o;28886:349::-;28955:6;29004:2;28992:9;28983:7;28979:23;28975:32;28972:119;;;29010:79;;:::i;:::-;28972:119;29130:1;29155:63;29210:7;29201:6;29190:9;29186:22;29155:63;:::i;:::-;29145:73;;29101:127;28886:349;;;;:::o;29241:180::-;29289:77;29286:1;29279:88;29386:4;29383:1;29376:15;29410:4;29407:1;29400:15;29427:233;29466:3;29489:24;29507:5;29489:24;:::i;:::-;29480:33;;29535:66;29528:5;29525:77;29522:103;;;29605:18;;:::i;:::-;29522:103;29652:1;29645:5;29641:13;29634:20;;29427:233;;;:::o;29666:180::-;29714:77;29711:1;29704:88;29811:4;29808:1;29801:15;29835:4;29832:1;29825:15;29852:185;29892:1;29909:20;29927:1;29909:20;:::i;:::-;29904:25;;29943:20;29961:1;29943:20;:::i;:::-;29938:25;;29982:1;29972:35;;29987:18;;:::i;:::-;29972:35;30029:1;30026;30022:9;30017:14;;29852:185;;;;:::o;30043:191::-;30083:4;30103:20;30121:1;30103:20;:::i;:::-;30098:25;;30137:20;30155:1;30137:20;:::i;:::-;30132:25;;30176:1;30173;30170:8;30167:34;;;30181:18;;:::i;:::-;30167:34;30226:1;30223;30219:9;30211:17;;30043:191;;;;:::o;30240:176::-;30272:1;30289:20;30307:1;30289:20;:::i;:::-;30284:25;;30323:20;30341:1;30323:20;:::i;:::-;30318:25;;30362:1;30352:35;;30367:18;;:::i;:::-;30352:35;30408:1;30405;30401:9;30396:14;;30240:176;;;;:::o;30422:305::-;30462:3;30481:20;30499:1;30481:20;:::i;:::-;30476:25;;30515:20;30533:1;30515:20;:::i;:::-;30510:25;;30669:1;30601:66;30597:74;30594:1;30591:81;30588:107;;;30675:18;;:::i;:::-;30588:107;30719:1;30716;30712:9;30705:16;;30422:305;;;;:::o;30733:180::-;30781:77;30778:1;30771:88;30878:4;30875:1;30868:15;30902:4;30899:1;30892:15",
=======
  "sourceMap": "1033:15643:10:-:0;;;2058:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2132:5;2124;:13;;;;;;;;;;;;:::i;:::-;;2157:7;2147;:17;;;;;;;;;;;;:::i;:::-;;2058:113;;1033:15643;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1033:15643:10:-;;;;;;;",
  "deployedSourceMap": "1033:15643:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3940:366;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5776:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7290:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6826:403;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2242:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8140:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2889:984;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8362:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2412:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5592:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4365:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5938:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7567:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8599:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6106:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7916:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3940:366;4042:4;4092:25;4077:40;;;:11;:40;;;;:104;;;;4148:33;4133:48;;;:11;:48;;;;4077:104;:170;;;;4212:35;4197:50;;;:11;:50;;;;4077:170;:222;;;;4263:36;4287:11;4263:23;:36::i;:::-;4077:222;4058:241;;3940:366;;;:::o;5776:98::-;5830:13;5862:5;5855:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5776:98;:::o;7290:210::-;7358:7;7385:16;7393:7;7385;:16::i;:::-;7377:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7469:15;:24;7485:7;7469:24;;;;;;;;;;;;;;;;;;;;;7462:31;;7290:210;;;:::o;6826:403::-;6898:13;6914:24;6930:7;6914:15;:24::i;:::-;6898:40;;6962:5;6956:11;;:2;:11;;;;6948:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7054:5;7038:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;7063:37;7080:5;7087:12;:10;:12::i;:::-;7063:16;:37::i;:::-;7038:62;7017:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;7194:28;7203:2;7207:7;7216:5;7194:8;:28::i;:::-;6888:341;6826:403;;:::o;2242:98::-;2295:7;2321:12;;2314:19;;2242:98;:::o;8140:156::-;8261:28;8271:4;8277:2;8281:7;8261:9;:28::i;:::-;8140:156;;;:::o;2889:984::-;2978:7;3013:16;3023:5;3013:9;:16::i;:::-;3005:5;:24;2997:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3078:22;3103:13;:11;:13::i;:::-;3078:38;;3126:19;3155:25;3340:9;3335:455;3355:14;3351:1;:18;3335:455;;;3394:31;3428:11;:14;3440:1;3428:14;;;;;;;;;;;3394:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3490:1;3464:28;;:9;:14;;;:28;;;3460:109;;3536:9;:14;;;3516:34;;3460:109;3611:5;3590:26;;:17;:26;;;3586:190;;;3659:5;3644:11;:20;3640:83;;;3699:1;3692:8;;;;;;;;;3640:83;3744:13;;;;;;;3586:190;3376:414;3371:3;;;;;;;3335:455;;;;3810:56;;;;;;;;;;:::i;:::-;;;;;;;;2889:984;;;;;:::o;8362:171::-;8487:39;8504:4;8510:2;8514:7;8487:39;;;;;;;;;;;;:16;:39::i;:::-;8362:171;;;:::o;2412:184::-;2479:7;2514:13;:11;:13::i;:::-;2506:5;:21;2498:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2584:5;2577:12;;2412:184;;;:::o;5592:122::-;5656:7;5682:20;5694:7;5682:11;:20::i;:::-;:25;;;5675:32;;5592:122;;;:::o;4365:218::-;4429:7;4473:1;4456:19;;:5;:19;;;;4448:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4548:12;:19;4561:5;4548:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4540:36;;4533:43;;4365:218;;;:::o;5938:102::-;5994:13;6026:7;6019:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5938:102;:::o;7567:283::-;7673:12;:10;:12::i;:::-;7661:24;;:8;:24;;;;7653:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;7772:8;7727:18;:32;7746:12;:10;:12::i;:::-;7727:32;;;;;;;;;;;;;;;:42;7760:8;7727:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7824:8;7795:48;;7810:12;:10;:12::i;:::-;7795:48;;;7834:8;7795:48;;;;;;:::i;:::-;;;;;;;;7567:283;;:::o;8599:344::-;8752:28;8762:4;8768:2;8772:7;8752:9;:28::i;:::-;8811:48;8834:4;8840:2;8844:7;8853:5;8811:22;:48::i;:::-;8790:146;;;;;;;;;;;;:::i;:::-;;;;;;;;;8599:344;;;;:::o;6106:330::-;6179:13;6212:16;6220:7;6212;:16::i;:::-;6204:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6291:21;6315:10;:8;:10::i;:::-;6291:34;;6367:1;6348:7;6342:21;:26;;:87;;;;;;;;;;;;;;;;;6395:7;6404:18;:7;:16;:18::i;:::-;6378:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6342:87;6335:94;;;6106:330;;;:::o;7916:162::-;8013:4;8036:18;:25;8055:5;8036:25;;;;;;;;;;;;;;;:35;8062:8;8036:35;;;;;;;;;;;;;;;;;;;;;;;;;8029:42;;7916:162;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;9189:109:10:-;9246:4;9279:12;;9269:7;:22;9262:29;;9189:109;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;13970:189:10:-;14107:2;14080:15;:24;14096:7;14080:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14144:7;14140:2;14124:28;;14133:5;14124:28;;;;;;;;;;;;13970:189;;;:::o;11901:1958::-;12011:35;12049:20;12061:7;12049:11;:20::i;:::-;12011:58;;12080:22;12122:13;:18;;;12106:34;;:12;:10;:12::i;:::-;:34;;;:86;;;;12180:12;:10;:12::i;:::-;12156:36;;:20;12168:7;12156:11;:20::i;:::-;:36;;;12106:86;:152;;;;12208:50;12225:13;:18;;;12245:12;:10;:12::i;:::-;12208:16;:50::i;:::-;12106:152;12080:179;;12278:17;12270:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;12391:4;12369:26;;:13;:18;;;:26;;;12361:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;12470:1;12456:16;;:2;:16;;;;12448:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;12525:43;12547:4;12553:2;12557:7;12566:1;12525:21;:43::i;:::-;12630:49;12647:1;12651:7;12660:13;:18;;;12630:8;:49::i;:::-;12999:1;12969:12;:18;12982:4;12969:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13042:1;13014:12;:16;13027:2;13014:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13086:2;13058:11;:20;13070:7;13058:20;;;;;;;;;;;:25;;;:30;;;;;;;;;;;;;;;;;;13147:15;13102:11;:20;13114:7;13102:20;;;;;;;;;;;:35;;;:61;;;;;;;;;;;;;;;;;;13411:19;13443:1;13433:7;:11;13411:33;;13503:1;13462:43;;:11;:24;13474:11;13462:24;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;13458:290;;;13529:20;13537:11;13529:7;:20::i;:::-;13525:209;;;13605:13;:18;;;13573:11;:24;13585:11;13573:24;;;;;;;;;;;:29;;;:50;;;;;;;;;;;;;;;;;;13687:13;:28;;;13645:11;:24;13657:11;13645:24;;;;;;;;;;;:39;;;:70;;;;;;;;;;;;;;;;;;13525:209;13458:290;12945:813;13792:7;13788:2;13773:27;;13782:4;13773:27;;;;;;;;;;;;13810:42;13831:4;13837:2;13841:7;13850:1;13810:20;:42::i;:::-;12001:1858;;11901:1958;;;:::o;5011:524::-;5072:21;;:::i;:::-;5113:16;5121:7;5113;:16::i;:::-;5105:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5216:12;5231:7;5216:22;;5211:240;5248:1;5240:4;:9;5211:240;;5277:31;5311:11;:17;5323:4;5311:17;;;;;;;;;;;5277:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:1;5350:28;;:9;:14;;;:28;;;5346:91;;5409:9;5402:16;;;;;;5346:91;5259:192;5251:6;;;;;;;;5211:240;;;;5471:57;;;;;;;;;;:::i;:::-;;;;;;;;5011:524;;;;:::o;14712:783::-;14862:4;14882:15;:2;:13;;;:15::i;:::-;14878:611;;;14933:2;14917:36;;;14954:12;:10;:12::i;:::-;14968:4;14974:7;14983:5;14917:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14913:524;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15177:1;15160:6;:13;:18;15156:267;;;15202:61;;;;;;;;;;:::i;:::-;;;;;;;;15156:267;15375:6;15369:13;15360:6;15356:2;15352:15;15345:38;14913:524;15049:45;;;15039:55;;;:6;:55;;;;15032:62;;;;;14878:611;15474:4;15467:11;;14712:783;;;;;;;:::o;6677:92::-;6728:13;6753:9;;;;;;;;;;;;;;6677:92;:::o;328:703:6:-;384:13;610:1;601:5;:10;597:51;;;627:10;;;;;;;;;;;;;;;;;;;;;597:51;657:12;672:5;657:20;;687:14;711:75;726:1;718:4;:9;711:75;;743:8;;;;;:::i;:::-;;;;773:2;765:10;;;;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:39;;844:150;860:1;851:5;:10;844:150;;887:1;877:11;;;;;:::i;:::-;;;953:2;945:5;:10;;;;:::i;:::-;932:2;:24;;;;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;981:2;972:11;;;;;:::i;:::-;;;844:150;;;1017:6;1003:21;;;;;328:703;;;;:::o;15969:154:10:-;;;;;:::o;16521:153::-;;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:232::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:15;11230:2;11222:6;11218:15;11211:40;11026:232;:::o;11264:366::-;11406:3;11427:67;11491:2;11486:3;11427:67;:::i;:::-;11420:74;;11503:93;11592:3;11503:93;:::i;:::-;11621:2;11616:3;11612:12;11605:19;;11264:366;;;:::o;11636:419::-;11802:4;11840:2;11829:9;11825:18;11817:26;;11889:9;11883:4;11879:20;11875:1;11864:9;11860:17;11853:47;11917:131;12043:4;11917:131;:::i;:::-;11909:139;;11636:419;;;:::o;12061:221::-;12201:34;12197:1;12189:6;12185:14;12178:58;12270:4;12265:2;12257:6;12253:15;12246:29;12061:221;:::o;12288:366::-;12430:3;12451:67;12515:2;12510:3;12451:67;:::i;:::-;12444:74;;12527:93;12616:3;12527:93;:::i;:::-;12645:2;12640:3;12636:12;12629:19;;12288:366;;;:::o;12660:419::-;12826:4;12864:2;12853:9;12849:18;12841:26;;12913:9;12907:4;12903:20;12899:1;12888:9;12884:17;12877:47;12941:131;13067:4;12941:131;:::i;:::-;12933:139;;12660:419;;;:::o;13085:244::-;13225:34;13221:1;13213:6;13209:14;13202:58;13294:27;13289:2;13281:6;13277:15;13270:52;13085:244;:::o;13335:366::-;13477:3;13498:67;13562:2;13557:3;13498:67;:::i;:::-;13491:74;;13574:93;13663:3;13574:93;:::i;:::-;13692:2;13687:3;13683:12;13676:19;;13335:366;;;:::o;13707:419::-;13873:4;13911:2;13900:9;13896:18;13888:26;;13960:9;13954:4;13950:20;13946:1;13935:9;13931:17;13924:47;13988:131;14114:4;13988:131;:::i;:::-;13980:139;;13707:419;;;:::o;14132:221::-;14272:34;14268:1;14260:6;14256:14;14249:58;14341:4;14336:2;14328:6;14324:15;14317:29;14132:221;:::o;14359:366::-;14501:3;14522:67;14586:2;14581:3;14522:67;:::i;:::-;14515:74;;14598:93;14687:3;14598:93;:::i;:::-;14716:2;14711:3;14707:12;14700:19;;14359:366;;;:::o;14731:419::-;14897:4;14935:2;14924:9;14920:18;14912:26;;14984:9;14978:4;14974:20;14970:1;14959:9;14955:17;14948:47;15012:131;15138:4;15012:131;:::i;:::-;15004:139;;14731:419;;;:::o;15156:233::-;15296:34;15292:1;15284:6;15280:14;15273:58;15365:16;15360:2;15352:6;15348:15;15341:41;15156:233;:::o;15395:366::-;15537:3;15558:67;15622:2;15617:3;15558:67;:::i;:::-;15551:74;;15634:93;15723:3;15634:93;:::i;:::-;15752:2;15747:3;15743:12;15736:19;;15395:366;;;:::o;15767:419::-;15933:4;15971:2;15960:9;15956:18;15948:26;;16020:9;16014:4;16010:20;16006:1;15995:9;15991:17;15984:47;16048:131;16174:4;16048:131;:::i;:::-;16040:139;;15767:419;;;:::o;16192:222::-;16332:34;16328:1;16320:6;16316:14;16309:58;16401:5;16396:2;16388:6;16384:15;16377:30;16192:222;:::o;16420:366::-;16562:3;16583:67;16647:2;16642:3;16583:67;:::i;:::-;16576:74;;16659:93;16748:3;16659:93;:::i;:::-;16777:2;16772:3;16768:12;16761:19;;16420:366;;;:::o;16792:419::-;16958:4;16996:2;16985:9;16981:18;16973:26;;17045:9;17039:4;17035:20;17031:1;17020:9;17016:17;17009:47;17073:131;17199:4;17073:131;:::i;:::-;17065:139;;16792:419;;;:::o;17217:230::-;17357:34;17353:1;17345:6;17341:14;17334:58;17426:13;17421:2;17413:6;17409:15;17402:38;17217:230;:::o;17453:366::-;17595:3;17616:67;17680:2;17675:3;17616:67;:::i;:::-;17609:74;;17692:93;17781:3;17692:93;:::i;:::-;17810:2;17805:3;17801:12;17794:19;;17453:366;;;:::o;17825:419::-;17991:4;18029:2;18018:9;18014:18;18006:26;;18078:9;18072:4;18068:20;18064:1;18053:9;18049:17;18042:47;18106:131;18232:4;18106:131;:::i;:::-;18098:139;;17825:419;;;:::o;18250:176::-;18390:28;18386:1;18378:6;18374:14;18367:52;18250:176;:::o;18432:366::-;18574:3;18595:67;18659:2;18654:3;18595:67;:::i;:::-;18588:74;;18671:93;18760:3;18671:93;:::i;:::-;18789:2;18784:3;18780:12;18773:19;;18432:366;;;:::o;18804:419::-;18970:4;19008:2;18997:9;18993:18;18985:26;;19057:9;19051:4;19047:20;19043:1;19032:9;19028:17;19021:47;19085:131;19211:4;19085:131;:::i;:::-;19077:139;;18804:419;;;:::o;19229:238::-;19369:34;19365:1;19357:6;19353:14;19346:58;19438:21;19433:2;19425:6;19421:15;19414:46;19229:238;:::o;19473:366::-;19615:3;19636:67;19700:2;19695:3;19636:67;:::i;:::-;19629:74;;19712:93;19801:3;19712:93;:::i;:::-;19830:2;19825:3;19821:12;19814:19;;19473:366;;;:::o;19845:419::-;20011:4;20049:2;20038:9;20034:18;20026:26;;20098:9;20092:4;20088:20;20084:1;20073:9;20069:17;20062:47;20126:131;20252:4;20126:131;:::i;:::-;20118:139;;19845:419;;;:::o;20270:234::-;20410:34;20406:1;20398:6;20394:14;20387:58;20479:17;20474:2;20466:6;20462:15;20455:42;20270:234;:::o;20510:366::-;20652:3;20673:67;20737:2;20732:3;20673:67;:::i;:::-;20666:74;;20749:93;20838:3;20749:93;:::i;:::-;20867:2;20862:3;20858:12;20851:19;;20510:366;;;:::o;20882:419::-;21048:4;21086:2;21075:9;21071:18;21063:26;;21135:9;21129:4;21125:20;21121:1;21110:9;21106:17;21099:47;21163:131;21289:4;21163:131;:::i;:::-;21155:139;;20882:419;;;:::o;21307:148::-;21409:11;21446:3;21431:18;;21307:148;;;;:::o;21461:377::-;21567:3;21595:39;21628:5;21595:39;:::i;:::-;21650:89;21732:6;21727:3;21650:89;:::i;:::-;21643:96;;21748:52;21793:6;21788:3;21781:4;21774:5;21770:16;21748:52;:::i;:::-;21825:6;21820:3;21816:16;21809:23;;21571:267;21461:377;;;;:::o;21844:435::-;22024:3;22046:95;22137:3;22128:6;22046:95;:::i;:::-;22039:102;;22158:95;22249:3;22240:6;22158:95;:::i;:::-;22151:102;;22270:3;22263:10;;21844:435;;;;;:::o;22285:237::-;22425:34;22421:1;22413:6;22409:14;22402:58;22494:20;22489:2;22481:6;22477:15;22470:45;22285:237;:::o;22528:366::-;22670:3;22691:67;22755:2;22750:3;22691:67;:::i;:::-;22684:74;;22767:93;22856:3;22767:93;:::i;:::-;22885:2;22880:3;22876:12;22869:19;;22528:366;;;:::o;22900:419::-;23066:4;23104:2;23093:9;23089:18;23081:26;;23153:9;23147:4;23143:20;23139:1;23128:9;23124:17;23117:47;23181:131;23307:4;23181:131;:::i;:::-;23173:139;;22900:419;;;:::o;23325:225::-;23465:34;23461:1;23453:6;23449:14;23442:58;23534:8;23529:2;23521:6;23517:15;23510:33;23325:225;:::o;23556:366::-;23698:3;23719:67;23783:2;23778:3;23719:67;:::i;:::-;23712:74;;23795:93;23884:3;23795:93;:::i;:::-;23913:2;23908:3;23904:12;23897:19;;23556:366;;;:::o;23928:419::-;24094:4;24132:2;24121:9;24117:18;24109:26;;24181:9;24175:4;24171:20;24167:1;24156:9;24152:17;24145:47;24209:131;24335:4;24209:131;:::i;:::-;24201:139;;23928:419;;;:::o;24353:224::-;24493:34;24489:1;24481:6;24477:14;24470:58;24562:7;24557:2;24549:6;24545:15;24538:32;24353:224;:::o;24583:366::-;24725:3;24746:67;24810:2;24805:3;24746:67;:::i;:::-;24739:74;;24822:93;24911:3;24822:93;:::i;:::-;24940:2;24935:3;24931:12;24924:19;;24583:366;;;:::o;24955:419::-;25121:4;25159:2;25148:9;25144:18;25136:26;;25208:9;25202:4;25198:20;25194:1;25183:9;25179:17;25172:47;25236:131;25362:4;25236:131;:::i;:::-;25228:139;;24955:419;;;:::o;25380:229::-;25520:34;25516:1;25508:6;25504:14;25497:58;25589:12;25584:2;25576:6;25572:15;25565:37;25380:229;:::o;25615:366::-;25757:3;25778:67;25842:2;25837:3;25778:67;:::i;:::-;25771:74;;25854:93;25943:3;25854:93;:::i;:::-;25972:2;25967:3;25963:12;25956:19;;25615:366;;;:::o;25987:419::-;26153:4;26191:2;26180:9;26176:18;26168:26;;26240:9;26234:4;26230:20;26226:1;26215:9;26211:17;26204:47;26268:131;26394:4;26268:131;:::i;:::-;26260:139;;25987:419;;;:::o;26412:234::-;26552:34;26548:1;26540:6;26536:14;26529:58;26621:17;26616:2;26608:6;26604:15;26597:42;26412:234;:::o;26652:366::-;26794:3;26815:67;26879:2;26874:3;26815:67;:::i;:::-;26808:74;;26891:93;26980:3;26891:93;:::i;:::-;27009:2;27004:3;27000:12;26993:19;;26652:366;;;:::o;27024:419::-;27190:4;27228:2;27217:9;27213:18;27205:26;;27277:9;27271:4;27267:20;27263:1;27252:9;27248:17;27241:47;27305:131;27431:4;27305:131;:::i;:::-;27297:139;;27024:419;;;:::o;27449:98::-;27500:6;27534:5;27528:12;27518:22;;27449:98;;;:::o;27553:168::-;27636:11;27670:6;27665:3;27658:19;27710:4;27705:3;27701:14;27686:29;;27553:168;;;;:::o;27727:360::-;27813:3;27841:38;27873:5;27841:38;:::i;:::-;27895:70;27958:6;27953:3;27895:70;:::i;:::-;27888:77;;27974:52;28019:6;28014:3;28007:4;28000:5;27996:16;27974:52;:::i;:::-;28051:29;28073:6;28051:29;:::i;:::-;28046:3;28042:39;28035:46;;27817:270;27727:360;;;;:::o;28093:640::-;28288:4;28326:3;28315:9;28311:19;28303:27;;28340:71;28408:1;28397:9;28393:17;28384:6;28340:71;:::i;:::-;28421:72;28489:2;28478:9;28474:18;28465:6;28421:72;:::i;:::-;28503;28571:2;28560:9;28556:18;28547:6;28503:72;:::i;:::-;28622:9;28616:4;28612:20;28607:2;28596:9;28592:18;28585:48;28650:76;28721:4;28712:6;28650:76;:::i;:::-;28642:84;;28093:640;;;;;;;:::o;28739:141::-;28795:5;28826:6;28820:13;28811:22;;28842:32;28868:5;28842:32;:::i;:::-;28739:141;;;;:::o;28886:349::-;28955:6;29004:2;28992:9;28983:7;28979:23;28975:32;28972:119;;;29010:79;;:::i;:::-;28972:119;29130:1;29155:63;29210:7;29201:6;29190:9;29186:22;29155:63;:::i;:::-;29145:73;;29101:127;28886:349;;;;:::o;29241:180::-;29289:77;29286:1;29279:88;29386:4;29383:1;29376:15;29410:4;29407:1;29400:15;29427:233;29466:3;29489:24;29507:5;29489:24;:::i;:::-;29480:33;;29535:66;29528:5;29525:77;29522:103;;;29605:18;;:::i;:::-;29522:103;29652:1;29645:5;29641:13;29634:20;;29427:233;;;:::o;29666:180::-;29714:77;29711:1;29704:88;29811:4;29808:1;29801:15;29835:4;29832:1;29825:15;29852:185;29892:1;29909:20;29927:1;29909:20;:::i;:::-;29904:25;;29943:20;29961:1;29943:20;:::i;:::-;29938:25;;29982:1;29972:35;;29987:18;;:::i;:::-;29972:35;30029:1;30026;30022:9;30017:14;;29852:185;;;;:::o;30043:191::-;30083:4;30103:20;30121:1;30103:20;:::i;:::-;30098:25;;30137:20;30155:1;30137:20;:::i;:::-;30132:25;;30176:1;30173;30170:8;30167:34;;;30181:18;;:::i;:::-;30167:34;30226:1;30223;30219:9;30211:17;;30043:191;;;;:::o;30240:176::-;30272:1;30289:20;30307:1;30289:20;:::i;:::-;30284:25;;30323:20;30341:1;30323:20;:::i;:::-;30318:25;;30362:1;30352:35;;30367:18;;:::i;:::-;30352:35;30408:1;30405;30401:9;30396:14;;30240:176;;;;:::o;30422:305::-;30462:3;30481:20;30499:1;30481:20;:::i;:::-;30476:25;;30515:20;30533:1;30515:20;:::i;:::-;30510:25;;30669:1;30601:66;30597:74;30594:1;30591:81;30588:107;;;30675:18;;:::i;:::-;30588:107;30719:1;30716;30712:9;30705:16;;30422:305;;;;:::o;30733:180::-;30781:77;30778:1;30771:88;30878:4;30875:1;30868:15;30902:4;30899:1;30892:15",
>>>>>>> Till-Pascal
  "source": "// SPDX-License-Identifier: MIT\n// Creator: Chiru Labs\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\nimport '@openzeppelin/contracts/utils/Context.sol';\nimport '@openzeppelin/contracts/utils/Strings.sol';\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n *\n * Does not support burning tokens to address(0).\n *\n * Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply\n */\ncontract ERC721A is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable {\n    using Address for address;\n    using Strings for uint256;\n\n    struct TokenOwnership {\n        address addr;\n        uint64 startTimestamp;\n    }\n\n    struct AddressData {\n        uint128 balance;\n        uint128 numberMinted;\n    }\n\n    uint256 internal currentIndex;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\n    mapping(uint256 => TokenOwnership) internal _ownerships;\n\n    // Mapping owner address to address data\n    mapping(address => AddressData) private _addressData;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return currentIndex;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view override returns (uint256) {\n        require(index < totalSupply(), 'ERC721A: global index out of bounds');\n        return index;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     * This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first.\n     * It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view override returns (uint256) {\n        require(index < balanceOf(owner), 'ERC721A: owner index out of bounds');\n        uint256 numMintedSoFar = totalSupply();\n        uint256 tokenIdsIdx;\n        address currOwnershipAddr;\n\n        // Counter overflow is impossible as the loop breaks when uint256 i is equal to another uint256 numMintedSoFar.\n        unchecked {\n            for (uint256 i; i < numMintedSoFar; i++) {\n                TokenOwnership memory ownership = _ownerships[i];\n                if (ownership.addr != address(0)) {\n                    currOwnershipAddr = ownership.addr;\n                }\n                if (currOwnershipAddr == owner) {\n                    if (tokenIdsIdx == index) {\n                        return i;\n                    }\n                    tokenIdsIdx++;\n                }\n            }\n        }\n\n        revert('ERC721A: unable to get token of owner by index');\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            interfaceId == type(IERC721Enumerable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        require(owner != address(0), 'ERC721A: balance query for the zero address');\n        return uint256(_addressData[owner].balance);\n    }\n\n    function _numberMinted(address owner) internal view returns (uint256) {\n        require(owner != address(0), 'ERC721A: number minted query for the zero address');\n        return uint256(_addressData[owner].numberMinted);\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        require(_exists(tokenId), 'ERC721A: owner query for nonexistent token');\n\n        unchecked {\n            for (uint256 curr = tokenId; curr >= 0; curr--) {\n                TokenOwnership memory ownership = _ownerships[curr];\n                if (ownership.addr != address(0)) {\n                    return ownership;\n                }\n            }\n        }\n\n        revert('ERC721A: unable to determine the owner of token');\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return ownershipOf(tokenId).addr;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token');\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ERC721A.ownerOf(tokenId);\n        require(to != owner, 'ERC721A: approval to current owner');\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            'ERC721A: approve caller is not owner nor approved for all'\n        );\n\n        _approve(to, tokenId, owner);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        require(_exists(tokenId), 'ERC721A: approved query for nonexistent token');\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public override {\n        require(operator != _msgSender(), 'ERC721A: approve to caller');\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public override {\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public override {\n        _transfer(from, to, tokenId);\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            'ERC721A: transfer to non ERC721Receiver implementer'\n        );\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return tokenId < currentIndex;\n    }\n\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity, _data, true);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(\n        address to,\n        uint256 quantity,\n        bytes memory _data,\n        bool safe\n    ) internal {\n        uint256 startTokenId = currentIndex;\n        require(to != address(0), 'ERC721A: mint to the zero address');\n        require(quantity != 0, 'ERC721A: quantity must be greater than 0');\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // balance or numberMinted overflow if current value of either + quantity > 3.4e38 (2**128) - 1\n        // updatedIndex overflows if currentIndex + quantity > 1.56e77 (2**256) - 1\n        unchecked {\n            _addressData[to].balance += uint128(quantity);\n            _addressData[to].numberMinted += uint128(quantity);\n\n            _ownerships[startTokenId].addr = to;\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\n\n            uint256 updatedIndex = startTokenId;\n\n            for (uint256 i; i < quantity; i++) {\n                emit Transfer(address(0), to, updatedIndex);\n                if (safe) {\n                    require(\n                        _checkOnERC721Received(address(0), to, updatedIndex, _data),\n                        'ERC721A: transfer to non ERC721Receiver implementer'\n                    );\n                }\n\n                updatedIndex++;\n            }\n\n            currentIndex = updatedIndex;\n        }\n\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) private {\n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\n\n        bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||\n            getApproved(tokenId) == _msgSender() ||\n            isApprovedForAll(prevOwnership.addr, _msgSender()));\n\n        require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved');\n\n        require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner');\n        require(to != address(0), 'ERC721A: transfer to the zero address');\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, prevOwnership.addr);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            _addressData[from].balance -= 1;\n            _addressData[to].balance += 1;\n\n            _ownerships[tokenId].addr = to;\n            _ownerships[tokenId].startTimestamp = uint64(block.timestamp);\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            if (_ownerships[nextTokenId].addr == address(0)) {\n                if (_exists(nextTokenId)) {\n                    _ownerships[nextTokenId].addr = prevOwnership.addr;\n                    _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        address owner\n    ) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert('ERC721A: transfer to non ERC721Receiver implementer');\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n     * minting.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n}\n",
  "sourcePath": "erc721a\\contracts\\ERC721A.sol",
  "ast": {
    "absolutePath": "erc721a/contracts/ERC721A.sol",
    "exportedSymbols": {
      "Address": [
        486
      ],
      "Context": [
        508
      ],
      "ERC165": [
        735
      ],
      "ERC721A": [
<<<<<<< HEAD
        1818
=======
        2130
>>>>>>> Till-Pascal
      ],
      "IERC165": [
        747
      ],
      "IERC721": [
        115
      ],
      "IERC721Enumerable": [
        164
      ],
      "IERC721Metadata": [
        191
      ],
      "IERC721Receiver": [
        133
      ],
      "Strings": [
        711
      ]
    },
<<<<<<< HEAD
    "id": 1819,
=======
    "id": 2131,
>>>>>>> Till-Pascal
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 749,
=======
        "id": 1061,
>>>>>>> Till-Pascal
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
        "src": "56:23:9"
=======
        "src": "56:23:10"
>>>>>>> Till-Pascal
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
<<<<<<< HEAD
        "id": 750,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 116,
        "src": "81:58:9",
=======
        "id": 1062,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 116,
        "src": "81:58:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
<<<<<<< HEAD
        "id": 751,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 134,
        "src": "140:66:9",
=======
        "id": 1063,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 134,
        "src": "140:66:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
<<<<<<< HEAD
        "id": 752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 192,
        "src": "207:77:9",
=======
        "id": 1064,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 192,
        "src": "207:77:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
<<<<<<< HEAD
        "id": 753,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 165,
        "src": "285:79:9",
=======
        "id": 1065,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 165,
        "src": "285:79:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
<<<<<<< HEAD
        "id": 754,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 487,
        "src": "365:51:9",
=======
        "id": 1066,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 487,
        "src": "365:51:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
<<<<<<< HEAD
        "id": 755,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 509,
        "src": "417:51:9",
=======
        "id": 1067,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 509,
        "src": "417:51:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
<<<<<<< HEAD
        "id": 756,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 712,
        "src": "469:51:9",
=======
        "id": 1068,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 712,
        "src": "469:51:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
<<<<<<< HEAD
        "id": 757,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 736,
        "src": "521:64:9",
=======
        "id": 1069,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 736,
        "src": "521:64:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 759,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 508,
              "src": "1053:7:9"
            },
            "id": 760,
            "nodeType": "InheritanceSpecifier",
            "src": "1053:7:9"
          },
          {
            "baseName": {
              "id": 761,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 735,
              "src": "1062:6:9"
            },
            "id": 762,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:6:9"
          },
          {
            "baseName": {
              "id": 763,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 115,
              "src": "1070:7:9"
            },
            "id": 764,
            "nodeType": "InheritanceSpecifier",
            "src": "1070:7:9"
          },
          {
            "baseName": {
              "id": 765,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 191,
              "src": "1079:15:9"
            },
            "id": 766,
            "nodeType": "InheritanceSpecifier",
            "src": "1079:15:9"
          },
          {
            "baseName": {
              "id": 767,
              "name": "IERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 164,
              "src": "1096:17:9"
            },
            "id": 768,
            "nodeType": "InheritanceSpecifier",
            "src": "1096:17:9"
=======
              "id": 1071,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 508,
              "src": "1053:7:10"
            },
            "id": 1072,
            "nodeType": "InheritanceSpecifier",
            "src": "1053:7:10"
          },
          {
            "baseName": {
              "id": 1073,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 735,
              "src": "1062:6:10"
            },
            "id": 1074,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:6:10"
          },
          {
            "baseName": {
              "id": 1075,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 115,
              "src": "1070:7:10"
            },
            "id": 1076,
            "nodeType": "InheritanceSpecifier",
            "src": "1070:7:10"
          },
          {
            "baseName": {
              "id": 1077,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 191,
              "src": "1079:15:10"
            },
            "id": 1078,
            "nodeType": "InheritanceSpecifier",
            "src": "1079:15:10"
          },
          {
            "baseName": {
              "id": 1079,
              "name": "IERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 164,
              "src": "1096:17:10"
            },
            "id": 1080,
            "nodeType": "InheritanceSpecifier",
            "src": "1096:17:10"
>>>>>>> Till-Pascal
          }
        ],
        "canonicalName": "ERC721A",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
<<<<<<< HEAD
          "id": 758,
          "nodeType": "StructuredDocumentation",
          "src": "587:445:9",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Does not support burning tokens to address(0).\n Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply"
        },
        "fullyImplemented": true,
        "id": 1818,
        "linearizedBaseContracts": [
          1818,
=======
          "id": 1070,
          "nodeType": "StructuredDocumentation",
          "src": "587:445:10",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Does not support burning tokens to address(0).\n Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply"
        },
        "fullyImplemented": true,
        "id": 2130,
        "linearizedBaseContracts": [
          2130,
>>>>>>> Till-Pascal
          164,
          191,
          115,
          735,
          747,
          508
        ],
        "name": "ERC721A",
<<<<<<< HEAD
        "nameLocation": "1042:7:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 771,
            "libraryName": {
              "id": 769,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 486,
              "src": "1126:7:9"
            },
            "nodeType": "UsingForDirective",
            "src": "1120:26:9",
            "typeName": {
              "id": 770,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1138:7:9",
=======
        "nameLocation": "1042:7:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1083,
            "libraryName": {
              "id": 1081,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 486,
              "src": "1126:7:10"
            },
            "nodeType": "UsingForDirective",
            "src": "1120:26:10",
            "typeName": {
              "id": 1082,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1138:7:10",
>>>>>>> Till-Pascal
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
<<<<<<< HEAD
            "id": 774,
            "libraryName": {
              "id": 772,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 711,
              "src": "1157:7:9"
            },
            "nodeType": "UsingForDirective",
            "src": "1151:26:9",
            "typeName": {
              "id": 773,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1169:7:9",
=======
            "id": 1086,
            "libraryName": {
              "id": 1084,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 711,
              "src": "1157:7:10"
            },
            "nodeType": "UsingForDirective",
            "src": "1151:26:10",
            "typeName": {
              "id": 1085,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1169:7:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "ERC721A.TokenOwnership",
<<<<<<< HEAD
            "id": 779,
            "members": [
              {
                "constant": false,
                "id": 776,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1223:4:9",
                "nodeType": "VariableDeclaration",
                "scope": 779,
                "src": "1215:12:9",
=======
            "id": 1091,
            "members": [
              {
                "constant": false,
                "id": 1088,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1223:4:10",
                "nodeType": "VariableDeclaration",
                "scope": 1091,
                "src": "1215:12:10",
>>>>>>> Till-Pascal
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 775,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1215:7:9",
=======
                  "id": 1087,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1215:7:10",
>>>>>>> Till-Pascal
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 778,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1244:14:9",
                "nodeType": "VariableDeclaration",
                "scope": 779,
                "src": "1237:21:9",
=======
                "id": 1090,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1244:14:10",
                "nodeType": "VariableDeclaration",
                "scope": 1091,
                "src": "1237:21:10",
>>>>>>> Till-Pascal
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 777,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:6:9",
=======
                  "id": 1089,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:6:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenOwnership",
<<<<<<< HEAD
            "nameLocation": "1190:14:9",
            "nodeType": "StructDefinition",
            "scope": 1818,
            "src": "1183:82:9",
=======
            "nameLocation": "1190:14:10",
            "nodeType": "StructDefinition",
            "scope": 2130,
            "src": "1183:82:10",
>>>>>>> Till-Pascal
            "visibility": "public"
          },
          {
            "canonicalName": "ERC721A.AddressData",
<<<<<<< HEAD
            "id": 784,
            "members": [
              {
                "constant": false,
                "id": 781,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "1308:7:9",
                "nodeType": "VariableDeclaration",
                "scope": 784,
                "src": "1300:15:9",
=======
            "id": 1096,
            "members": [
              {
                "constant": false,
                "id": 1093,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "1308:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 1096,
                "src": "1300:15:10",
>>>>>>> Till-Pascal
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 780,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1300:7:9",
=======
                  "id": 1092,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1300:7:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 783,
                "mutability": "mutable",
                "name": "numberMinted",
                "nameLocation": "1333:12:9",
                "nodeType": "VariableDeclaration",
                "scope": 784,
                "src": "1325:20:9",
=======
                "id": 1095,
                "mutability": "mutable",
                "name": "numberMinted",
                "nameLocation": "1333:12:10",
                "nodeType": "VariableDeclaration",
                "scope": 1096,
                "src": "1325:20:10",
>>>>>>> Till-Pascal
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 782,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1325:7:9",
=======
                  "id": 1094,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1325:7:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AddressData",
<<<<<<< HEAD
            "nameLocation": "1278:11:9",
            "nodeType": "StructDefinition",
            "scope": 1818,
            "src": "1271:81:9",
=======
            "nameLocation": "1278:11:10",
            "nodeType": "StructDefinition",
            "scope": 2130,
            "src": "1271:81:10",
>>>>>>> Till-Pascal
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 786,
            "mutability": "mutable",
            "name": "currentIndex",
            "nameLocation": "1375:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1358:29:9",
=======
            "id": 1098,
            "mutability": "mutable",
            "name": "currentIndex",
            "nameLocation": "1375:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1358:29:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 785,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1358:7:9",
=======
              "id": 1097,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1358:7:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 788,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1427:5:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1412:20:9",
=======
            "id": 1100,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1427:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1412:20:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 787,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1412:6:9",
=======
              "id": 1099,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1412:6:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 790,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1474:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1459:22:9",
=======
            "id": 1102,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1474:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1459:22:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 789,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1459:6:9",
=======
              "id": 1101,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1459:6:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 795,
            "mutability": "mutable",
            "name": "_ownerships",
            "nameLocation": "1703:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1659:55:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "typeName": {
              "id": 794,
              "keyType": {
                "id": 791,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1667:7:9",
=======
            "id": 1107,
            "mutability": "mutable",
            "name": "_ownerships",
            "nameLocation": "1703:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1659:55:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "typeName": {
              "id": 1106,
              "keyType": {
                "id": 1103,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1667:7:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1659:34:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
              },
              "valueType": {
                "id": 793,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 792,
                  "name": "TokenOwnership",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 779,
                  "src": "1678:14:9"
                },
                "referencedDeclaration": 779,
                "src": "1678:14:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
              "src": "1659:34:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
              },
              "valueType": {
                "id": 1105,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1104,
                  "name": "TokenOwnership",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1091,
                  "src": "1678:14:10"
                },
                "referencedDeclaration": 1091,
                "src": "1678:14:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                  "typeString": "struct ERC721A.TokenOwnership"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 800,
            "mutability": "mutable",
            "name": "_addressData",
            "nameLocation": "1806:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1766:52:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
              "typeString": "mapping(address => struct ERC721A.AddressData)"
            },
            "typeName": {
              "id": 799,
              "keyType": {
                "id": 796,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1774:7:9",
=======
            "id": 1112,
            "mutability": "mutable",
            "name": "_addressData",
            "nameLocation": "1806:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1766:52:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
              "typeString": "mapping(address => struct ERC721A.AddressData)"
            },
            "typeName": {
              "id": 1111,
              "keyType": {
                "id": 1108,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1774:7:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1766:31:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                "typeString": "mapping(address => struct ERC721A.AddressData)"
              },
              "valueType": {
                "id": 798,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 797,
                  "name": "AddressData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 784,
                  "src": "1785:11:9"
                },
                "referencedDeclaration": 784,
                "src": "1785:11:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressData_$784_storage_ptr",
=======
              "src": "1766:31:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                "typeString": "mapping(address => struct ERC721A.AddressData)"
              },
              "valueType": {
                "id": 1110,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1109,
                  "name": "AddressData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1096,
                  "src": "1785:11:10"
                },
                "referencedDeclaration": 1096,
                "src": "1785:11:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressData_$1096_storage_ptr",
>>>>>>> Till-Pascal
                  "typeString": "struct ERC721A.AddressData"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 804,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1910:15:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1874:51:9",
=======
            "id": 1116,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1910:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1874:51:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 803,
              "keyType": {
                "id": 801,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1882:7:9",
=======
              "id": 1115,
              "keyType": {
                "id": 1113,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1882:7:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1874:27:9",
=======
              "src": "1874:27:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 802,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1893:7:9",
=======
                "id": 1114,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1893:7:10",
>>>>>>> Till-Pascal
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 810,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "2033:18:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1980:71:9",
=======
            "id": 1122,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "2033:18:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1980:71:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 809,
              "keyType": {
                "id": 805,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1988:7:9",
=======
              "id": 1121,
              "keyType": {
                "id": 1117,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1988:7:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1980:44:9",
=======
              "src": "1980:44:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 808,
                "keyType": {
                  "id": 806,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:9",
=======
                "id": 1120,
                "keyType": {
                  "id": 1118,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
<<<<<<< HEAD
                "src": "1999:24:9",
=======
                "src": "1999:24:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
<<<<<<< HEAD
                  "id": 807,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2018:4:9",
=======
                  "id": 1119,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2018:4:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 825,
              "nodeType": "Block",
              "src": "2114:57:9",
              "statements": [
                {
                  "expression": {
                    "id": 819,
=======
              "id": 1137,
              "nodeType": "Block",
              "src": "2114:57:10",
              "statements": [
                {
                  "expression": {
                    "id": 1131,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 817,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "2124:5:9",
=======
                      "id": 1129,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "2124:5:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 818,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "2132:5:9",
=======
                      "id": 1130,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "2132:5:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "2124:13:9",
=======
                    "src": "2124:13:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:13:9"
                },
                {
                  "expression": {
                    "id": 823,
=======
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:13:10"
                },
                {
                  "expression": {
                    "id": 1135,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 821,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "2147:7:9",
=======
                      "id": 1133,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "2147:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 822,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "2157:7:9",
=======
                      "id": 1134,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "2157:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "2147:17:9",
=======
                    "src": "2147:17:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:17:9"
                }
              ]
            },
            "id": 826,
=======
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:17:10"
                }
              ]
            },
            "id": 1138,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 815,
=======
              "id": 1127,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 812,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2084:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "2070:19:9",
=======
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2084:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "2070:19:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 811,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:6:9",
=======
                    "id": 1123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 814,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2105:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "2091:21:9",
=======
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2105:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "2091:21:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 813,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:6:9",
=======
                    "id": 1125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2069:44:9"
            },
            "returnParameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2114:0:9"
            },
            "scope": 1818,
            "src": "2058:113:9",
=======
              "src": "2069:44:10"
            },
            "returnParameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2114:0:10"
            },
            "scope": 2130,
            "src": "2058:113:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              145
            ],
            "body": {
<<<<<<< HEAD
              "id": 835,
              "nodeType": "Block",
              "src": "2304:36:9",
              "statements": [
                {
                  "expression": {
                    "id": 833,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 786,
                    "src": "2321:12:9",
=======
              "id": 1147,
              "nodeType": "Block",
              "src": "2304:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 1145,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1098,
                    "src": "2321:12:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 832,
                  "id": 834,
                  "nodeType": "Return",
                  "src": "2314:19:9"
=======
                  "functionReturnParameters": 1144,
                  "id": 1146,
                  "nodeType": "Return",
                  "src": "2314:19:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 827,
              "nodeType": "StructuredDocumentation",
              "src": "2177:60:9",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 836,
=======
              "id": 1139,
              "nodeType": "StructuredDocumentation",
              "src": "2177:60:10",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 1148,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
<<<<<<< HEAD
            "nameLocation": "2251:11:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 829,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2277:8:9"
            },
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:2:9"
            },
            "returnParameters": {
              "id": 832,
=======
            "nameLocation": "2251:11:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1141,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2277:8:10"
            },
            "parameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:2:10"
            },
            "returnParameters": {
              "id": 1144,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 831,
=======
                  "id": 1143,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 836,
                  "src": "2295:7:9",
=======
                  "scope": 1148,
                  "src": "2295:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:9",
=======
                    "id": 1142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2294:9:9"
            },
            "scope": 1818,
            "src": "2242:98:9",
=======
              "src": "2294:9:10"
            },
            "scope": 2130,
            "src": "2242:98:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              163
            ],
            "body": {
<<<<<<< HEAD
              "id": 855,
              "nodeType": "Block",
              "src": "2488:108:9",
=======
              "id": 1167,
              "nodeType": "Block",
              "src": "2488:108:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 849,
=======
                        "id": 1161,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 846,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "2506:5:9",
=======
                          "id": 1158,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "2506:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
<<<<<<< HEAD
                            "id": 847,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 836,
                            "src": "2514:11:9",
=======
                            "id": 1159,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "2514:11:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 848,
=======
                          "id": 1160,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2514:13:9",
=======
                          "src": "2514:13:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "2506:21:9",
=======
                        "src": "2506:21:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
<<<<<<< HEAD
                        "id": 850,
=======
                        "id": 1162,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2529:37:9",
=======
                        "src": "2529:37:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
                          "typeString": "literal_string \"ERC721A: global index out of bounds\""
                        },
                        "value": "ERC721A: global index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
                          "typeString": "literal_string \"ERC721A: global index out of bounds\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 845,
=======
                      "id": 1157,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2498:7:9",
=======
                      "src": "2498:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 851,
=======
                    "id": 1163,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2498:69:9",
=======
                    "src": "2498:69:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:69:9"
                },
                {
                  "expression": {
                    "id": 853,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 839,
                    "src": "2584:5:9",
=======
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:69:10"
                },
                {
                  "expression": {
                    "id": 1165,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1151,
                    "src": "2584:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 844,
                  "id": 854,
                  "nodeType": "Return",
                  "src": "2577:12:9"
=======
                  "functionReturnParameters": 1156,
                  "id": 1166,
                  "nodeType": "Return",
                  "src": "2577:12:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 837,
              "nodeType": "StructuredDocumentation",
              "src": "2346:61:9",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 856,
=======
              "id": 1149,
              "nodeType": "StructuredDocumentation",
              "src": "2346:61:10",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 1168,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
<<<<<<< HEAD
            "nameLocation": "2421:12:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 841,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2461:8:9"
            },
            "parameters": {
              "id": 840,
=======
            "nameLocation": "2421:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2461:8:10"
            },
            "parameters": {
              "id": 1152,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 839,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2442:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "2434:13:9",
=======
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2442:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "2434:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:9",
=======
                    "id": 1150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2433:15:9"
            },
            "returnParameters": {
              "id": 844,
=======
              "src": "2433:15:10"
            },
            "returnParameters": {
              "id": 1156,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 843,
=======
                  "id": 1155,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 856,
                  "src": "2479:7:9",
=======
                  "scope": 1168,
                  "src": "2479:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:7:9",
=======
                    "id": 1154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2478:9:9"
            },
            "scope": 1818,
            "src": "2412:184:9",
=======
              "src": "2478:9:10"
            },
            "scope": 2130,
            "src": "2412:184:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              155
            ],
            "body": {
<<<<<<< HEAD
              "id": 939,
              "nodeType": "Block",
              "src": "2987:886:9",
=======
              "id": 1251,
              "nodeType": "Block",
              "src": "2987:886:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 872,
=======
                        "id": 1184,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 868,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 861,
                          "src": "3005:5:9",
=======
                          "id": 1180,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "3005:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 870,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "3023:5:9",
=======
                              "id": 1182,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "3023:5:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
<<<<<<< HEAD
                            "id": 869,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "3013:9:9",
=======
                            "id": 1181,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "3013:9:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 871,
=======
                          "id": 1183,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3013:16:9",
=======
                          "src": "3013:16:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "3005:24:9",
=======
                        "src": "3005:24:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206f776e657220696e646578206f7574206f6620626f756e6473",
<<<<<<< HEAD
                        "id": 873,
=======
                        "id": 1185,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3031:36:9",
=======
                        "src": "3031:36:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
                          "typeString": "literal_string \"ERC721A: owner index out of bounds\""
                        },
                        "value": "ERC721A: owner index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
                          "typeString": "literal_string \"ERC721A: owner index out of bounds\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 867,
=======
                      "id": 1179,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2997:7:9",
=======
                      "src": "2997:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 874,
=======
                    "id": 1186,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2997:71:9",
=======
                    "src": "2997:71:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "2997:71:9"
                },
                {
                  "assignments": [
                    877
=======
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "2997:71:10"
                },
                {
                  "assignments": [
                    1189
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 877,
                      "mutability": "mutable",
                      "name": "numMintedSoFar",
                      "nameLocation": "3086:14:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "3078:22:9",
=======
                      "id": 1189,
                      "mutability": "mutable",
                      "name": "numMintedSoFar",
                      "nameLocation": "3086:14:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3078:22:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3078:7:9",
=======
                        "id": 1188,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3078:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 880,
=======
                  "id": 1192,
>>>>>>> Till-Pascal
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 878,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 836,
                      "src": "3103:11:9",
=======
                      "id": 1190,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "3103:11:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 879,
=======
                    "id": 1191,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3103:13:9",
=======
                    "src": "3103:13:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3078:38:9"
                },
                {
                  "assignments": [
                    882
=======
                  "src": "3078:38:10"
                },
                {
                  "assignments": [
                    1194
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 882,
                      "mutability": "mutable",
                      "name": "tokenIdsIdx",
                      "nameLocation": "3134:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "3126:19:9",
=======
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "tokenIdsIdx",
                      "nameLocation": "3134:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3126:19:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 881,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3126:7:9",
=======
                        "id": 1193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3126:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 883,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3126:19:9"
                },
                {
                  "assignments": [
                    885
=======
                  "id": 1195,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3126:19:10"
                },
                {
                  "assignments": [
                    1197
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 885,
                      "mutability": "mutable",
                      "name": "currOwnershipAddr",
                      "nameLocation": "3163:17:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "3155:25:9",
=======
                      "id": 1197,
                      "mutability": "mutable",
                      "name": "currOwnershipAddr",
                      "nameLocation": "3163:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3155:25:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 884,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3155:7:9",
=======
                        "id": 1196,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3155:7:10",
>>>>>>> Till-Pascal
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 886,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3155:25:9"
                },
                {
                  "id": 934,
                  "nodeType": "UncheckedBlock",
                  "src": "3311:489:9",
                  "statements": [
                    {
                      "body": {
                        "id": 932,
                        "nodeType": "Block",
                        "src": "3376:414:9",
                        "statements": [
                          {
                            "assignments": [
                              898
=======
                  "id": 1198,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3155:25:10"
                },
                {
                  "id": 1246,
                  "nodeType": "UncheckedBlock",
                  "src": "3311:489:10",
                  "statements": [
                    {
                      "body": {
                        "id": 1244,
                        "nodeType": "Block",
                        "src": "3376:414:10",
                        "statements": [
                          {
                            "assignments": [
                              1210
>>>>>>> Till-Pascal
                            ],
                            "declarations": [
                              {
                                "constant": false,
<<<<<<< HEAD
                                "id": 898,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "3416:9:9",
                                "nodeType": "VariableDeclaration",
                                "scope": 932,
                                "src": "3394:31:9",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 897,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 896,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 779,
                                    "src": "3394:14:9"
                                  },
                                  "referencedDeclaration": 779,
                                  "src": "3394:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
                                "id": 1210,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "3416:9:10",
                                "nodeType": "VariableDeclaration",
                                "scope": 1244,
                                "src": "3394:31:10",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 1209,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1208,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1091,
                                    "src": "3394:14:10"
                                  },
                                  "referencedDeclaration": 1091,
                                  "src": "3394:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                                    "typeString": "struct ERC721A.TokenOwnership"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
<<<<<<< HEAD
                            "id": 902,
                            "initialValue": {
                              "baseExpression": {
                                "id": 899,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "3428:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 901,
                              "indexExpression": {
                                "id": 900,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 888,
                                "src": "3440:1:9",
=======
                            "id": 1214,
                            "initialValue": {
                              "baseExpression": {
                                "id": 1211,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "3428:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 1213,
                              "indexExpression": {
                                "id": 1212,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "3440:1:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "3428:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
=======
                              "src": "3428:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
>>>>>>> Till-Pascal
                                "typeString": "struct ERC721A.TokenOwnership storage ref"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3394:48:9"
=======
                            "src": "3394:48:10"
>>>>>>> Till-Pascal
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
<<<<<<< HEAD
                              "id": 909,
=======
                              "id": 1221,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
<<<<<<< HEAD
                                  "id": 903,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 898,
                                  "src": "3464:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 904,
=======
                                  "id": 1215,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1210,
                                  "src": "3464:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 1216,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 776,
                                "src": "3464:14:9",
=======
                                "referencedDeclaration": 1088,
                                "src": "3464:14:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
<<<<<<< HEAD
                                    "id": 907,
=======
                                    "id": 1219,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "3490:1:9",
=======
                                    "src": "3490:1:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 906,
=======
                                  "id": 1218,
>>>>>>> Till-Pascal
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "3482:7:9",
=======
                                  "src": "3482:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 905,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3482:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 908,
=======
                                    "id": 1217,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3482:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1220,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "3482:10:9",
=======
                                "src": "3482:10:10",
>>>>>>> Till-Pascal
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
<<<<<<< HEAD
                              "src": "3464:28:9",
=======
                              "src": "3464:28:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 916,
                            "nodeType": "IfStatement",
                            "src": "3460:109:9",
                            "trueBody": {
                              "id": 915,
                              "nodeType": "Block",
                              "src": "3494:75:9",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 913,
=======
                            "id": 1228,
                            "nodeType": "IfStatement",
                            "src": "3460:109:10",
                            "trueBody": {
                              "id": 1227,
                              "nodeType": "Block",
                              "src": "3494:75:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1225,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
<<<<<<< HEAD
                                      "id": 910,
                                      "name": "currOwnershipAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 885,
                                      "src": "3516:17:9",
=======
                                      "id": 1222,
                                      "name": "currOwnershipAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1197,
                                      "src": "3516:17:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 911,
                                        "name": "ownership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 898,
                                        "src": "3536:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 912,
=======
                                        "id": 1223,
                                        "name": "ownership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1210,
                                        "src": "3536:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1224,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 776,
                                      "src": "3536:14:9",
=======
                                      "referencedDeclaration": 1088,
                                      "src": "3536:14:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "3516:34:9",
=======
                                    "src": "3516:34:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 914,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3516:34:9"
=======
                                  "id": 1226,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3516:34:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
<<<<<<< HEAD
                              "id": 919,
=======
                              "id": 1231,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
<<<<<<< HEAD
                                "id": 917,
                                "name": "currOwnershipAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 885,
                                "src": "3590:17:9",
=======
                                "id": 1229,
                                "name": "currOwnershipAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1197,
                                "src": "3590:17:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
<<<<<<< HEAD
                                "id": 918,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 859,
                                "src": "3611:5:9",
=======
                                "id": 1230,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1171,
                                "src": "3611:5:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
<<<<<<< HEAD
                              "src": "3590:26:9",
=======
                              "src": "3590:26:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 931,
                            "nodeType": "IfStatement",
                            "src": "3586:190:9",
                            "trueBody": {
                              "id": 930,
                              "nodeType": "Block",
                              "src": "3618:158:9",
=======
                            "id": 1243,
                            "nodeType": "IfStatement",
                            "src": "3586:190:10",
                            "trueBody": {
                              "id": 1242,
                              "nodeType": "Block",
                              "src": "3618:158:10",
>>>>>>> Till-Pascal
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 922,
=======
                                    "id": 1234,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
<<<<<<< HEAD
                                      "id": 920,
                                      "name": "tokenIdsIdx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 882,
                                      "src": "3644:11:9",
=======
                                      "id": 1232,
                                      "name": "tokenIdsIdx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "3644:11:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
<<<<<<< HEAD
                                      "id": 921,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 861,
                                      "src": "3659:5:9",
=======
                                      "id": 1233,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1173,
                                      "src": "3659:5:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "3644:20:9",
=======
                                    "src": "3644:20:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 926,
                                  "nodeType": "IfStatement",
                                  "src": "3640:83:9",
                                  "trueBody": {
                                    "id": 925,
                                    "nodeType": "Block",
                                    "src": "3666:57:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 923,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 888,
                                          "src": "3699:1:9",
=======
                                  "id": 1238,
                                  "nodeType": "IfStatement",
                                  "src": "3640:83:10",
                                  "trueBody": {
                                    "id": 1237,
                                    "nodeType": "Block",
                                    "src": "3666:57:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 1235,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1200,
                                          "src": "3699:1:10",
>>>>>>> Till-Pascal
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
<<<<<<< HEAD
                                        "functionReturnParameters": 866,
                                        "id": 924,
                                        "nodeType": "Return",
                                        "src": "3692:8:9"
=======
                                        "functionReturnParameters": 1178,
                                        "id": 1236,
                                        "nodeType": "Return",
                                        "src": "3692:8:10"
>>>>>>> Till-Pascal
                                      }
                                    ]
                                  }
                                },
                                {
                                  "expression": {
<<<<<<< HEAD
                                    "id": 928,
=======
                                    "id": 1240,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
<<<<<<< HEAD
                                    "src": "3744:13:9",
                                    "subExpression": {
                                      "id": 927,
                                      "name": "tokenIdsIdx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 882,
                                      "src": "3744:11:9",
=======
                                    "src": "3744:13:10",
                                    "subExpression": {
                                      "id": 1239,
                                      "name": "tokenIdsIdx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "3744:11:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 929,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3744:13:9"
=======
                                  "id": 1241,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3744:13:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 892,
=======
                        "id": 1204,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 890,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "3351:1:9",
=======
                          "id": 1202,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "3351:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 891,
                          "name": "numMintedSoFar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "3355:14:9",
=======
                          "id": 1203,
                          "name": "numMintedSoFar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "3355:14:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "3351:18:9",
=======
                        "src": "3351:18:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "id": 933,
                      "initializationExpression": {
                        "assignments": [
                          888
=======
                      "id": 1245,
                      "initializationExpression": {
                        "assignments": [
                          1200
>>>>>>> Till-Pascal
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 888,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "3348:1:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 933,
                            "src": "3340:9:9",
=======
                            "id": 1200,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "3348:1:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1245,
                            "src": "3340:9:10",
>>>>>>> Till-Pascal
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 887,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3340:7:9",
=======
                              "id": 1199,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3340:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 889,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3340:9:9"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 894,
=======
                        "id": 1201,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3340:9:10"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1206,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
<<<<<<< HEAD
                          "src": "3371:3:9",
                          "subExpression": {
                            "id": 893,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "3371:1:9",
=======
                          "src": "3371:3:10",
                          "subExpression": {
                            "id": 1205,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "3371:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 895,
                        "nodeType": "ExpressionStatement",
                        "src": "3371:3:9"
                      },
                      "nodeType": "ForStatement",
                      "src": "3335:455:9"
=======
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "3371:3:10"
                      },
                      "nodeType": "ForStatement",
                      "src": "3335:455:10"
>>>>>>> Till-Pascal
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243373231413a20756e61626c6520746f2067657420746f6b656e206f66206f776e657220627920696e646578",
<<<<<<< HEAD
                        "id": 936,
=======
                        "id": 1248,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3817:48:9",
=======
                        "src": "3817:48:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
                          "typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
                        },
                        "value": "ERC721A: unable to get token of owner by index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
                          "typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 935,
=======
                      "id": 1247,
>>>>>>> Till-Pascal
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
<<<<<<< HEAD
                      "src": "3810:6:9",
=======
                      "src": "3810:6:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 937,
=======
                    "id": 1249,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3810:56:9",
=======
                    "src": "3810:56:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:56:9"
=======
                  "id": 1250,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:56:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 857,
              "nodeType": "StructuredDocumentation",
              "src": "2602:282:9",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first.\n It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
            },
            "functionSelector": "2f745c59",
            "id": 940,
=======
              "id": 1169,
              "nodeType": "StructuredDocumentation",
              "src": "2602:282:10",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first.\n It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
            },
            "functionSelector": "2f745c59",
            "id": 1252,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
<<<<<<< HEAD
            "nameLocation": "2898:19:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 863,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2960:8:9"
            },
            "parameters": {
              "id": 862,
=======
            "nameLocation": "2898:19:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1175,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2960:8:10"
            },
            "parameters": {
              "id": 1174,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 859,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2926:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "2918:13:9",
=======
                  "id": 1171,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2926:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "2918:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:9",
=======
                    "id": 1170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 861,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2941:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "2933:13:9",
=======
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2941:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "2933:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2933:7:9",
=======
                    "id": 1172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2933:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2917:30:9"
            },
            "returnParameters": {
              "id": 866,
=======
              "src": "2917:30:10"
            },
            "returnParameters": {
              "id": 1178,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 865,
=======
                  "id": 1177,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 940,
                  "src": "2978:7:9",
=======
                  "scope": 1252,
                  "src": "2978:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:7:9",
=======
                    "id": 1176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2977:9:9"
            },
            "scope": 1818,
            "src": "2889:984:9",
=======
              "src": "2977:9:10"
            },
            "scope": 2130,
            "src": "2889:984:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              734,
              746
            ],
            "body": {
<<<<<<< HEAD
              "id": 977,
              "nodeType": "Block",
              "src": "4048:258:9",
=======
              "id": 1289,
              "nodeType": "Block",
              "src": "4048:258:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
<<<<<<< HEAD
                    "id": 975,
=======
                    "id": 1287,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
<<<<<<< HEAD
                      "id": 970,
=======
                      "id": 1282,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 963,
=======
                        "id": 1275,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
<<<<<<< HEAD
                          "id": 956,
=======
                          "id": 1268,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
<<<<<<< HEAD
                            "id": 951,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "4077:11:9",
=======
                            "id": 1263,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "4077:11:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 953,
=======
                                  "id": 1265,
>>>>>>> Till-Pascal
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
<<<<<<< HEAD
                                  "src": "4097:7:9",
=======
                                  "src": "4097:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 952,
=======
                                "id": 1264,
>>>>>>> Till-Pascal
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
<<<<<<< HEAD
                                "src": "4092:4:9",
=======
                                "src": "4092:4:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
<<<<<<< HEAD
                              "id": 954,
=======
                              "id": 1266,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "4092:13:9",
=======
                              "src": "4092:13:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
                                "typeString": "type(contract IERC721)"
                              }
                            },
<<<<<<< HEAD
                            "id": 955,
=======
                            "id": 1267,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "4092:25:9",
=======
                            "src": "4092:25:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
<<<<<<< HEAD
                          "src": "4077:40:9",
=======
                          "src": "4077:40:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
<<<<<<< HEAD
                          "id": 962,
=======
                          "id": 1274,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
<<<<<<< HEAD
                            "id": 957,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "4133:11:9",
=======
                            "id": 1269,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "4133:11:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 959,
=======
                                  "id": 1271,
>>>>>>> Till-Pascal
                                  "name": "IERC721Metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
<<<<<<< HEAD
                                  "src": "4153:15:9",
=======
                                  "src": "4153:15:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$191_$",
                                    "typeString": "type(contract IERC721Metadata)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$191_$",
                                    "typeString": "type(contract IERC721Metadata)"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 958,
=======
                                "id": 1270,
>>>>>>> Till-Pascal
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
<<<<<<< HEAD
                                "src": "4148:4:9",
=======
                                "src": "4148:4:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
<<<<<<< HEAD
                              "id": 960,
=======
                              "id": 1272,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "4148:21:9",
=======
                              "src": "4148:21:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$191",
                                "typeString": "type(contract IERC721Metadata)"
                              }
                            },
<<<<<<< HEAD
                            "id": 961,
=======
                            "id": 1273,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "4148:33:9",
=======
                            "src": "4148:33:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
<<<<<<< HEAD
                          "src": "4133:48:9",
=======
                          "src": "4133:48:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "4077:104:9",
=======
                        "src": "4077:104:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
<<<<<<< HEAD
                        "id": 969,
=======
                        "id": 1281,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 964,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "4197:11:9",
=======
                          "id": 1276,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "4197:11:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 966,
=======
                                "id": 1278,
>>>>>>> Till-Pascal
                                "name": "IERC721Enumerable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
<<<<<<< HEAD
                                "src": "4217:17:9",
=======
                                "src": "4217:17:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$164_$",
                                  "typeString": "type(contract IERC721Enumerable)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$164_$",
                                  "typeString": "type(contract IERC721Enumerable)"
                                }
                              ],
<<<<<<< HEAD
                              "id": 965,
=======
                              "id": 1277,
>>>>>>> Till-Pascal
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
<<<<<<< HEAD
                              "src": "4212:4:9",
=======
                              "src": "4212:4:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
<<<<<<< HEAD
                            "id": 967,
=======
                            "id": 1279,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4212:23:9",
=======
                            "src": "4212:23:10",
>>>>>>> Till-Pascal
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$164",
                              "typeString": "type(contract IERC721Enumerable)"
                            }
                          },
<<<<<<< HEAD
                          "id": 968,
=======
                          "id": 1280,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "4212:35:9",
=======
                          "src": "4212:35:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
<<<<<<< HEAD
                        "src": "4197:50:9",
=======
                        "src": "4197:50:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "src": "4077:170:9",
=======
                      "src": "4077:170:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 973,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "4287:11:9",
=======
                          "id": 1285,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "4287:11:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
<<<<<<< HEAD
                          "id": 971,
=======
                          "id": 1283,
>>>>>>> Till-Pascal
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
<<<<<<< HEAD
                          "src": "4263:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721A_$1818_$",
                            "typeString": "type(contract super ERC721A)"
                          }
                        },
                        "id": 972,
=======
                          "src": "4263:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721A_$2130_$",
                            "typeString": "type(contract super ERC721A)"
                          }
                        },
                        "id": 1284,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 734,
<<<<<<< HEAD
                        "src": "4263:23:9",
=======
                        "src": "4263:23:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
<<<<<<< HEAD
                      "id": 974,
=======
                      "id": 1286,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "4263:36:9",
=======
                      "src": "4263:36:10",
>>>>>>> Till-Pascal
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "4077:222:9",
=======
                    "src": "4077:222:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 950,
                  "id": 976,
                  "nodeType": "Return",
                  "src": "4058:241:9"
=======
                  "functionReturnParameters": 1262,
                  "id": 1288,
                  "nodeType": "Return",
                  "src": "4058:241:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 941,
              "nodeType": "StructuredDocumentation",
              "src": "3879:56:9",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 978,
=======
              "id": 1253,
              "nodeType": "StructuredDocumentation",
              "src": "3879:56:10",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1290,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
<<<<<<< HEAD
            "nameLocation": "3949:17:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 947,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 945,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 735,
                  "src": "4016:6:9"
                },
                {
                  "id": 946,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 747,
                  "src": "4024:7:9"
                }
              ],
              "src": "4007:25:9"
            },
            "parameters": {
              "id": 944,
=======
            "nameLocation": "3949:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1259,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1257,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 735,
                  "src": "4016:6:10"
                },
                {
                  "id": 1258,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 747,
                  "src": "4024:7:10"
                }
              ],
              "src": "4007:25:10"
            },
            "parameters": {
              "id": 1256,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 943,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3974:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "3967:18:9",
=======
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3974:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1290,
                  "src": "3967:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 942,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:6:9",
=======
                    "id": 1254,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3966:20:9"
            },
            "returnParameters": {
              "id": 950,
=======
              "src": "3966:20:10"
            },
            "returnParameters": {
              "id": 1262,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 949,
=======
                  "id": 1261,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 978,
                  "src": "4042:4:9",
=======
                  "scope": 1290,
                  "src": "4042:4:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 948,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4042:4:9",
=======
                    "id": 1260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4042:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4041:6:9"
            },
            "scope": 1818,
            "src": "3940:366:9",
=======
              "src": "4041:6:10"
            },
            "scope": 2130,
            "src": "3940:366:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              40
            ],
            "body": {
<<<<<<< HEAD
              "id": 1005,
              "nodeType": "Block",
              "src": "4438:145:9",
=======
              "id": 1317,
              "nodeType": "Block",
              "src": "4438:145:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 993,
=======
                        "id": 1305,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 988,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "4456:5:9",
=======
                          "id": 1300,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "4456:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 991,
=======
                              "id": 1303,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "4473:1:9",
=======
                              "src": "4473:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 990,
=======
                            "id": 1302,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "4465:7:9",
=======
                            "src": "4465:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 989,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4465:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 992,
=======
                              "id": 1301,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4465:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1304,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "4465:10:9",
=======
                          "src": "4465:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "4456:19:9",
=======
                        "src": "4456:19:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 994,
=======
                        "id": 1306,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4477:45:9",
=======
                        "src": "4477:45:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
                          "typeString": "literal_string \"ERC721A: balance query for the zero address\""
                        },
                        "value": "ERC721A: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
                          "typeString": "literal_string \"ERC721A: balance query for the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 987,
=======
                      "id": 1299,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "4448:7:9",
=======
                      "src": "4448:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 995,
=======
                    "id": 1307,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4448:75:9",
=======
                    "src": "4448:75:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:75:9"
=======
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:75:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
<<<<<<< HEAD
                            "id": 999,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "4548:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 1001,
                          "indexExpression": {
                            "id": 1000,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "4561:5:9",
=======
                            "id": 1311,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "4548:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 1313,
                          "indexExpression": {
                            "id": 1312,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "4561:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "4548:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$784_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 1002,
=======
                          "src": "4548:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 1314,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 781,
                        "src": "4548:27:9",
=======
                        "referencedDeclaration": 1093,
                        "src": "4548:27:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
<<<<<<< HEAD
                      "id": 998,
=======
                      "id": 1310,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                      "src": "4540:7:9",
=======
                      "src": "4540:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 997,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4540:7:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1003,
=======
                        "id": 1309,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4540:7:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1315,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4540:36:9",
=======
                    "src": "4540:36:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 986,
                  "id": 1004,
                  "nodeType": "Return",
                  "src": "4533:43:9"
=======
                  "functionReturnParameters": 1298,
                  "id": 1316,
                  "nodeType": "Return",
                  "src": "4533:43:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 979,
              "nodeType": "StructuredDocumentation",
              "src": "4312:48:9",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1006,
=======
              "id": 1291,
              "nodeType": "StructuredDocumentation",
              "src": "4312:48:10",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1318,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
<<<<<<< HEAD
            "nameLocation": "4374:9:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 983,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4411:8:9"
            },
            "parameters": {
              "id": 982,
=======
            "nameLocation": "4374:9:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1295,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4411:8:10"
            },
            "parameters": {
              "id": 1294,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 981,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4392:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "4384:13:9",
=======
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4392:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "4384:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:7:9",
=======
                    "id": 1292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4383:15:9"
            },
            "returnParameters": {
              "id": 986,
=======
              "src": "4383:15:10"
            },
            "returnParameters": {
              "id": 1298,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 985,
=======
                  "id": 1297,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1006,
                  "src": "4429:7:9",
=======
                  "scope": 1318,
                  "src": "4429:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:9",
=======
                    "id": 1296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4428:9:9"
            },
            "scope": 1818,
            "src": "4365:218:9",
=======
              "src": "4428:9:10"
            },
            "scope": 2130,
            "src": "4365:218:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1031,
              "nodeType": "Block",
              "src": "4659:156:9",
=======
              "id": 1343,
              "nodeType": "Block",
              "src": "4659:156:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1019,
=======
                        "id": 1331,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1014,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "4677:5:9",
=======
                          "id": 1326,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "4677:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 1017,
=======
                              "id": 1329,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "4694:1:9",
=======
                              "src": "4694:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1016,
=======
                            "id": 1328,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "4686:7:9",
=======
                            "src": "4686:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1015,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4686:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1018,
=======
                              "id": 1327,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4686:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1330,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "4686:10:9",
=======
                          "src": "4686:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "4677:19:9",
=======
                        "src": "4677:19:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206e756d626572206d696e74656420717565727920666f7220746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 1020,
=======
                        "id": 1332,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4698:51:9",
=======
                        "src": "4698:51:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
                          "typeString": "literal_string \"ERC721A: number minted query for the zero address\""
                        },
                        "value": "ERC721A: number minted query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
                          "typeString": "literal_string \"ERC721A: number minted query for the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1013,
=======
                      "id": 1325,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "4669:7:9",
=======
                      "src": "4669:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1021,
=======
                    "id": 1333,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4669:81:9",
=======
                    "src": "4669:81:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "4669:81:9"
=======
                  "id": 1334,
                  "nodeType": "ExpressionStatement",
                  "src": "4669:81:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
<<<<<<< HEAD
                            "id": 1025,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "4775:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 1027,
                          "indexExpression": {
                            "id": 1026,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1008,
                            "src": "4788:5:9",
=======
                            "id": 1337,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "4775:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 1339,
                          "indexExpression": {
                            "id": 1338,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "4788:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "4775:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$784_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 1028,
=======
                          "src": "4775:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 1340,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberMinted",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 783,
                        "src": "4775:32:9",
=======
                        "referencedDeclaration": 1095,
                        "src": "4775:32:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1024,
=======
                      "id": 1336,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                      "src": "4767:7:9",
=======
                      "src": "4767:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1023,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4767:7:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1029,
=======
                        "id": 1335,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4767:7:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1341,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4767:41:9",
=======
                    "src": "4767:41:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1012,
                  "id": 1030,
                  "nodeType": "Return",
                  "src": "4760:48:9"
                }
              ]
            },
            "id": 1032,
=======
                  "functionReturnParameters": 1324,
                  "id": 1342,
                  "nodeType": "Return",
                  "src": "4760:48:10"
                }
              ]
            },
            "id": 1344,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_numberMinted",
<<<<<<< HEAD
            "nameLocation": "4598:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1009,
=======
            "nameLocation": "4598:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4620:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "4612:13:9",
=======
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4620:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1344,
                  "src": "4612:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:7:9",
=======
                    "id": 1319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4611:15:9"
            },
            "returnParameters": {
              "id": 1012,
=======
              "src": "4611:15:10"
            },
            "returnParameters": {
              "id": 1324,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1011,
=======
                  "id": 1323,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1032,
                  "src": "4650:7:9",
=======
                  "scope": 1344,
                  "src": "4650:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4650:7:9",
=======
                    "id": 1322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4650:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4649:9:9"
            },
            "scope": 1818,
            "src": "4589:226:9",
=======
              "src": "4649:9:10"
            },
            "scope": 2130,
            "src": "4589:226:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1083,
              "nodeType": "Block",
              "src": "5095:440:9",
=======
              "id": 1395,
              "nodeType": "Block",
              "src": "5095:440:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 1043,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "5121:7:9",
=======
                            "id": 1355,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "5121:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1042,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "5113:7:9",
=======
                          "id": 1354,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1679,
                          "src": "5113:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1044,
=======
                        "id": 1356,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "5113:16:9",
=======
                        "src": "5113:16:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
<<<<<<< HEAD
                        "id": 1045,
=======
                        "id": 1357,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5131:44:9",
=======
                        "src": "5131:44:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
                          "typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
                        },
                        "value": "ERC721A: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
                          "typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1041,
=======
                      "id": 1353,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5105:7:9",
=======
                      "src": "5105:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1046,
=======
                    "id": 1358,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5105:71:9",
=======
                    "src": "5105:71:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:71:9"
                },
                {
                  "id": 1078,
                  "nodeType": "UncheckedBlock",
                  "src": "5187:274:9",
                  "statements": [
                    {
                      "body": {
                        "id": 1076,
                        "nodeType": "Block",
                        "src": "5259:192:9",
                        "statements": [
                          {
                            "assignments": [
                              1060
=======
                  "id": 1359,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:71:10"
                },
                {
                  "id": 1390,
                  "nodeType": "UncheckedBlock",
                  "src": "5187:274:10",
                  "statements": [
                    {
                      "body": {
                        "id": 1388,
                        "nodeType": "Block",
                        "src": "5259:192:10",
                        "statements": [
                          {
                            "assignments": [
                              1372
>>>>>>> Till-Pascal
                            ],
                            "declarations": [
                              {
                                "constant": false,
<<<<<<< HEAD
                                "id": 1060,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "5299:9:9",
                                "nodeType": "VariableDeclaration",
                                "scope": 1076,
                                "src": "5277:31:9",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 1059,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1058,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 779,
                                    "src": "5277:14:9"
                                  },
                                  "referencedDeclaration": 779,
                                  "src": "5277:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
                                "id": 1372,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "5299:9:10",
                                "nodeType": "VariableDeclaration",
                                "scope": 1388,
                                "src": "5277:31:10",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 1371,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1370,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1091,
                                    "src": "5277:14:10"
                                  },
                                  "referencedDeclaration": 1091,
                                  "src": "5277:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                                    "typeString": "struct ERC721A.TokenOwnership"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1064,
                            "initialValue": {
                              "baseExpression": {
                                "id": 1061,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "5311:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 1063,
                              "indexExpression": {
                                "id": 1062,
                                "name": "curr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1049,
                                "src": "5323:4:9",
=======
                            "id": 1376,
                            "initialValue": {
                              "baseExpression": {
                                "id": 1373,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "5311:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 1375,
                              "indexExpression": {
                                "id": 1374,
                                "name": "curr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1361,
                                "src": "5323:4:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "5311:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
=======
                              "src": "5311:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
>>>>>>> Till-Pascal
                                "typeString": "struct ERC721A.TokenOwnership storage ref"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "5277:51:9"
=======
                            "src": "5277:51:10"
>>>>>>> Till-Pascal
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
<<<<<<< HEAD
                              "id": 1071,
=======
                              "id": 1383,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
<<<<<<< HEAD
                                  "id": 1065,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1060,
                                  "src": "5350:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 1066,
=======
                                  "id": 1377,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1372,
                                  "src": "5350:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 1378,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 776,
                                "src": "5350:14:9",
=======
                                "referencedDeclaration": 1088,
                                "src": "5350:14:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
<<<<<<< HEAD
                                    "id": 1069,
=======
                                    "id": 1381,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "5376:1:9",
=======
                                    "src": "5376:1:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 1068,
=======
                                  "id": 1380,
>>>>>>> Till-Pascal
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "5368:7:9",
=======
                                  "src": "5368:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 1067,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5368:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1070,
=======
                                    "id": 1379,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5368:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1382,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "5368:10:9",
=======
                                "src": "5368:10:10",
>>>>>>> Till-Pascal
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
<<<<<<< HEAD
                              "src": "5350:28:9",
=======
                              "src": "5350:28:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 1075,
                            "nodeType": "IfStatement",
                            "src": "5346:91:9",
                            "trueBody": {
                              "id": 1074,
                              "nodeType": "Block",
                              "src": "5380:57:9",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1072,
                                    "name": "ownership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1060,
                                    "src": "5409:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                      "typeString": "struct ERC721A.TokenOwnership memory"
                                    }
                                  },
                                  "functionReturnParameters": 1040,
                                  "id": 1073,
                                  "nodeType": "Return",
                                  "src": "5402:16:9"
=======
                            "id": 1387,
                            "nodeType": "IfStatement",
                            "src": "5346:91:10",
                            "trueBody": {
                              "id": 1386,
                              "nodeType": "Block",
                              "src": "5380:57:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1384,
                                    "name": "ownership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1372,
                                    "src": "5409:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                      "typeString": "struct ERC721A.TokenOwnership memory"
                                    }
                                  },
                                  "functionReturnParameters": 1352,
                                  "id": 1385,
                                  "nodeType": "Return",
                                  "src": "5402:16:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1054,
=======
                        "id": 1366,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1052,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "5240:4:9",
=======
                          "id": 1364,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "5240:4:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 1053,
=======
                          "id": 1365,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "5248:1:9",
=======
                          "src": "5248:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "5240:9:9",
=======
                        "src": "5240:9:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "id": 1077,
                      "initializationExpression": {
                        "assignments": [
                          1049
=======
                      "id": 1389,
                      "initializationExpression": {
                        "assignments": [
                          1361
>>>>>>> Till-Pascal
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 1049,
                            "mutability": "mutable",
                            "name": "curr",
                            "nameLocation": "5224:4:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1077,
                            "src": "5216:12:9",
=======
                            "id": 1361,
                            "mutability": "mutable",
                            "name": "curr",
                            "nameLocation": "5224:4:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1389,
                            "src": "5216:12:10",
>>>>>>> Till-Pascal
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1048,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5216:7:9",
=======
                              "id": 1360,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5216:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1051,
                        "initialValue": {
                          "id": 1050,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1035,
                          "src": "5231:7:9",
=======
                        "id": 1363,
                        "initialValue": {
                          "id": 1362,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1347,
                          "src": "5231:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "5216:22:9"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1056,
=======
                        "src": "5216:22:10"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1368,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
<<<<<<< HEAD
                          "src": "5251:6:9",
                          "subExpression": {
                            "id": 1055,
                            "name": "curr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "5251:4:9",
=======
                          "src": "5251:6:10",
                          "subExpression": {
                            "id": 1367,
                            "name": "curr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "5251:4:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 1057,
                        "nodeType": "ExpressionStatement",
                        "src": "5251:6:9"
                      },
                      "nodeType": "ForStatement",
                      "src": "5211:240:9"
=======
                        "id": 1369,
                        "nodeType": "ExpressionStatement",
                        "src": "5251:6:10"
                      },
                      "nodeType": "ForStatement",
                      "src": "5211:240:10"
>>>>>>> Till-Pascal
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865206f776e6572206f6620746f6b656e",
<<<<<<< HEAD
                        "id": 1080,
=======
                        "id": 1392,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5478:49:9",
=======
                        "src": "5478:49:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
                          "typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
                        },
                        "value": "ERC721A: unable to determine the owner of token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
                          "typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1079,
=======
                      "id": 1391,
>>>>>>> Till-Pascal
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
<<<<<<< HEAD
                      "src": "5471:6:9",
=======
                      "src": "5471:6:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1081,
=======
                    "id": 1393,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5471:57:9",
=======
                    "src": "5471:57:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:57:9"
=======
                  "id": 1394,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:57:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1033,
              "nodeType": "StructuredDocumentation",
              "src": "4821:185:9",
              "text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
            },
            "id": 1084,
=======
              "id": 1345,
              "nodeType": "StructuredDocumentation",
              "src": "4821:185:10",
              "text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
            },
            "id": 1396,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownershipOf",
<<<<<<< HEAD
            "nameLocation": "5020:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1036,
=======
            "nameLocation": "5020:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1348,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5040:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "5032:15:9",
=======
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5040:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1396,
                  "src": "5032:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5032:7:9",
=======
                    "id": 1346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5032:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5031:17:9"
            },
            "returnParameters": {
              "id": 1040,
=======
              "src": "5031:17:10"
            },
            "returnParameters": {
              "id": 1352,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1039,
=======
                  "id": 1351,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1084,
                  "src": "5072:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                    "typeString": "struct ERC721A.TokenOwnership"
                  },
                  "typeName": {
                    "id": 1038,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1037,
                      "name": "TokenOwnership",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 779,
                      "src": "5072:14:9"
                    },
                    "referencedDeclaration": 779,
                    "src": "5072:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
                  "scope": 1396,
                  "src": "5072:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                    "typeString": "struct ERC721A.TokenOwnership"
                  },
                  "typeName": {
                    "id": 1350,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1349,
                      "name": "TokenOwnership",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1091,
                      "src": "5072:14:10"
                    },
                    "referencedDeclaration": 1091,
                    "src": "5072:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                      "typeString": "struct ERC721A.TokenOwnership"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5071:23:9"
            },
            "scope": 1818,
            "src": "5011:524:9",
=======
              "src": "5071:23:10"
            },
            "scope": 2130,
            "src": "5011:524:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              48
            ],
            "body": {
<<<<<<< HEAD
              "id": 1098,
              "nodeType": "Block",
              "src": "5665:49:9",
=======
              "id": 1410,
              "nodeType": "Block",
              "src": "5665:49:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 1094,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "5694:7:9",
=======
                          "id": 1406,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "5694:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1093,
                        "name": "ownershipOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "5682:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$779_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                        }
                      },
                      "id": 1095,
=======
                        "id": 1405,
                        "name": "ownershipOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1396,
                        "src": "5682:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1091_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                        }
                      },
                      "id": 1407,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5682:20:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership memory"
                      }
                    },
                    "id": 1096,
=======
                      "src": "5682:20:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership memory"
                      }
                    },
                    "id": 1408,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "addr",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 776,
                    "src": "5682:25:9",
=======
                    "referencedDeclaration": 1088,
                    "src": "5682:25:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1092,
                  "id": 1097,
                  "nodeType": "Return",
                  "src": "5675:32:9"
=======
                  "functionReturnParameters": 1404,
                  "id": 1409,
                  "nodeType": "Return",
                  "src": "5675:32:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1085,
              "nodeType": "StructuredDocumentation",
              "src": "5541:46:9",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1099,
=======
              "id": 1397,
              "nodeType": "StructuredDocumentation",
              "src": "5541:46:10",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1411,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
<<<<<<< HEAD
            "nameLocation": "5601:7:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5638:8:9"
            },
            "parameters": {
              "id": 1088,
=======
            "nameLocation": "5601:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1401,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5638:8:10"
            },
            "parameters": {
              "id": 1400,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5617:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "5609:15:9",
=======
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5617:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "5609:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5609:7:9",
=======
                    "id": 1398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5609:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5608:17:9"
            },
            "returnParameters": {
              "id": 1092,
=======
              "src": "5608:17:10"
            },
            "returnParameters": {
              "id": 1404,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1091,
=======
                  "id": 1403,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1099,
                  "src": "5656:7:9",
=======
                  "scope": 1411,
                  "src": "5656:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:7:9",
=======
                    "id": 1402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5655:9:9"
            },
            "scope": 1818,
            "src": "5592:122:9",
=======
              "src": "5655:9:10"
            },
            "scope": 2130,
            "src": "5592:122:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              176
            ],
            "body": {
<<<<<<< HEAD
              "id": 1108,
              "nodeType": "Block",
              "src": "5845:29:9",
              "statements": [
                {
                  "expression": {
                    "id": 1106,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 788,
                    "src": "5862:5:9",
=======
              "id": 1420,
              "nodeType": "Block",
              "src": "5845:29:10",
              "statements": [
                {
                  "expression": {
                    "id": 1418,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1100,
                    "src": "5862:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1105,
                  "id": 1107,
                  "nodeType": "Return",
                  "src": "5855:12:9"
=======
                  "functionReturnParameters": 1417,
                  "id": 1419,
                  "nodeType": "Return",
                  "src": "5855:12:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1100,
              "nodeType": "StructuredDocumentation",
              "src": "5720:51:9",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1109,
=======
              "id": 1412,
              "nodeType": "StructuredDocumentation",
              "src": "5720:51:10",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1421,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
<<<<<<< HEAD
            "nameLocation": "5785:4:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5812:8:9"
            },
            "parameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5789:2:9"
            },
            "returnParameters": {
              "id": 1105,
=======
            "nameLocation": "5785:4:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1414,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5812:8:10"
            },
            "parameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5789:2:10"
            },
            "returnParameters": {
              "id": 1417,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1104,
=======
                  "id": 1416,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1109,
                  "src": "5830:13:9",
=======
                  "scope": 1421,
                  "src": "5830:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5830:6:9",
=======
                    "id": 1415,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5830:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5829:15:9"
            },
            "scope": 1818,
            "src": "5776:98:9",
=======
              "src": "5829:15:10"
            },
            "scope": 2130,
            "src": "5776:98:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              182
            ],
            "body": {
<<<<<<< HEAD
              "id": 1118,
              "nodeType": "Block",
              "src": "6009:31:9",
              "statements": [
                {
                  "expression": {
                    "id": 1116,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 790,
                    "src": "6026:7:9",
=======
              "id": 1430,
              "nodeType": "Block",
              "src": "6009:31:10",
              "statements": [
                {
                  "expression": {
                    "id": 1428,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1102,
                    "src": "6026:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1115,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "6019:14:9"
=======
                  "functionReturnParameters": 1427,
                  "id": 1429,
                  "nodeType": "Return",
                  "src": "6019:14:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1110,
              "nodeType": "StructuredDocumentation",
              "src": "5880:53:9",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1119,
=======
              "id": 1422,
              "nodeType": "StructuredDocumentation",
              "src": "5880:53:10",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1431,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
<<<<<<< HEAD
            "nameLocation": "5947:6:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1112,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5976:8:9"
            },
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5953:2:9"
            },
            "returnParameters": {
              "id": 1115,
=======
            "nameLocation": "5947:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5976:8:10"
            },
            "parameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5953:2:10"
            },
            "returnParameters": {
              "id": 1427,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1114,
=======
                  "id": 1426,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1119,
                  "src": "5994:13:9",
=======
                  "scope": 1431,
                  "src": "5994:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1113,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:6:9",
=======
                    "id": 1425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5993:15:9"
            },
            "scope": 1818,
            "src": "5938:102:9",
=======
              "src": "5993:15:10"
            },
            "scope": 2130,
            "src": "5938:102:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              190
            ],
            "body": {
<<<<<<< HEAD
              "id": 1160,
              "nodeType": "Block",
              "src": "6194:242:9",
=======
              "id": 1472,
              "nodeType": "Block",
              "src": "6194:242:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 1130,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "6220:7:9",
=======
                            "id": 1442,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "6220:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1129,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "6212:7:9",
=======
                          "id": 1441,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1679,
                          "src": "6212:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1131,
=======
                        "id": 1443,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "6212:16:9",
=======
                        "src": "6212:16:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
<<<<<<< HEAD
                        "id": 1132,
=======
                        "id": 1444,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6230:49:9",
=======
                        "src": "6230:49:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1128,
=======
                      "id": 1440,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "6204:7:9",
=======
                      "src": "6204:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1133,
=======
                    "id": 1445,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6204:76:9",
=======
                    "src": "6204:76:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:76:9"
                },
                {
                  "assignments": [
                    1136
=======
                  "id": 1446,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:76:10"
                },
                {
                  "assignments": [
                    1448
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1136,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "6305:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1160,
                      "src": "6291:21:9",
=======
                      "id": 1448,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "6305:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1472,
                      "src": "6291:21:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1135,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6291:6:9",
=======
                        "id": 1447,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6291:6:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1139,
=======
                  "id": 1451,
>>>>>>> Till-Pascal
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 1137,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "6315:8:9",
=======
                      "id": 1449,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1482,
                      "src": "6315:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1138,
=======
                    "id": 1450,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6315:10:9",
=======
                    "src": "6315:10:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6291:34:9"
=======
                  "src": "6291:34:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
<<<<<<< HEAD
                      "id": 1146,
=======
                      "id": 1458,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1142,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "6348:7:9",
=======
                              "id": 1454,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "6348:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1141,
=======
                            "id": 1453,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "6342:5:9",
=======
                            "src": "6342:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1140,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6342:5:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1143,
=======
                              "id": 1452,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6342:5:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1455,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6342:14:9",
=======
                          "src": "6342:14:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
<<<<<<< HEAD
                        "id": 1144,
=======
                        "id": 1456,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "6342:21:9",
=======
                        "src": "6342:21:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
<<<<<<< HEAD
                        "id": 1145,
=======
                        "id": 1457,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6367:1:9",
=======
                        "src": "6367:1:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
<<<<<<< HEAD
                      "src": "6342:26:9",
=======
                      "src": "6342:26:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
<<<<<<< HEAD
                      "id": 1157,
=======
                      "id": 1469,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "6427:2:9",
=======
                      "src": "6427:2:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
<<<<<<< HEAD
                    "id": 1158,
=======
                    "id": 1470,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
<<<<<<< HEAD
                    "src": "6342:87:9",
=======
                    "src": "6342:87:10",
>>>>>>> Till-Pascal
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1151,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "6395:7:9",
=======
                              "id": 1463,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "6395:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
<<<<<<< HEAD
                                  "id": 1152,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1122,
                                  "src": "6404:7:9",
=======
                                  "id": 1464,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "6404:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "id": 1153,
=======
                                "id": 1465,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 593,
<<<<<<< HEAD
                                "src": "6404:16:9",
=======
                                "src": "6404:16:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1154,
=======
                              "id": 1466,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "6404:18:9",
=======
                              "src": "6404:18:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 1149,
=======
                              "id": 1461,
>>>>>>> Till-Pascal
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
<<<<<<< HEAD
                              "src": "6378:3:9",
=======
                              "src": "6378:3:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
<<<<<<< HEAD
                            "id": 1150,
=======
                            "id": 1462,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "6378:16:9",
=======
                            "src": "6378:16:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1155,
=======
                          "id": 1467,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6378:45:9",
=======
                          "src": "6378:45:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1148,
=======
                        "id": 1460,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                        "src": "6371:6:9",
=======
                        "src": "6371:6:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 1147,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6371:6:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1156,
=======
                          "id": 1459,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6371:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1468,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6371:53:9",
=======
                      "src": "6371:53:10",
>>>>>>> Till-Pascal
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1127,
                  "id": 1159,
                  "nodeType": "Return",
                  "src": "6335:94:9"
=======
                  "functionReturnParameters": 1439,
                  "id": 1471,
                  "nodeType": "Return",
                  "src": "6335:94:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1120,
              "nodeType": "StructuredDocumentation",
              "src": "6046:55:9",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1161,
=======
              "id": 1432,
              "nodeType": "StructuredDocumentation",
              "src": "6046:55:10",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1473,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
<<<<<<< HEAD
            "nameLocation": "6115:8:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1124,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6161:8:9"
            },
            "parameters": {
              "id": 1123,
=======
            "nameLocation": "6115:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1436,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6161:8:10"
            },
            "parameters": {
              "id": 1435,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6132:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "6124:15:9",
=======
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6132:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1473,
                  "src": "6124:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6124:7:9",
=======
                    "id": 1433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6124:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6123:17:9"
            },
            "returnParameters": {
              "id": 1127,
=======
              "src": "6123:17:10"
            },
            "returnParameters": {
              "id": 1439,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1126,
=======
                  "id": 1438,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1161,
                  "src": "6179:13:9",
=======
                  "scope": 1473,
                  "src": "6179:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6179:6:9",
=======
                    "id": 1437,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6179:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6178:15:9"
            },
            "scope": 1818,
            "src": "6106:330:9",
=======
              "src": "6178:15:10"
            },
            "scope": 2130,
            "src": "6106:330:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1169,
              "nodeType": "Block",
              "src": "6743:26:9",
=======
              "id": 1481,
              "nodeType": "Block",
              "src": "6743:26:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
<<<<<<< HEAD
                    "id": 1167,
=======
                    "id": 1479,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "6760:2:9",
=======
                    "src": "6760:2:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1166,
                  "id": 1168,
                  "nodeType": "Return",
                  "src": "6753:9:9"
=======
                  "functionReturnParameters": 1478,
                  "id": 1480,
                  "nodeType": "Return",
                  "src": "6753:9:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1162,
              "nodeType": "StructuredDocumentation",
              "src": "6442:230:9",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 1170,
=======
              "id": 1474,
              "nodeType": "StructuredDocumentation",
              "src": "6442:230:10",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 1482,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
<<<<<<< HEAD
            "nameLocation": "6686:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6694:2:9"
            },
            "returnParameters": {
              "id": 1166,
=======
            "nameLocation": "6686:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6694:2:10"
            },
            "returnParameters": {
              "id": 1478,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1165,
=======
                  "id": 1477,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1170,
                  "src": "6728:13:9",
=======
                  "scope": 1482,
                  "src": "6728:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6728:6:9",
=======
                    "id": 1476,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6728:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6727:15:9"
            },
            "scope": 1818,
            "src": "6677:92:9",
=======
              "src": "6727:15:10"
            },
            "scope": 2130,
            "src": "6677:92:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              76
            ],
            "body": {
<<<<<<< HEAD
              "id": 1213,
              "nodeType": "Block",
              "src": "6888:341:9",
              "statements": [
                {
                  "assignments": [
                    1180
=======
              "id": 1525,
              "nodeType": "Block",
              "src": "6888:341:10",
              "statements": [
                {
                  "assignments": [
                    1492
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1180,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6906:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1213,
                      "src": "6898:13:9",
=======
                      "id": 1492,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6906:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1525,
                      "src": "6898:13:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1179,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6898:7:9",
=======
                        "id": 1491,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6898:7:10",
>>>>>>> Till-Pascal
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1185,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1183,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "6930:7:9",
=======
                  "id": 1497,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1495,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "6930:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 1181,
                        "name": "ERC721A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "6914:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721A_$1818_$",
                          "typeString": "type(contract ERC721A)"
                        }
                      },
                      "id": 1182,
=======
                        "id": 1493,
                        "name": "ERC721A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2130,
                        "src": "6914:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721A_$2130_$",
                          "typeString": "type(contract ERC721A)"
                        }
                      },
                      "id": 1494,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 1099,
                      "src": "6914:15:9",
=======
                      "referencedDeclaration": 1411,
                      "src": "6914:15:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1184,
=======
                    "id": 1496,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6914:24:9",
=======
                    "src": "6914:24:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6898:40:9"
=======
                  "src": "6898:40:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1189,
=======
                        "id": 1501,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1187,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "6956:2:9",
=======
                          "id": 1499,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1485,
                          "src": "6956:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 1188,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1180,
                          "src": "6962:5:9",
=======
                          "id": 1500,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1492,
                          "src": "6962:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "6956:11:9",
=======
                        "src": "6956:11:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e6572",
<<<<<<< HEAD
                        "id": 1190,
=======
                        "id": 1502,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6969:36:9",
=======
                        "src": "6969:36:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
                          "typeString": "literal_string \"ERC721A: approval to current owner\""
                        },
                        "value": "ERC721A: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
                          "typeString": "literal_string \"ERC721A: approval to current owner\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1186,
=======
                      "id": 1498,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "6948:7:9",
=======
                      "src": "6948:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1191,
=======
                    "id": 1503,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6948:58:9",
=======
                    "src": "6948:58:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "6948:58:9"
=======
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "6948:58:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 1203,
=======
                        "id": 1515,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 1197,
=======
                          "id": 1509,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
<<<<<<< HEAD
                              "id": 1194,
=======
                              "id": 1506,
>>>>>>> Till-Pascal
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 498,
<<<<<<< HEAD
                              "src": "7038:10:9",
=======
                              "src": "7038:10:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1195,
=======
                            "id": 1507,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "7038:12:9",
=======
                            "src": "7038:12:10",
>>>>>>> Till-Pascal
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 1196,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "7054:5:9",
=======
                            "id": 1508,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "7054:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "7038:21:9",
=======
                          "src": "7038:21:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1199,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "7080:5:9",
=======
                              "id": 1511,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1492,
                              "src": "7080:5:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1200,
=======
                                "id": 1512,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "7087:10:9",
=======
                                "src": "7087:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1201,
=======
                              "id": 1513,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "7087:12:9",
=======
                              "src": "7087:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1198,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1287,
                            "src": "7063:16:9",
=======
                            "id": 1510,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1599,
                            "src": "7063:16:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1202,
=======
                          "id": 1514,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "7063:37:9",
=======
                          "src": "7063:37:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "7038:62:9",
=======
                        "src": "7038:62:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
<<<<<<< HEAD
                        "id": 1204,
=======
                        "id": 1516,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7114:59:9",
=======
                        "src": "7114:59:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
                          "typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721A: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
                          "typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1193,
=======
                      "id": 1505,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "7017:7:9",
=======
                      "src": "7017:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1205,
=======
                    "id": 1517,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7017:166:9",
=======
                    "src": "7017:166:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "7017:166:9"
=======
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "7017:166:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1208,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "7203:2:9",
=======
                        "id": 1520,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "7203:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1209,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "7207:7:9",
=======
                        "id": 1521,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "7207:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1210,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "7216:5:9",
=======
                        "id": 1522,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1492,
                        "src": "7216:5:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1207,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "7194:8:9",
=======
                      "id": 1519,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "7194:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1211,
=======
                    "id": 1523,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7194:28:9",
=======
                    "src": "7194:28:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "7194:28:9"
=======
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "7194:28:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1171,
              "nodeType": "StructuredDocumentation",
              "src": "6775:46:9",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1214,
=======
              "id": 1483,
              "nodeType": "StructuredDocumentation",
              "src": "6775:46:10",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1526,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
<<<<<<< HEAD
            "nameLocation": "6835:7:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6879:8:9"
            },
            "parameters": {
              "id": 1176,
=======
            "nameLocation": "6835:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1489,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6879:8:10"
            },
            "parameters": {
              "id": 1488,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6851:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "6843:10:9",
=======
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6851:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "6843:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6843:7:9",
=======
                    "id": 1484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6843:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1175,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6863:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "6855:15:9",
=======
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6863:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "6855:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6855:7:9",
=======
                    "id": 1486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6855:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6842:29:9"
            },
            "returnParameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6888:0:9"
            },
            "scope": 1818,
            "src": "6826:403:9",
=======
              "src": "6842:29:10"
            },
            "returnParameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6888:0:10"
            },
            "scope": 2130,
            "src": "6826:403:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              84
            ],
            "body": {
<<<<<<< HEAD
              "id": 1234,
              "nodeType": "Block",
              "src": "7367:133:9",
=======
              "id": 1546,
              "nodeType": "Block",
              "src": "7367:133:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 1225,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1217,
                            "src": "7393:7:9",
=======
                            "id": 1537,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1529,
                            "src": "7393:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1224,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "7385:7:9",
=======
                          "id": 1536,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1679,
                          "src": "7385:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1226,
=======
                        "id": 1538,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "7385:16:9",
=======
                        "src": "7385:16:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
<<<<<<< HEAD
                        "id": 1227,
=======
                        "id": 1539,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7403:47:9",
=======
                        "src": "7403:47:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
                          "typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
                        },
                        "value": "ERC721A: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
                          "typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1223,
=======
                      "id": 1535,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "7377:7:9",
=======
                      "src": "7377:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1228,
=======
                    "id": 1540,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7377:74:9",
=======
                    "src": "7377:74:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1229,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:74:9"
=======
                  "id": 1541,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:74:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 1230,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "7469:15:9",
=======
                      "id": 1542,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "7469:15:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1232,
                    "indexExpression": {
                      "id": 1231,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "7485:7:9",
=======
                    "id": 1544,
                    "indexExpression": {
                      "id": 1543,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1529,
                      "src": "7485:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "7469:24:9",
=======
                    "src": "7469:24:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1222,
                  "id": 1233,
                  "nodeType": "Return",
                  "src": "7462:31:9"
=======
                  "functionReturnParameters": 1534,
                  "id": 1545,
                  "nodeType": "Return",
                  "src": "7462:31:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1215,
              "nodeType": "StructuredDocumentation",
              "src": "7235:50:9",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1235,
=======
              "id": 1527,
              "nodeType": "StructuredDocumentation",
              "src": "7235:50:10",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1547,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
<<<<<<< HEAD
            "nameLocation": "7299:11:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1219,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7340:8:9"
            },
            "parameters": {
              "id": 1218,
=======
            "nameLocation": "7299:11:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1531,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7340:8:10"
            },
            "parameters": {
              "id": 1530,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7319:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "7311:15:9",
=======
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7319:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "7311:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7311:7:9",
=======
                    "id": 1528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7311:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7310:17:9"
            },
            "returnParameters": {
              "id": 1222,
=======
              "src": "7310:17:10"
            },
            "returnParameters": {
              "id": 1534,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1221,
=======
                  "id": 1533,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1235,
                  "src": "7358:7:9",
=======
                  "scope": 1547,
                  "src": "7358:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7358:7:9",
=======
                    "id": 1532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7358:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7357:9:9"
            },
            "scope": 1818,
            "src": "7290:210:9",
=======
              "src": "7357:9:10"
            },
            "scope": 2130,
            "src": "7290:210:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              92
            ],
            "body": {
<<<<<<< HEAD
              "id": 1268,
              "nodeType": "Block",
              "src": "7643:207:9",
=======
              "id": 1580,
              "nodeType": "Block",
              "src": "7643:207:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1248,
=======
                        "id": 1560,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1245,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1238,
                          "src": "7661:8:9",
=======
                          "id": 1557,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1550,
                          "src": "7661:8:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
<<<<<<< HEAD
                            "id": 1246,
=======
                            "id": 1558,
>>>>>>> Till-Pascal
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
<<<<<<< HEAD
                            "src": "7673:10:9",
=======
                            "src": "7673:10:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1247,
=======
                          "id": 1559,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "7673:12:9",
=======
                          "src": "7673:12:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "7661:24:9",
=======
                        "src": "7661:24:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
<<<<<<< HEAD
                        "id": 1249,
=======
                        "id": 1561,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7687:28:9",
=======
                        "src": "7687:28:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
                          "typeString": "literal_string \"ERC721A: approve to caller\""
                        },
                        "value": "ERC721A: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
                          "typeString": "literal_string \"ERC721A: approve to caller\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1244,
=======
                      "id": 1556,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "7653:7:9",
=======
                      "src": "7653:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1250,
=======
                    "id": 1562,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7653:63:9",
=======
                    "src": "7653:63:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1251,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:63:9"
                },
                {
                  "expression": {
                    "id": 1259,
=======
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:63:10"
                },
                {
                  "expression": {
                    "id": 1571,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 1252,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "7727:18:9",
=======
                          "id": 1564,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "7727:18:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
<<<<<<< HEAD
                        "id": 1256,
=======
                        "id": 1568,
>>>>>>> Till-Pascal
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
<<<<<<< HEAD
                            "id": 1253,
=======
                            "id": 1565,
>>>>>>> Till-Pascal
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
<<<<<<< HEAD
                            "src": "7746:10:9",
=======
                            "src": "7746:10:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1254,
=======
                          "id": 1566,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "7746:12:9",
=======
                          "src": "7746:12:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "7727:32:9",
=======
                        "src": "7727:32:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
<<<<<<< HEAD
                      "id": 1257,
                      "indexExpression": {
                        "id": 1255,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "7760:8:9",
=======
                      "id": 1569,
                      "indexExpression": {
                        "id": 1567,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1550,
                        "src": "7760:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "7727:42:9",
=======
                      "src": "7727:42:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 1258,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "7772:8:9",
=======
                      "id": 1570,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1552,
                      "src": "7772:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "7727:53:9",
=======
                    "src": "7727:53:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 1260,
                  "nodeType": "ExpressionStatement",
                  "src": "7727:53:9"
=======
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "7727:53:10"
>>>>>>> Till-Pascal
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
<<<<<<< HEAD
                          "id": 1262,
=======
                          "id": 1574,
>>>>>>> Till-Pascal
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
<<<<<<< HEAD
                          "src": "7810:10:9",
=======
                          "src": "7810:10:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1263,
=======
                        "id": 1575,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "7810:12:9",
=======
                        "src": "7810:12:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1264,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "7824:8:9",
=======
                        "id": 1576,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1550,
                        "src": "7824:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1265,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "7834:8:9",
=======
                        "id": 1577,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "7834:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1261,
=======
                      "id": 1573,
>>>>>>> Till-Pascal
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
<<<<<<< HEAD
                      "src": "7795:14:9",
=======
                      "src": "7795:14:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1266,
=======
                    "id": 1578,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7795:48:9",
=======
                    "src": "7795:48:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1267,
                  "nodeType": "EmitStatement",
                  "src": "7790:53:9"
=======
                  "id": 1579,
                  "nodeType": "EmitStatement",
                  "src": "7790:53:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1236,
              "nodeType": "StructuredDocumentation",
              "src": "7506:56:9",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1269,
=======
              "id": 1548,
              "nodeType": "StructuredDocumentation",
              "src": "7506:56:10",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1581,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
<<<<<<< HEAD
            "nameLocation": "7576:17:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1242,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7634:8:9"
            },
            "parameters": {
              "id": 1241,
=======
            "nameLocation": "7576:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1554,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7634:8:10"
            },
            "parameters": {
              "id": 1553,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7602:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "7594:16:9",
=======
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7602:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "7594:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7594:7:9",
=======
                    "id": 1549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7594:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "7617:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "7612:13:9",
=======
                  "id": 1552,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "7617:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "7612:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7612:4:9",
=======
                    "id": 1551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7612:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7593:33:9"
            },
            "returnParameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7643:0:9"
            },
            "scope": 1818,
            "src": "7567:283:9",
=======
              "src": "7593:33:10"
            },
            "returnParameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7643:0:10"
            },
            "scope": 2130,
            "src": "7567:283:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              102
            ],
            "body": {
<<<<<<< HEAD
              "id": 1286,
              "nodeType": "Block",
              "src": "8019:59:9",
=======
              "id": 1598,
              "nodeType": "Block",
              "src": "8019:59:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 1280,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "8036:18:9",
=======
                        "id": 1592,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "8036:18:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
<<<<<<< HEAD
                      "id": 1282,
                      "indexExpression": {
                        "id": 1281,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "8055:5:9",
=======
                      "id": 1594,
                      "indexExpression": {
                        "id": 1593,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "8055:5:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "8036:25:9",
=======
                      "src": "8036:25:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1284,
                    "indexExpression": {
                      "id": 1283,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "8062:8:9",
=======
                    "id": 1596,
                    "indexExpression": {
                      "id": 1595,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1586,
                      "src": "8062:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "8036:35:9",
=======
                    "src": "8036:35:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1279,
                  "id": 1285,
                  "nodeType": "Return",
                  "src": "8029:42:9"
=======
                  "functionReturnParameters": 1591,
                  "id": 1597,
                  "nodeType": "Return",
                  "src": "8029:42:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1270,
              "nodeType": "StructuredDocumentation",
              "src": "7856:55:9",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1287,
=======
              "id": 1582,
              "nodeType": "StructuredDocumentation",
              "src": "7856:55:10",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1599,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
<<<<<<< HEAD
            "nameLocation": "7925:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7995:8:9"
            },
            "parameters": {
              "id": 1275,
=======
            "nameLocation": "7925:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1588,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7995:8:10"
            },
            "parameters": {
              "id": 1587,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1272,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7950:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "7942:13:9",
=======
                  "id": 1584,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7950:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1599,
                  "src": "7942:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7942:7:9",
=======
                    "id": 1583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7942:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7965:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "7957:16:9",
=======
                  "id": 1586,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7965:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1599,
                  "src": "7957:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:9",
=======
                    "id": 1585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7941:33:9"
            },
            "returnParameters": {
              "id": 1279,
=======
              "src": "7941:33:10"
            },
            "returnParameters": {
              "id": 1591,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1278,
=======
                  "id": 1590,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1287,
                  "src": "8013:4:9",
=======
                  "scope": 1599,
                  "src": "8013:4:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8013:4:9",
=======
                    "id": 1589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8013:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8012:6:9"
            },
            "scope": 1818,
            "src": "7916:162:9",
=======
              "src": "8012:6:10"
            },
            "scope": 2130,
            "src": "7916:162:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              68
            ],
            "body": {
<<<<<<< HEAD
              "id": 1304,
              "nodeType": "Block",
              "src": "8251:45:9",
=======
              "id": 1616,
              "nodeType": "Block",
              "src": "8251:45:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1299,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1290,
                        "src": "8271:4:9",
=======
                        "id": 1611,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1602,
                        "src": "8271:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1300,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "8277:2:9",
=======
                        "id": 1612,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "8277:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1301,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1294,
                        "src": "8281:7:9",
=======
                        "id": 1613,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "8281:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1298,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1704,
                      "src": "8261:9:9",
=======
                      "id": 1610,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "8261:9:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1302,
=======
                    "id": 1614,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8261:28:9",
=======
                    "src": "8261:28:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "8261:28:9"
=======
                  "id": 1615,
                  "nodeType": "ExpressionStatement",
                  "src": "8261:28:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1288,
              "nodeType": "StructuredDocumentation",
              "src": "8084:51:9",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1305,
=======
              "id": 1600,
              "nodeType": "StructuredDocumentation",
              "src": "8084:51:10",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1617,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
<<<<<<< HEAD
            "nameLocation": "8149:12:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1296,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8242:8:9"
            },
            "parameters": {
              "id": 1295,
=======
            "nameLocation": "8149:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8242:8:10"
            },
            "parameters": {
              "id": 1607,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8179:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "8171:12:9",
=======
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8179:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "8171:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8171:7:9",
=======
                    "id": 1601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8171:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1292,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8201:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "8193:10:9",
=======
                  "id": 1604,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8201:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "8193:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:7:9",
=======
                    "id": 1603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1294,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8221:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "8213:15:9",
=======
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8221:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "8213:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8213:7:9",
=======
                    "id": 1605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8213:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8161:73:9"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8251:0:9"
            },
            "scope": 1818,
            "src": "8140:156:9",
=======
              "src": "8161:73:10"
            },
            "returnParameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8251:0:10"
            },
            "scope": 2130,
            "src": "8140:156:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              58
            ],
            "body": {
<<<<<<< HEAD
              "id": 1323,
              "nodeType": "Block",
              "src": "8477:56:9",
=======
              "id": 1635,
              "nodeType": "Block",
              "src": "8477:56:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1317,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "8504:4:9",
=======
                        "id": 1629,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "8504:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1318,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "8510:2:9",
=======
                        "id": 1630,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "8510:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1319,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "8514:7:9",
=======
                        "id": 1631,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "8514:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
<<<<<<< HEAD
                        "id": 1320,
=======
                        "id": 1632,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "8523:2:9",
=======
                        "src": "8523:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1316,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1324,
                        1354
                      ],
                      "referencedDeclaration": 1354,
                      "src": "8487:16:9",
=======
                      "id": 1628,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1636,
                        1666
                      ],
                      "referencedDeclaration": 1666,
                      "src": "8487:16:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1321,
=======
                    "id": 1633,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8487:39:9",
=======
                    "src": "8487:39:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "8487:39:9"
=======
                  "id": 1634,
                  "nodeType": "ExpressionStatement",
                  "src": "8487:39:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1306,
              "nodeType": "StructuredDocumentation",
              "src": "8302:55:9",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1324,
=======
              "id": 1618,
              "nodeType": "StructuredDocumentation",
              "src": "8302:55:10",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1636,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
<<<<<<< HEAD
            "nameLocation": "8371:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1314,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8468:8:9"
            },
            "parameters": {
              "id": 1313,
=======
            "nameLocation": "8371:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1626,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8468:8:10"
            },
            "parameters": {
              "id": 1625,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8405:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "8397:12:9",
=======
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8405:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "8397:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8397:7:9",
=======
                    "id": 1619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8397:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8427:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "8419:10:9",
=======
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8427:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "8419:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:9",
=======
                    "id": 1621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8447:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "8439:15:9",
=======
                  "id": 1624,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8447:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "8439:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8439:7:9",
=======
                    "id": 1623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8439:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8387:73:9"
            },
            "returnParameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8477:0:9"
            },
            "scope": 1818,
            "src": "8362:171:9",
=======
              "src": "8387:73:10"
            },
            "returnParameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8477:0:10"
            },
            "scope": 2130,
            "src": "8362:171:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              114
            ],
            "body": {
<<<<<<< HEAD
              "id": 1353,
              "nodeType": "Block",
              "src": "8742:201:9",
=======
              "id": 1665,
              "nodeType": "Block",
              "src": "8742:201:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1338,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1327,
                        "src": "8762:4:9",
=======
                        "id": 1650,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "8762:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1339,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "8768:2:9",
=======
                        "id": 1651,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "8768:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1340,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1331,
                        "src": "8772:7:9",
=======
                        "id": 1652,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "8772:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1337,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1704,
                      "src": "8752:9:9",
=======
                      "id": 1649,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "8752:9:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1341,
=======
                    "id": 1653,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8752:28:9",
=======
                    "src": "8752:28:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "8752:28:9"
=======
                  "id": 1654,
                  "nodeType": "ExpressionStatement",
                  "src": "8752:28:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 1345,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1327,
                            "src": "8834:4:9",
=======
                            "id": 1657,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "8834:4:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 1346,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1329,
                            "src": "8840:2:9",
=======
                            "id": 1658,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "8840:2:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 1347,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1331,
                            "src": "8844:7:9",
=======
                            "id": 1659,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1643,
                            "src": "8844:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 1348,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "8853:5:9",
=======
                            "id": 1660,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1645,
                            "src": "8853:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1344,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1791,
                          "src": "8811:22:9",
=======
                          "id": 1656,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2103,
                          "src": "8811:22:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1349,
=======
                        "id": 1661,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "8811:48:9",
=======
                        "src": "8811:48:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
<<<<<<< HEAD
                        "id": 1350,
=======
                        "id": 1662,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "8873:53:9",
=======
                        "src": "8873:53:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721A: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1343,
=======
                      "id": 1655,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "8790:7:9",
=======
                      "src": "8790:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1351,
=======
                    "id": 1663,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8790:146:9",
=======
                    "src": "8790:146:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1352,
                  "nodeType": "ExpressionStatement",
                  "src": "8790:146:9"
=======
                  "id": 1664,
                  "nodeType": "ExpressionStatement",
                  "src": "8790:146:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1325,
              "nodeType": "StructuredDocumentation",
              "src": "8539:55:9",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1354,
=======
              "id": 1637,
              "nodeType": "StructuredDocumentation",
              "src": "8539:55:10",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1666,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
<<<<<<< HEAD
            "nameLocation": "8608:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1335,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8733:8:9"
            },
            "parameters": {
              "id": 1334,
=======
            "nameLocation": "8608:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1647,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8733:8:10"
            },
            "parameters": {
              "id": 1646,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1327,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8642:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "8634:12:9",
=======
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8642:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "8634:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8634:7:9",
=======
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8634:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8664:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "8656:10:9",
=======
                  "id": 1641,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8664:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "8656:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8656:7:9",
=======
                    "id": 1640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8656:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1331,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8684:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "8676:15:9",
=======
                  "id": 1643,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8684:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "8676:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8676:7:9",
=======
                    "id": 1642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8676:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8714:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "8701:18:9",
=======
                  "id": 1645,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8714:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "8701:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1332,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8701:5:9",
=======
                    "id": 1644,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8701:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8624:101:9"
            },
            "returnParameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8742:0:9"
            },
            "scope": 1818,
            "src": "8599:344:9",
=======
              "src": "8624:101:10"
            },
            "returnParameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8742:0:10"
            },
            "scope": 2130,
            "src": "8599:344:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1366,
              "nodeType": "Block",
              "src": "9252:46:9",
=======
              "id": 1678,
              "nodeType": "Block",
              "src": "9252:46:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 1364,
=======
                    "id": 1676,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 1362,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1357,
                      "src": "9269:7:9",
=======
                      "id": 1674,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1669,
                      "src": "9269:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
<<<<<<< HEAD
                      "id": 1363,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "9279:12:9",
=======
                      "id": 1675,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "9279:12:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "9269:22:9",
=======
                    "src": "9269:22:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1361,
                  "id": 1365,
                  "nodeType": "Return",
                  "src": "9262:29:9"
=======
                  "functionReturnParameters": 1673,
                  "id": 1677,
                  "nodeType": "Return",
                  "src": "9262:29:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1355,
              "nodeType": "StructuredDocumentation",
              "src": "8949:235:9",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
            },
            "id": 1367,
=======
              "id": 1667,
              "nodeType": "StructuredDocumentation",
              "src": "8949:235:10",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
            },
            "id": 1679,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
<<<<<<< HEAD
            "nameLocation": "9198:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1358,
=======
            "nameLocation": "9198:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1670,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1357,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9214:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "9206:15:9",
=======
                  "id": 1669,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9214:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "9206:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9206:7:9",
=======
                    "id": 1668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9206:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9205:17:9"
            },
            "returnParameters": {
              "id": 1361,
=======
              "src": "9205:17:10"
            },
            "returnParameters": {
              "id": 1673,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1360,
=======
                  "id": 1672,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1367,
                  "src": "9246:4:9",
=======
                  "scope": 1679,
                  "src": "9246:4:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1359,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9246:4:9",
=======
                    "id": 1671,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9246:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9245:6:9"
            },
            "scope": 1818,
            "src": "9189:109:9",
=======
              "src": "9245:6:10"
            },
            "scope": 2130,
            "src": "9189:109:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1380,
              "nodeType": "Block",
              "src": "9362:44:9",
=======
              "id": 1692,
              "nodeType": "Block",
              "src": "9362:44:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1375,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1369,
                        "src": "9382:2:9",
=======
                        "id": 1687,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "9382:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1376,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "9386:8:9",
=======
                        "id": 1688,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "9386:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
<<<<<<< HEAD
                        "id": 1377,
=======
                        "id": 1689,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "9396:2:9",
=======
                        "src": "9396:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1374,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1381,
                        1399
                      ],
                      "referencedDeclaration": 1399,
                      "src": "9372:9:9",
=======
                      "id": 1686,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1693,
                        1711
                      ],
                      "referencedDeclaration": 1711,
                      "src": "9372:9:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1378,
=======
                    "id": 1690,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "9372:27:9",
=======
                    "src": "9372:27:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1379,
                  "nodeType": "ExpressionStatement",
                  "src": "9372:27:9"
                }
              ]
            },
            "id": 1381,
=======
                  "id": 1691,
                  "nodeType": "ExpressionStatement",
                  "src": "9372:27:10"
                }
              ]
            },
            "id": 1693,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
<<<<<<< HEAD
            "nameLocation": "9313:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1372,
=======
            "nameLocation": "9313:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1684,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9331:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "9323:10:9",
=======
                  "id": 1681,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9331:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "9323:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9323:7:9",
=======
                    "id": 1680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9323:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9343:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "9335:16:9",
=======
                  "id": 1683,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9343:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "9335:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:7:9",
=======
                    "id": 1682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9322:30:9"
            },
            "returnParameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9362:0:9"
            },
            "scope": 1818,
            "src": "9304:102:9",
=======
              "src": "9322:30:10"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9362:0:10"
            },
            "scope": 2130,
            "src": "9304:102:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1398,
              "nodeType": "Block",
              "src": "9865:49:9",
=======
              "id": 1710,
              "nodeType": "Block",
              "src": "9865:49:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1392,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1384,
                        "src": "9881:2:9",
=======
                        "id": 1704,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "9881:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1393,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1386,
                        "src": "9885:8:9",
=======
                        "id": 1705,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1698,
                        "src": "9885:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1394,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "9895:5:9",
=======
                        "id": 1706,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1700,
                        "src": "9895:5:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
<<<<<<< HEAD
                        "id": 1395,
=======
                        "id": 1707,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "9902:4:9",
=======
                        "src": "9902:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1391,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "9875:5:9",
=======
                      "id": 1703,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "9875:5:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1396,
=======
                    "id": 1708,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "9875:32:9",
=======
                    "src": "9875:32:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "9875:32:9"
=======
                  "id": 1709,
                  "nodeType": "ExpressionStatement",
                  "src": "9875:32:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1382,
              "nodeType": "StructuredDocumentation",
              "src": "9412:340:9",
              "text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 1399,
=======
              "id": 1694,
              "nodeType": "StructuredDocumentation",
              "src": "9412:340:10",
              "text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 1711,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
<<<<<<< HEAD
            "nameLocation": "9766:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1389,
=======
            "nameLocation": "9766:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1701,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1384,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9793:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "9785:10:9",
=======
                  "id": 1696,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9793:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "9785:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9785:7:9",
=======
                    "id": 1695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9785:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1386,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9813:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "9805:16:9",
=======
                  "id": 1698,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9813:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "9805:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9805:7:9",
=======
                    "id": 1697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9805:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1388,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9844:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "9831:18:9",
=======
                  "id": 1700,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9844:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "9831:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9831:5:9",
=======
                    "id": 1699,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9831:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9775:80:9"
            },
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9865:0:9"
            },
            "scope": 1818,
            "src": "9757:157:9",
=======
              "src": "9775:80:10"
            },
            "returnParameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9865:0:10"
            },
            "scope": 2130,
            "src": "9757:157:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1538,
              "nodeType": "Block",
              "src": "10284:1375:9",
              "statements": [
                {
                  "assignments": [
                    1412
=======
              "id": 1850,
              "nodeType": "Block",
              "src": "10284:1375:10",
              "statements": [
                {
                  "assignments": [
                    1724
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1412,
                      "mutability": "mutable",
                      "name": "startTokenId",
                      "nameLocation": "10302:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1538,
                      "src": "10294:20:9",
=======
                      "id": 1724,
                      "mutability": "mutable",
                      "name": "startTokenId",
                      "nameLocation": "10302:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1850,
                      "src": "10294:20:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10294:7:9",
=======
                        "id": 1723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10294:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1414,
                  "initialValue": {
                    "id": 1413,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 786,
                    "src": "10317:12:9",
=======
                  "id": 1726,
                  "initialValue": {
                    "id": 1725,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1098,
                    "src": "10317:12:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "10294:35:9"
=======
                  "src": "10294:35:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1421,
=======
                        "id": 1733,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1416,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "10347:2:9",
=======
                          "id": 1728,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "10347:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 1419,
=======
                              "id": 1731,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "10361:1:9",
=======
                              "src": "10361:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1418,
=======
                            "id": 1730,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "10353:7:9",
=======
                            "src": "10353:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1417,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10353:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1420,
=======
                              "id": 1729,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10353:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1732,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "10353:10:9",
=======
                          "src": "10353:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "10347:16:9",
=======
                        "src": "10347:16:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206d696e7420746f20746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 1422,
=======
                        "id": 1734,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "10365:35:9",
=======
                        "src": "10365:35:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
                          "typeString": "literal_string \"ERC721A: mint to the zero address\""
                        },
                        "value": "ERC721A: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
                          "typeString": "literal_string \"ERC721A: mint to the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1415,
=======
                      "id": 1727,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "10339:7:9",
=======
                      "src": "10339:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1423,
=======
                    "id": 1735,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "10339:62:9",
=======
                    "src": "10339:62:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1424,
                  "nodeType": "ExpressionStatement",
                  "src": "10339:62:9"
=======
                  "id": 1736,
                  "nodeType": "ExpressionStatement",
                  "src": "10339:62:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1428,
=======
                        "id": 1740,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1426,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1404,
                          "src": "10419:8:9",
=======
                          "id": 1738,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1716,
                          "src": "10419:8:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 1427,
=======
                          "id": 1739,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "10431:1:9",
=======
                          "src": "10431:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "10419:13:9",
=======
                        "src": "10419:13:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207175616e74697479206d7573742062652067726561746572207468616e2030",
<<<<<<< HEAD
                        "id": 1429,
=======
                        "id": 1741,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "10434:42:9",
=======
                        "src": "10434:42:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1",
                          "typeString": "literal_string \"ERC721A: quantity must be greater than 0\""
                        },
                        "value": "ERC721A: quantity must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1",
                          "typeString": "literal_string \"ERC721A: quantity must be greater than 0\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1425,
=======
                      "id": 1737,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "10411:7:9",
=======
                      "src": "10411:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1430,
=======
                    "id": 1742,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "10411:66:9",
=======
                    "src": "10411:66:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1431,
                  "nodeType": "ExpressionStatement",
                  "src": "10411:66:9"
=======
                  "id": 1743,
                  "nodeType": "ExpressionStatement",
                  "src": "10411:66:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 1435,
=======
                            "id": 1747,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "10518:1:9",
=======
                            "src": "10518:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1434,
=======
                          "id": 1746,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "10510:7:9",
=======
                          "src": "10510:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1433,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10510:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1436,
=======
                            "id": 1745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10510:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1748,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "10510:10:9",
=======
                        "src": "10510:10:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1437,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "10522:2:9",
=======
                        "id": 1749,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "10522:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1438,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "10526:12:9",
=======
                        "id": 1750,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1724,
                        "src": "10526:12:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1439,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1404,
                        "src": "10540:8:9",
=======
                        "id": 1751,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "10540:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1432,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "10488:21:9",
=======
                      "id": 1744,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2116,
                      "src": "10488:21:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1440,
=======
                    "id": 1752,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "10488:61:9",
=======
                    "src": "10488:61:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1441,
                  "nodeType": "ExpressionStatement",
                  "src": "10488:61:9"
                },
                {
                  "id": 1527,
                  "nodeType": "UncheckedBlock",
                  "src": "10797:785:9",
                  "statements": [
                    {
                      "expression": {
                        "id": 1450,
=======
                  "id": 1753,
                  "nodeType": "ExpressionStatement",
                  "src": "10488:61:10"
                },
                {
                  "id": 1839,
                  "nodeType": "UncheckedBlock",
                  "src": "10797:785:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1762,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1442,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "10821:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1444,
                            "indexExpression": {
                              "id": 1443,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "10834:2:9",
=======
                              "id": 1754,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "10821:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1756,
                            "indexExpression": {
                              "id": 1755,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1714,
                              "src": "10834:2:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "10821:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$784_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1445,
=======
                            "src": "10821:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1757,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 781,
                          "src": "10821:24:9",
=======
                          "referencedDeclaration": 1093,
                          "src": "10821:24:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1448,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1404,
                              "src": "10857:8:9",
=======
                              "id": 1760,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "10857:8:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1447,
=======
                            "id": 1759,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "10849:7:9",
=======
                            "src": "10849:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1446,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "10849:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1449,
=======
                              "id": 1758,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "10849:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1761,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "10849:17:9",
=======
                          "src": "10849:17:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
<<<<<<< HEAD
                        "src": "10821:45:9",
=======
                        "src": "10821:45:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
<<<<<<< HEAD
                      "id": 1451,
                      "nodeType": "ExpressionStatement",
                      "src": "10821:45:9"
                    },
                    {
                      "expression": {
                        "id": 1460,
=======
                      "id": 1763,
                      "nodeType": "ExpressionStatement",
                      "src": "10821:45:10"
                    },
                    {
                      "expression": {
                        "id": 1772,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1452,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "10880:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1454,
                            "indexExpression": {
                              "id": 1453,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "10893:2:9",
=======
                              "id": 1764,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "10880:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1766,
                            "indexExpression": {
                              "id": 1765,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1714,
                              "src": "10893:2:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "10880:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$784_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1455,
=======
                            "src": "10880:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1767,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "numberMinted",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 783,
                          "src": "10880:29:9",
=======
                          "referencedDeclaration": 1095,
                          "src": "10880:29:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1458,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1404,
                              "src": "10921:8:9",
=======
                              "id": 1770,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "10921:8:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1457,
=======
                            "id": 1769,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "10913:7:9",
=======
                            "src": "10913:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1456,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "10913:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1459,
=======
                              "id": 1768,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "10913:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1771,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "10913:17:9",
=======
                          "src": "10913:17:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
<<<<<<< HEAD
                        "src": "10880:50:9",
=======
                        "src": "10880:50:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
<<<<<<< HEAD
                      "id": 1461,
                      "nodeType": "ExpressionStatement",
                      "src": "10880:50:9"
                    },
                    {
                      "expression": {
                        "id": 1467,
=======
                      "id": 1773,
                      "nodeType": "ExpressionStatement",
                      "src": "10880:50:10"
                    },
                    {
                      "expression": {
                        "id": 1779,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1462,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "10945:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1464,
                            "indexExpression": {
                              "id": 1463,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "10957:12:9",
=======
                              "id": 1774,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "10945:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1776,
                            "indexExpression": {
                              "id": 1775,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "10957:12:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "10945:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1465,
=======
                            "src": "10945:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1777,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 776,
                          "src": "10945:30:9",
=======
                          "referencedDeclaration": 1088,
                          "src": "10945:30:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
<<<<<<< HEAD
                          "id": 1466,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "10978:2:9",
=======
                          "id": 1778,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "10978:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "10945:35:9",
=======
                        "src": "10945:35:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
<<<<<<< HEAD
                      "id": 1468,
                      "nodeType": "ExpressionStatement",
                      "src": "10945:35:9"
                    },
                    {
                      "expression": {
                        "id": 1478,
=======
                      "id": 1780,
                      "nodeType": "ExpressionStatement",
                      "src": "10945:35:10"
                    },
                    {
                      "expression": {
                        "id": 1790,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1469,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "10994:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1471,
                            "indexExpression": {
                              "id": 1470,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "11006:12:9",
=======
                              "id": 1781,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "10994:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1783,
                            "indexExpression": {
                              "id": 1782,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "11006:12:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "10994:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1472,
=======
                            "src": "10994:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1784,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 778,
                          "src": "10994:40:9",
=======
                          "referencedDeclaration": 1090,
                          "src": "10994:40:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 1475,
=======
                                "id": 1787,
>>>>>>> Till-Pascal
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
<<<<<<< HEAD
                                "src": "11044:5:9",
=======
                                "src": "11044:5:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
<<<<<<< HEAD
                              "id": 1476,
=======
                              "id": 1788,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "11044:15:9",
=======
                              "src": "11044:15:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1474,
=======
                            "id": 1786,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "11037:6:9",
=======
                            "src": "11037:6:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1473,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "11037:6:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1477,
=======
                              "id": 1785,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "11037:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1789,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "11037:23:9",
=======
                          "src": "11037:23:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
<<<<<<< HEAD
                        "src": "10994:66:9",
=======
                        "src": "10994:66:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
<<<<<<< HEAD
                      "id": 1479,
                      "nodeType": "ExpressionStatement",
                      "src": "10994:66:9"
                    },
                    {
                      "assignments": [
                        1481
=======
                      "id": 1791,
                      "nodeType": "ExpressionStatement",
                      "src": "10994:66:10"
                    },
                    {
                      "assignments": [
                        1793
>>>>>>> Till-Pascal
                      ],
                      "declarations": [
                        {
                          "constant": false,
<<<<<<< HEAD
                          "id": 1481,
                          "mutability": "mutable",
                          "name": "updatedIndex",
                          "nameLocation": "11083:12:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1527,
                          "src": "11075:20:9",
=======
                          "id": 1793,
                          "mutability": "mutable",
                          "name": "updatedIndex",
                          "nameLocation": "11083:12:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1839,
                          "src": "11075:20:10",
>>>>>>> Till-Pascal
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1480,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11075:7:9",
=======
                            "id": 1792,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11075:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1483,
                      "initialValue": {
                        "id": 1482,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "11098:12:9",
=======
                      "id": 1795,
                      "initialValue": {
                        "id": 1794,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1724,
                        "src": "11098:12:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                      "src": "11075:35:9"
                    },
                    {
                      "body": {
                        "id": 1521,
                        "nodeType": "Block",
                        "src": "11160:370:9",
=======
                      "src": "11075:35:10"
                    },
                    {
                      "body": {
                        "id": 1833,
                        "nodeType": "Block",
                        "src": "11160:370:10",
>>>>>>> Till-Pascal
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
<<<<<<< HEAD
                                      "id": 1496,
=======
                                      "id": 1808,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
<<<<<<< HEAD
                                      "src": "11200:1:9",
=======
                                      "src": "11200:1:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
<<<<<<< HEAD
                                    "id": 1495,
=======
                                    "id": 1807,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                    "src": "11192:7:9",
=======
                                    "src": "11192:7:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
<<<<<<< HEAD
                                      "id": 1494,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11192:7:9",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1497,
=======
                                      "id": 1806,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11192:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1809,
>>>>>>> Till-Pascal
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "11192:10:9",
=======
                                  "src": "11192:10:10",
>>>>>>> Till-Pascal
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
<<<<<<< HEAD
                                  "id": 1498,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1402,
                                  "src": "11204:2:9",
=======
                                  "id": 1810,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1714,
                                  "src": "11204:2:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
<<<<<<< HEAD
                                  "id": 1499,
                                  "name": "updatedIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1481,
                                  "src": "11208:12:9",
=======
                                  "id": 1811,
                                  "name": "updatedIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1793,
                                  "src": "11208:12:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1493,
=======
                                "id": 1805,
>>>>>>> Till-Pascal
                                "name": "Transfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
<<<<<<< HEAD
                                "src": "11183:8:9",
=======
                                "src": "11183:8:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1500,
=======
                              "id": 1812,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "11183:38:9",
=======
                              "src": "11183:38:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
<<<<<<< HEAD
                            "id": 1501,
                            "nodeType": "EmitStatement",
                            "src": "11178:43:9"
                          },
                          {
                            "condition": {
                              "id": 1502,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "11243:4:9",
=======
                            "id": 1813,
                            "nodeType": "EmitStatement",
                            "src": "11178:43:10"
                          },
                          {
                            "condition": {
                              "id": 1814,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "11243:4:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 1517,
                            "nodeType": "IfStatement",
                            "src": "11239:244:9",
                            "trueBody": {
                              "id": 1516,
                              "nodeType": "Block",
                              "src": "11249:234:9",
=======
                            "id": 1829,
                            "nodeType": "IfStatement",
                            "src": "11239:244:10",
                            "trueBody": {
                              "id": 1828,
                              "nodeType": "Block",
                              "src": "11249:234:10",
>>>>>>> Till-Pascal
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
<<<<<<< HEAD
                                                "id": 1507,
=======
                                                "id": 1819,
>>>>>>> Till-Pascal
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
<<<<<<< HEAD
                                                "src": "11335:1:9",
=======
                                                "src": "11335:1:10",
>>>>>>> Till-Pascal
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
<<<<<<< HEAD
                                              "id": 1506,
=======
                                              "id": 1818,
>>>>>>> Till-Pascal
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                              "src": "11327:7:9",
=======
                                              "src": "11327:7:10",
>>>>>>> Till-Pascal
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
<<<<<<< HEAD
                                                "id": 1505,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11327:7:9",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1508,
=======
                                                "id": 1817,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11327:7:10",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1820,
>>>>>>> Till-Pascal
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                                            "src": "11327:10:9",
=======
                                            "src": "11327:10:10",
>>>>>>> Till-Pascal
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
<<<<<<< HEAD
                                            "id": 1509,
                                            "name": "to",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1402,
                                            "src": "11339:2:9",
=======
                                            "id": 1821,
                                            "name": "to",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1714,
                                            "src": "11339:2:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
<<<<<<< HEAD
                                            "id": 1510,
                                            "name": "updatedIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1481,
                                            "src": "11343:12:9",
=======
                                            "id": 1822,
                                            "name": "updatedIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1793,
                                            "src": "11343:12:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
<<<<<<< HEAD
                                            "id": 1511,
                                            "name": "_data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1406,
                                            "src": "11357:5:9",
=======
                                            "id": 1823,
                                            "name": "_data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1718,
                                            "src": "11357:5:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
<<<<<<< HEAD
                                          "id": 1504,
                                          "name": "_checkOnERC721Received",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1791,
                                          "src": "11304:22:9",
=======
                                          "id": 1816,
                                          "name": "_checkOnERC721Received",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2103,
                                          "src": "11304:22:10",
>>>>>>> Till-Pascal
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 1512,
=======
                                        "id": 1824,
>>>>>>> Till-Pascal
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                        "src": "11304:59:9",
=======
                                        "src": "11304:59:10",
>>>>>>> Till-Pascal
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
<<<<<<< HEAD
                                        "id": 1513,
=======
                                        "id": 1825,
>>>>>>> Till-Pascal
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
<<<<<<< HEAD
                                        "src": "11389:53:9",
=======
                                        "src": "11389:53:10",
>>>>>>> Till-Pascal
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                        },
                                        "value": "ERC721A: transfer to non ERC721Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                        }
                                      ],
<<<<<<< HEAD
                                      "id": 1503,
=======
                                      "id": 1815,
>>>>>>> Till-Pascal
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                                      "src": "11271:7:9",
=======
                                      "src": "11271:7:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 1514,
=======
                                    "id": 1826,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                    "src": "11271:193:9",
=======
                                    "src": "11271:193:10",
>>>>>>> Till-Pascal
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1515,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11271:193:9"
=======
                                  "id": 1827,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11271:193:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
<<<<<<< HEAD
                              "id": 1519,
=======
                              "id": 1831,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
<<<<<<< HEAD
                              "src": "11501:14:9",
                              "subExpression": {
                                "id": 1518,
                                "name": "updatedIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1481,
                                "src": "11501:12:9",
=======
                              "src": "11501:14:10",
                              "subExpression": {
                                "id": 1830,
                                "name": "updatedIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1793,
                                "src": "11501:12:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
<<<<<<< HEAD
                            "id": 1520,
                            "nodeType": "ExpressionStatement",
                            "src": "11501:14:9"
=======
                            "id": 1832,
                            "nodeType": "ExpressionStatement",
                            "src": "11501:14:10"
>>>>>>> Till-Pascal
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1489,
=======
                        "id": 1801,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1487,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1485,
                          "src": "11141:1:9",
=======
                          "id": 1799,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1797,
                          "src": "11141:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 1488,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1404,
                          "src": "11145:8:9",
=======
                          "id": 1800,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1716,
                          "src": "11145:8:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "11141:12:9",
=======
                        "src": "11141:12:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "id": 1522,
                      "initializationExpression": {
                        "assignments": [
                          1485
=======
                      "id": 1834,
                      "initializationExpression": {
                        "assignments": [
                          1797
>>>>>>> Till-Pascal
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 1485,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "11138:1:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1522,
                            "src": "11130:9:9",
=======
                            "id": 1797,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "11138:1:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1834,
                            "src": "11130:9:10",
>>>>>>> Till-Pascal
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1484,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11130:7:9",
=======
                              "id": 1796,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11130:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1486,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11130:9:9"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1491,
=======
                        "id": 1798,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11130:9:10"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1803,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
<<<<<<< HEAD
                          "src": "11155:3:9",
                          "subExpression": {
                            "id": 1490,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1485,
                            "src": "11155:1:9",
=======
                          "src": "11155:3:10",
                          "subExpression": {
                            "id": 1802,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1797,
                            "src": "11155:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 1492,
                        "nodeType": "ExpressionStatement",
                        "src": "11155:3:9"
                      },
                      "nodeType": "ForStatement",
                      "src": "11125:405:9"
                    },
                    {
                      "expression": {
                        "id": 1525,
=======
                        "id": 1804,
                        "nodeType": "ExpressionStatement",
                        "src": "11155:3:10"
                      },
                      "nodeType": "ForStatement",
                      "src": "11125:405:10"
                    },
                    {
                      "expression": {
                        "id": 1837,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
<<<<<<< HEAD
                          "id": 1523,
                          "name": "currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 786,
                          "src": "11544:12:9",
=======
                          "id": 1835,
                          "name": "currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1098,
                          "src": "11544:12:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
<<<<<<< HEAD
                          "id": 1524,
                          "name": "updatedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1481,
                          "src": "11559:12:9",
=======
                          "id": 1836,
                          "name": "updatedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1793,
                          "src": "11559:12:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "11544:27:9",
=======
                        "src": "11544:27:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD
                      "id": 1526,
                      "nodeType": "ExpressionStatement",
                      "src": "11544:27:9"
=======
                      "id": 1838,
                      "nodeType": "ExpressionStatement",
                      "src": "11544:27:10"
>>>>>>> Till-Pascal
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 1531,
=======
                            "id": 1843,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "11621:1:9",
=======
                            "src": "11621:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1530,
=======
                          "id": 1842,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "11613:7:9",
=======
                          "src": "11613:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1529,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11613:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1532,
=======
                            "id": 1841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11613:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1844,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "11613:10:9",
=======
                        "src": "11613:10:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1533,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "11625:2:9",
=======
                        "id": 1845,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "11625:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1534,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "11629:12:9",
=======
                        "id": 1846,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1724,
                        "src": "11629:12:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1535,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1404,
                        "src": "11643:8:9",
=======
                        "id": 1847,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "11643:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1528,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1817,
                      "src": "11592:20:9",
=======
                      "id": 1840,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "11592:20:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1536,
=======
                    "id": 1848,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "11592:60:9",
=======
                    "src": "11592:60:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:60:9"
=======
                  "id": 1849,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:60:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1400,
              "nodeType": "StructuredDocumentation",
              "src": "9920:236:9",
              "text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 1539,
=======
              "id": 1712,
              "nodeType": "StructuredDocumentation",
              "src": "9920:236:10",
              "text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 1851,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
<<<<<<< HEAD
            "nameLocation": "10170:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1409,
=======
            "nameLocation": "10170:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1721,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1402,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10193:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "10185:10:9",
=======
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10193:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "10185:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10185:7:9",
=======
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10185:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1404,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "10213:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "10205:16:9",
=======
                  "id": 1716,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "10213:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "10205:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10205:7:9",
=======
                    "id": 1715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10205:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1406,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10244:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "10231:18:9",
=======
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10244:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "10231:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1405,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10231:5:9",
=======
                    "id": 1717,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10231:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1408,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "10264:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "10259:9:9",
=======
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "10264:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "10259:9:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10259:4:9",
=======
                    "id": 1719,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10259:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "10175:99:9"
            },
            "returnParameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10284:0:9"
            },
            "scope": 1818,
            "src": "10161:1498:9",
=======
              "src": "10175:99:10"
            },
            "returnParameters": {
              "id": 1722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10284:0:10"
            },
            "scope": 2130,
            "src": "10161:1498:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1703,
              "nodeType": "Block",
              "src": "12001:1858:9",
              "statements": [
                {
                  "assignments": [
                    1551
=======
              "id": 2015,
              "nodeType": "Block",
              "src": "12001:1858:10",
              "statements": [
                {
                  "assignments": [
                    1863
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1551,
                      "mutability": "mutable",
                      "name": "prevOwnership",
                      "nameLocation": "12033:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "12011:35:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership"
                      },
                      "typeName": {
                        "id": 1550,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1549,
                          "name": "TokenOwnership",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 779,
                          "src": "12011:14:9"
                        },
                        "referencedDeclaration": 779,
                        "src": "12011:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
                      "id": 1863,
                      "mutability": "mutable",
                      "name": "prevOwnership",
                      "nameLocation": "12033:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2015,
                      "src": "12011:35:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership"
                      },
                      "typeName": {
                        "id": 1862,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1861,
                          "name": "TokenOwnership",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1091,
                          "src": "12011:14:10"
                        },
                        "referencedDeclaration": 1091,
                        "src": "12011:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                          "typeString": "struct ERC721A.TokenOwnership"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1555,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1553,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "12061:7:9",
=======
                  "id": 1867,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1865,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "12061:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1552,
                      "name": "ownershipOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "12049:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$779_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                      }
                    },
                    "id": 1554,
=======
                      "id": 1864,
                      "name": "ownershipOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "12049:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1091_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                      }
                    },
                    "id": 1866,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12049:20:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
=======
                    "src": "12049:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
>>>>>>> Till-Pascal
                      "typeString": "struct ERC721A.TokenOwnership memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "12011:58:9"
                },
                {
                  "assignments": [
                    1557
=======
                  "src": "12011:58:10"
                },
                {
                  "assignments": [
                    1869
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1557,
                      "mutability": "mutable",
                      "name": "isApprovedOrOwner",
                      "nameLocation": "12085:17:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "12080:22:9",
=======
                      "id": 1869,
                      "mutability": "mutable",
                      "name": "isApprovedOrOwner",
                      "nameLocation": "12085:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2015,
                      "src": "12080:22:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1556,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12080:4:9",
=======
                        "id": 1868,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12080:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1578,
=======
                  "id": 1890,
>>>>>>> Till-Pascal
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 1576,
=======
                        "id": 1888,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
<<<<<<< HEAD
                          "id": 1569,
=======
                          "id": 1881,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
<<<<<<< HEAD
                            "id": 1562,
=======
                            "id": 1874,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1558,
=======
                                "id": 1870,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "12106:10:9",
=======
                                "src": "12106:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1559,
=======
                              "id": 1871,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "12106:12:9",
=======
                              "src": "12106:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
<<<<<<< HEAD
                                "id": 1560,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1551,
                                "src": "12122:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1561,
=======
                                "id": 1872,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1863,
                                "src": "12122:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1873,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 776,
                              "src": "12122:18:9",
=======
                              "referencedDeclaration": 1088,
                              "src": "12122:18:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
<<<<<<< HEAD
                            "src": "12106:34:9",
=======
                            "src": "12106:34:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
<<<<<<< HEAD
                            "id": 1568,
=======
                            "id": 1880,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 1564,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1546,
                                  "src": "12168:7:9",
=======
                                  "id": 1876,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1858,
                                  "src": "12168:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1563,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "12156:11:9",
=======
                                "id": 1875,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1547,
                                "src": "12156:11:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1565,
=======
                              "id": 1877,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "12156:20:9",
=======
                              "src": "12156:20:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1566,
=======
                                "id": 1878,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "12180:10:9",
=======
                                "src": "12180:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1567,
=======
                              "id": 1879,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "12180:12:9",
=======
                              "src": "12180:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
<<<<<<< HEAD
                            "src": "12156:36:9",
=======
                            "src": "12156:36:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
<<<<<<< HEAD
                          "src": "12106:86:9",
=======
                          "src": "12106:86:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 1571,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1551,
                                "src": "12225:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1572,
=======
                                "id": 1883,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1863,
                                "src": "12225:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1884,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 776,
                              "src": "12225:18:9",
=======
                              "referencedDeclaration": 1088,
                              "src": "12225:18:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1573,
=======
                                "id": 1885,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "12245:10:9",
=======
                                "src": "12245:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1574,
=======
                              "id": 1886,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "12245:12:9",
=======
                              "src": "12245:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1570,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1287,
                            "src": "12208:16:9",
=======
                            "id": 1882,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1599,
                            "src": "12208:16:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1575,
=======
                          "id": 1887,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "12208:50:9",
=======
                          "src": "12208:50:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "12106:152:9",
=======
                        "src": "12106:152:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 1577,
=======
                    "id": 1889,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "12105:154:9",
=======
                    "src": "12105:154:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "12080:179:9"
=======
                  "src": "12080:179:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1580,
                        "name": "isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1557,
                        "src": "12278:17:9",
=======
                        "id": 1892,
                        "name": "isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "12278:17:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
<<<<<<< HEAD
                        "id": 1581,
=======
                        "id": 1893,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "12297:52:9",
=======
                        "src": "12297:52:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
                          "typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721A: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
                          "typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1579,
=======
                      "id": 1891,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "12270:7:9",
=======
                      "src": "12270:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1582,
=======
                    "id": 1894,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12270:80:9",
=======
                    "src": "12270:80:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "12270:80:9"
=======
                  "id": 1895,
                  "nodeType": "ExpressionStatement",
                  "src": "12270:80:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1588,
=======
                        "id": 1900,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 1585,
                            "name": "prevOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1551,
                            "src": "12369:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                              "typeString": "struct ERC721A.TokenOwnership memory"
                            }
                          },
                          "id": 1586,
=======
                            "id": 1897,
                            "name": "prevOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1863,
                            "src": "12369:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                              "typeString": "struct ERC721A.TokenOwnership memory"
                            }
                          },
                          "id": 1898,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 776,
                          "src": "12369:18:9",
=======
                          "referencedDeclaration": 1088,
                          "src": "12369:18:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 1587,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1542,
                          "src": "12391:4:9",
=======
                          "id": 1899,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1854,
                          "src": "12391:4:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "12369:26:9",
=======
                        "src": "12369:26:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
<<<<<<< HEAD
                        "id": 1589,
=======
                        "id": 1901,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "12397:40:9",
=======
                        "src": "12397:40:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
                          "typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
                        },
                        "value": "ERC721A: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
                          "typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1584,
=======
                      "id": 1896,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "12361:7:9",
=======
                      "src": "12361:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1590,
=======
                    "id": 1902,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12361:77:9",
=======
                    "src": "12361:77:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "12361:77:9"
=======
                  "id": 1903,
                  "nodeType": "ExpressionStatement",
                  "src": "12361:77:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1598,
=======
                        "id": 1910,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1593,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1544,
                          "src": "12456:2:9",
=======
                          "id": 1905,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1856,
                          "src": "12456:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 1596,
=======
                              "id": 1908,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "12470:1:9",
=======
                              "src": "12470:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1595,
=======
                            "id": 1907,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "12462:7:9",
=======
                            "src": "12462:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1594,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12462:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1597,
=======
                              "id": 1906,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12462:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1909,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "12462:10:9",
=======
                          "src": "12462:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "12456:16:9",
=======
                        "src": "12456:16:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 1599,
=======
                        "id": 1911,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "12474:39:9",
=======
                        "src": "12474:39:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
                          "typeString": "literal_string \"ERC721A: transfer to the zero address\""
                        },
                        "value": "ERC721A: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
                          "typeString": "literal_string \"ERC721A: transfer to the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1592,
=======
                      "id": 1904,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "12448:7:9",
=======
                      "src": "12448:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1600,
=======
                    "id": 1912,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12448:66:9",
=======
                    "src": "12448:66:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1601,
                  "nodeType": "ExpressionStatement",
                  "src": "12448:66:9"
=======
                  "id": 1913,
                  "nodeType": "ExpressionStatement",
                  "src": "12448:66:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1603,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "12547:4:9",
=======
                        "id": 1915,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "12547:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1604,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "12553:2:9",
=======
                        "id": 1916,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "12553:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1605,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "12557:7:9",
=======
                        "id": 1917,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "12557:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 1606,
=======
                        "id": 1918,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "12566:1:9",
=======
                        "src": "12566:1:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1602,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "12525:21:9",
=======
                      "id": 1914,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2116,
                      "src": "12525:21:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1607,
=======
                    "id": 1919,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12525:43:9",
=======
                    "src": "12525:43:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1608,
                  "nodeType": "ExpressionStatement",
                  "src": "12525:43:9"
=======
                  "id": 1920,
                  "nodeType": "ExpressionStatement",
                  "src": "12525:43:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 1612,
=======
                            "id": 1924,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "12647:1:9",
=======
                            "src": "12647:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1611,
=======
                          "id": 1923,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "12639:7:9",
=======
                          "src": "12639:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1610,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12639:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1613,
=======
                            "id": 1922,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12639:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1925,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "12639:10:9",
=======
                        "src": "12639:10:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1614,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "12651:7:9",
=======
                        "id": 1926,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "12651:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 1615,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1551,
                          "src": "12660:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1616,
=======
                          "id": 1927,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1863,
                          "src": "12660:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1928,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 776,
                        "src": "12660:18:9",
=======
                        "referencedDeclaration": 1088,
                        "src": "12660:18:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1609,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "12630:8:9",
=======
                      "id": 1921,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "12630:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1617,
=======
                    "id": 1929,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12630:49:9",
=======
                    "src": "12630:49:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "12630:49:9"
                },
                {
                  "id": 1689,
                  "nodeType": "UncheckedBlock",
                  "src": "12945:813:9",
                  "statements": [
                    {
                      "expression": {
                        "id": 1624,
=======
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "12630:49:10"
                },
                {
                  "id": 2001,
                  "nodeType": "UncheckedBlock",
                  "src": "12945:813:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1936,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1619,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "12969:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1621,
                            "indexExpression": {
                              "id": 1620,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1542,
                              "src": "12982:4:9",
=======
                              "id": 1931,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "12969:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1933,
                            "indexExpression": {
                              "id": 1932,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1854,
                              "src": "12982:4:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "12969:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$784_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1622,
=======
                            "src": "12969:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1934,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 781,
                          "src": "12969:26:9",
=======
                          "referencedDeclaration": 1093,
                          "src": "12969:26:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 1623,
=======
                          "id": 1935,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "12999:1:9",
=======
                          "src": "12999:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
<<<<<<< HEAD
                        "src": "12969:31:9",
=======
                        "src": "12969:31:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
<<<<<<< HEAD
                      "id": 1625,
                      "nodeType": "ExpressionStatement",
                      "src": "12969:31:9"
                    },
                    {
                      "expression": {
                        "id": 1631,
=======
                      "id": 1937,
                      "nodeType": "ExpressionStatement",
                      "src": "12969:31:10"
                    },
                    {
                      "expression": {
                        "id": 1943,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1626,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "13014:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1628,
                            "indexExpression": {
                              "id": 1627,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1544,
                              "src": "13027:2:9",
=======
                              "id": 1938,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "13014:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1940,
                            "indexExpression": {
                              "id": 1939,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1856,
                              "src": "13027:2:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "13014:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$784_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1629,
=======
                            "src": "13014:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1941,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 781,
                          "src": "13014:24:9",
=======
                          "referencedDeclaration": 1093,
                          "src": "13014:24:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 1630,
=======
                          "id": 1942,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "13042:1:9",
=======
                          "src": "13042:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
<<<<<<< HEAD
                        "src": "13014:29:9",
=======
                        "src": "13014:29:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
<<<<<<< HEAD
                      "id": 1632,
                      "nodeType": "ExpressionStatement",
                      "src": "13014:29:9"
                    },
                    {
                      "expression": {
                        "id": 1638,
=======
                      "id": 1944,
                      "nodeType": "ExpressionStatement",
                      "src": "13014:29:10"
                    },
                    {
                      "expression": {
                        "id": 1950,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1633,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "13058:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1635,
                            "indexExpression": {
                              "id": 1634,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1546,
                              "src": "13070:7:9",
=======
                              "id": 1945,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "13058:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1947,
                            "indexExpression": {
                              "id": 1946,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1858,
                              "src": "13070:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "13058:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1636,
=======
                            "src": "13058:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1948,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 776,
                          "src": "13058:25:9",
=======
                          "referencedDeclaration": 1088,
                          "src": "13058:25:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
<<<<<<< HEAD
                          "id": 1637,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1544,
                          "src": "13086:2:9",
=======
                          "id": 1949,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1856,
                          "src": "13086:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "13058:30:9",
=======
                        "src": "13058:30:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
<<<<<<< HEAD
                      "id": 1639,
                      "nodeType": "ExpressionStatement",
                      "src": "13058:30:9"
                    },
                    {
                      "expression": {
                        "id": 1649,
=======
                      "id": 1951,
                      "nodeType": "ExpressionStatement",
                      "src": "13058:30:10"
                    },
                    {
                      "expression": {
                        "id": 1961,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1640,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "13102:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1642,
                            "indexExpression": {
                              "id": 1641,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1546,
                              "src": "13114:7:9",
=======
                              "id": 1952,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "13102:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1954,
                            "indexExpression": {
                              "id": 1953,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1858,
                              "src": "13114:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "13102:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1643,
=======
                            "src": "13102:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1955,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 778,
                          "src": "13102:35:9",
=======
                          "referencedDeclaration": 1090,
                          "src": "13102:35:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 1646,
=======
                                "id": 1958,
>>>>>>> Till-Pascal
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
<<<<<<< HEAD
                                "src": "13147:5:9",
=======
                                "src": "13147:5:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
<<<<<<< HEAD
                              "id": 1647,
=======
                              "id": 1959,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "13147:15:9",
=======
                              "src": "13147:15:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1645,
=======
                            "id": 1957,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "13140:6:9",
=======
                            "src": "13140:6:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1644,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "13140:6:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1648,
=======
                              "id": 1956,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "13140:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1960,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "13140:23:9",
=======
                          "src": "13140:23:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
<<<<<<< HEAD
                        "src": "13102:61:9",
=======
                        "src": "13102:61:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
<<<<<<< HEAD
                      "id": 1650,
                      "nodeType": "ExpressionStatement",
                      "src": "13102:61:9"
                    },
                    {
                      "assignments": [
                        1652
=======
                      "id": 1962,
                      "nodeType": "ExpressionStatement",
                      "src": "13102:61:10"
                    },
                    {
                      "assignments": [
                        1964
>>>>>>> Till-Pascal
                      ],
                      "declarations": [
                        {
                          "constant": false,
<<<<<<< HEAD
                          "id": 1652,
                          "mutability": "mutable",
                          "name": "nextTokenId",
                          "nameLocation": "13419:11:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1689,
                          "src": "13411:19:9",
=======
                          "id": 1964,
                          "mutability": "mutable",
                          "name": "nextTokenId",
                          "nameLocation": "13419:11:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 2001,
                          "src": "13411:19:10",
>>>>>>> Till-Pascal
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1651,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13411:7:9",
=======
                            "id": 1963,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13411:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1656,
=======
                      "id": 1968,
>>>>>>> Till-Pascal
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1655,
=======
                        "id": 1967,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1653,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1546,
                          "src": "13433:7:9",
=======
                          "id": 1965,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1858,
                          "src": "13433:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 1654,
=======
                          "id": 1966,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "13443:1:9",
=======
                          "src": "13443:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
<<<<<<< HEAD
                        "src": "13433:11:9",
=======
                        "src": "13433:11:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                      "src": "13411:33:9"
=======
                      "src": "13411:33:10"
>>>>>>> Till-Pascal
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1665,
=======
                        "id": 1977,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1657,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "13462:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1659,
                            "indexExpression": {
                              "id": 1658,
                              "name": "nextTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1652,
                              "src": "13474:11:9",
=======
                              "id": 1969,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "13462:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1971,
                            "indexExpression": {
                              "id": 1970,
                              "name": "nextTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1964,
                              "src": "13474:11:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "13462:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1660,
=======
                            "src": "13462:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1972,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 776,
                          "src": "13462:29:9",
=======
                          "referencedDeclaration": 1088,
                          "src": "13462:29:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 1663,
=======
                              "id": 1975,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "13503:1:9",
=======
                              "src": "13503:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1662,
=======
                            "id": 1974,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "13495:7:9",
=======
                            "src": "13495:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1661,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13495:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1664,
=======
                              "id": 1973,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13495:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1976,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "13495:10:9",
=======
                          "src": "13495:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "13462:43:9",
=======
                        "src": "13462:43:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "id": 1688,
                      "nodeType": "IfStatement",
                      "src": "13458:290:9",
                      "trueBody": {
                        "id": 1687,
                        "nodeType": "Block",
                        "src": "13507:241:9",
=======
                      "id": 2000,
                      "nodeType": "IfStatement",
                      "src": "13458:290:10",
                      "trueBody": {
                        "id": 1999,
                        "nodeType": "Block",
                        "src": "13507:241:10",
>>>>>>> Till-Pascal
                        "statements": [
                          {
                            "condition": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 1667,
                                  "name": "nextTokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1652,
                                  "src": "13537:11:9",
=======
                                  "id": 1979,
                                  "name": "nextTokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1964,
                                  "src": "13537:11:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1666,
                                "name": "_exists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1367,
                                "src": "13529:7:9",
=======
                                "id": 1978,
                                "name": "_exists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "13529:7:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view returns (bool)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1668,
=======
                              "id": 1980,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "13529:20:9",
=======
                              "src": "13529:20:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 1686,
                            "nodeType": "IfStatement",
                            "src": "13525:209:9",
                            "trueBody": {
                              "id": 1685,
                              "nodeType": "Block",
                              "src": "13551:183:9",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1675,
=======
                            "id": 1998,
                            "nodeType": "IfStatement",
                            "src": "13525:209:10",
                            "trueBody": {
                              "id": 1997,
                              "nodeType": "Block",
                              "src": "13551:183:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1987,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
<<<<<<< HEAD
                                          "id": 1669,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 795,
                                          "src": "13573:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1671,
                                        "indexExpression": {
                                          "id": 1670,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1652,
                                          "src": "13585:11:9",
=======
                                          "id": 1981,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1107,
                                          "src": "13573:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1983,
                                        "indexExpression": {
                                          "id": 1982,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1964,
                                          "src": "13585:11:10",
>>>>>>> Till-Pascal
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "13573:24:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1672,
=======
                                        "src": "13573:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1984,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 776,
                                      "src": "13573:29:9",
=======
                                      "referencedDeclaration": 1088,
                                      "src": "13573:29:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 1673,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1551,
                                        "src": "13605:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1674,
=======
                                        "id": 1985,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1863,
                                        "src": "13605:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1986,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 776,
                                      "src": "13605:18:9",
=======
                                      "referencedDeclaration": 1088,
                                      "src": "13605:18:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "13573:50:9",
=======
                                    "src": "13573:50:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1676,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13573:50:9"
                                },
                                {
                                  "expression": {
                                    "id": 1683,
=======
                                  "id": 1988,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13573:50:10"
                                },
                                {
                                  "expression": {
                                    "id": 1995,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
<<<<<<< HEAD
                                          "id": 1677,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 795,
                                          "src": "13645:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1679,
                                        "indexExpression": {
                                          "id": 1678,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1652,
                                          "src": "13657:11:9",
=======
                                          "id": 1989,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1107,
                                          "src": "13645:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1991,
                                        "indexExpression": {
                                          "id": 1990,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1964,
                                          "src": "13657:11:10",
>>>>>>> Till-Pascal
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "13645:24:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1680,
=======
                                        "src": "13645:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1992,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 778,
                                      "src": "13645:39:9",
=======
                                      "referencedDeclaration": 1090,
                                      "src": "13645:39:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 1681,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1551,
                                        "src": "13687:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1682,
=======
                                        "id": 1993,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1863,
                                        "src": "13687:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1994,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 778,
                                      "src": "13687:28:9",
=======
                                      "referencedDeclaration": 1090,
                                      "src": "13687:28:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "13645:70:9",
=======
                                    "src": "13645:70:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1684,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13645:70:9"
=======
                                  "id": 1996,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13645:70:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1691,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "13782:4:9",
=======
                        "id": 2003,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "13782:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1692,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "13788:2:9",
=======
                        "id": 2004,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "13788:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1693,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "13792:7:9",
=======
                        "id": 2005,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "13792:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1690,
=======
                      "id": 2002,
>>>>>>> Till-Pascal
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
<<<<<<< HEAD
                      "src": "13773:8:9",
=======
                      "src": "13773:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1694,
=======
                    "id": 2006,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "13773:27:9",
=======
                    "src": "13773:27:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1695,
                  "nodeType": "EmitStatement",
                  "src": "13768:32:9"
=======
                  "id": 2007,
                  "nodeType": "EmitStatement",
                  "src": "13768:32:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1697,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "13831:4:9",
=======
                        "id": 2009,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "13831:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1698,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "13837:2:9",
=======
                        "id": 2010,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "13837:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1699,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "13841:7:9",
=======
                        "id": 2011,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "13841:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 1700,
=======
                        "id": 2012,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "13850:1:9",
=======
                        "src": "13850:1:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1696,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1817,
                      "src": "13810:20:9",
=======
                      "id": 2008,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "13810:20:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1701,
=======
                    "id": 2013,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "13810:42:9",
=======
                    "src": "13810:42:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "13810:42:9"
=======
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "13810:42:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1540,
              "nodeType": "StructuredDocumentation",
              "src": "11665:231:9",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1704,
=======
              "id": 1852,
              "nodeType": "StructuredDocumentation",
              "src": "11665:231:10",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 2016,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
<<<<<<< HEAD
            "nameLocation": "11910:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1547,
=======
            "nameLocation": "11910:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1859,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11937:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "11929:12:9",
=======
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11937:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "11929:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11929:7:9",
=======
                    "id": 1853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11929:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11959:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "11951:10:9",
=======
                  "id": 1856,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11959:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "11951:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11951:7:9",
=======
                    "id": 1855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11951:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1546,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11979:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "11971:15:9",
=======
                  "id": 1858,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11979:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "11971:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11971:7:9",
=======
                    "id": 1857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11971:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "11919:73:9"
            },
            "returnParameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12001:0:9"
            },
            "scope": 1818,
            "src": "11901:1958:9",
=======
              "src": "11919:73:10"
            },
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12001:0:10"
            },
            "scope": 2130,
            "src": "11901:1958:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1726,
              "nodeType": "Block",
              "src": "14070:89:9",
              "statements": [
                {
                  "expression": {
                    "id": 1718,
=======
              "id": 2038,
              "nodeType": "Block",
              "src": "14070:89:10",
              "statements": [
                {
                  "expression": {
                    "id": 2030,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 1714,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "14080:15:9",
=======
                        "id": 2026,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "14080:15:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
<<<<<<< HEAD
                      "id": 1716,
                      "indexExpression": {
                        "id": 1715,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "14096:7:9",
=======
                      "id": 2028,
                      "indexExpression": {
                        "id": 2027,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "14096:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "14080:24:9",
=======
                      "src": "14080:24:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 1717,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1707,
                      "src": "14107:2:9",
=======
                      "id": 2029,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2019,
                      "src": "14107:2:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "14080:29:9",
=======
                    "src": "14080:29:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "14080:29:9"
=======
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "14080:29:10"
>>>>>>> Till-Pascal
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1721,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "14133:5:9",
=======
                        "id": 2033,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "14133:5:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1722,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "14140:2:9",
=======
                        "id": 2034,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "14140:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1723,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "14144:7:9",
=======
                        "id": 2035,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "14144:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1720,
=======
                      "id": 2032,
>>>>>>> Till-Pascal
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
<<<<<<< HEAD
                      "src": "14124:8:9",
=======
                      "src": "14124:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1724,
=======
                    "id": 2036,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "14124:28:9",
=======
                    "src": "14124:28:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1725,
                  "nodeType": "EmitStatement",
                  "src": "14119:33:9"
=======
                  "id": 2037,
                  "nodeType": "EmitStatement",
                  "src": "14119:33:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1705,
              "nodeType": "StructuredDocumentation",
              "src": "13865:100:9",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1727,
=======
              "id": 2017,
              "nodeType": "StructuredDocumentation",
              "src": "13865:100:10",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 2039,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
<<<<<<< HEAD
            "nameLocation": "13979:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1712,
=======
            "nameLocation": "13979:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2024,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14005:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "13997:10:9",
=======
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14005:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "13997:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13997:7:9",
=======
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13997:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1709,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14025:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "14017:15:9",
=======
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14025:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "14017:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14017:7:9",
=======
                    "id": 2020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14017:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1711,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "14050:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "14042:13:9",
=======
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "14050:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "14042:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14042:7:9",
=======
                    "id": 2022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14042:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "13987:74:9"
            },
            "returnParameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14070:0:9"
            },
            "scope": 1818,
            "src": "13970:189:9",
=======
              "src": "13987:74:10"
            },
            "returnParameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14070:0:10"
            },
            "scope": 2130,
            "src": "13970:189:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1790,
              "nodeType": "Block",
              "src": "14868:627:9",
=======
              "id": 2102,
              "nodeType": "Block",
              "src": "14868:627:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
<<<<<<< HEAD
                        "id": 1741,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "14882:2:9",
=======
                        "id": 2053,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2044,
                        "src": "14882:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
<<<<<<< HEAD
                      "id": 1742,
=======
                      "id": 2054,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 209,
<<<<<<< HEAD
                      "src": "14882:13:9",
=======
                      "src": "14882:13:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1743,
=======
                    "id": 2055,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "14882:15:9",
=======
                    "src": "14882:15:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
<<<<<<< HEAD
                    "id": 1788,
                    "nodeType": "Block",
                    "src": "15453:36:9",
=======
                    "id": 2100,
                    "nodeType": "Block",
                    "src": "15453:36:10",
>>>>>>> Till-Pascal
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 1786,
=======
                          "id": 2098,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "15474:4:9",
=======
                          "src": "15474:4:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "functionReturnParameters": 1740,
                        "id": 1787,
                        "nodeType": "Return",
                        "src": "15467:11:9"
                      }
                    ]
                  },
                  "id": 1789,
                  "nodeType": "IfStatement",
                  "src": "14878:611:9",
                  "trueBody": {
                    "id": 1785,
                    "nodeType": "Block",
                    "src": "14899:548:9",
=======
                        "functionReturnParameters": 2052,
                        "id": 2099,
                        "nodeType": "Return",
                        "src": "15467:11:10"
                      }
                    ]
                  },
                  "id": 2101,
                  "nodeType": "IfStatement",
                  "src": "14878:611:10",
                  "trueBody": {
                    "id": 2097,
                    "nodeType": "Block",
                    "src": "14899:548:10",
>>>>>>> Till-Pascal
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
<<<<<<< HEAD
                              "id": 1765,
                              "nodeType": "Block",
                              "src": "15014:95:9",
=======
                              "id": 2077,
                              "nodeType": "Block",
                              "src": "15014:95:10",
>>>>>>> Till-Pascal
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
<<<<<<< HEAD
                                    "id": 1763,
=======
                                    "id": 2075,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
<<<<<<< HEAD
                                      "id": 1757,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1755,
                                      "src": "15039:6:9",
=======
                                      "id": 2069,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2067,
                                      "src": "15039:6:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
<<<<<<< HEAD
                                              "id": 1759,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1732,
                                              "src": "15065:2:9",
=======
                                              "id": 2071,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2044,
                                              "src": "15065:2:10",
>>>>>>> Till-Pascal
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
<<<<<<< HEAD
                                            "id": 1758,
=======
                                            "id": 2070,
>>>>>>> Till-Pascal
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 133,
<<<<<<< HEAD
                                            "src": "15049:15:9",
=======
                                            "src": "15049:15:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
<<<<<<< HEAD
                                          "id": 1760,
=======
                                          "id": 2072,
>>>>>>> Till-Pascal
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "15049:19:9",
=======
                                          "src": "15049:19:10",
>>>>>>> Till-Pascal
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$133",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 1761,
=======
                                        "id": 2073,
>>>>>>> Till-Pascal
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 132,
<<<<<<< HEAD
                                        "src": "15049:36:9",
=======
                                        "src": "15049:36:10",
>>>>>>> Till-Pascal
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
<<<<<<< HEAD
                                      "id": 1762,
=======
                                      "id": 2074,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "src": "15049:45:9",
=======
                                      "src": "15049:45:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "15039:55:9",
=======
                                    "src": "15039:55:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
<<<<<<< HEAD
                                  "functionReturnParameters": 1740,
                                  "id": 1764,
                                  "nodeType": "Return",
                                  "src": "15032:62:9"
=======
                                  "functionReturnParameters": 2052,
                                  "id": 2076,
                                  "nodeType": "Return",
                                  "src": "15032:62:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            },
                            "errorName": "",
<<<<<<< HEAD
                            "id": 1766,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1756,
=======
                            "id": 2078,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2068,
>>>>>>> Till-Pascal
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
<<<<<<< HEAD
                                  "id": 1755,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "15006:6:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1766,
                                  "src": "14999:13:9",
=======
                                  "id": 2067,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "15006:6:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2078,
                                  "src": "14999:13:10",
>>>>>>> Till-Pascal
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 1754,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14999:6:9",
=======
                                    "id": 2066,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14999:6:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
<<<<<<< HEAD
                              "src": "14998:15:9"
                            },
                            "src": "14990:119:9"
                          },
                          {
                            "block": {
                              "id": 1782,
                              "nodeType": "Block",
                              "src": "15138:299:9",
=======
                              "src": "14998:15:10"
                            },
                            "src": "14990:119:10"
                          },
                          {
                            "block": {
                              "id": 2094,
                              "nodeType": "Block",
                              "src": "15138:299:10",
>>>>>>> Till-Pascal
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 1773,
=======
                                    "id": 2085,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 1770,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1768,
                                        "src": "15160:6:9",
=======
                                        "id": 2082,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2080,
                                        "src": "15160:6:10",
>>>>>>> Till-Pascal
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
<<<<<<< HEAD
                                      "id": 1771,
=======
                                      "id": 2083,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "src": "15160:13:9",
=======
                                      "src": "15160:13:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
<<<<<<< HEAD
                                      "id": 1772,
=======
                                      "id": 2084,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
<<<<<<< HEAD
                                      "src": "15177:1:9",
=======
                                      "src": "15177:1:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
<<<<<<< HEAD
                                    "src": "15160:18:9",
=======
                                    "src": "15160:18:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
<<<<<<< HEAD
                                    "id": 1780,
                                    "nodeType": "Block",
                                    "src": "15288:135:9",
=======
                                    "id": 2092,
                                    "nodeType": "Block",
                                    "src": "15288:135:10",
>>>>>>> Till-Pascal
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
<<<<<<< HEAD
                                          "src": "15319:86:9",
=======
                                          "src": "15319:86:10",
>>>>>>> Till-Pascal
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                                                        "src": "15356:2:9",
=======
                                                        "src": "15356:2:10",
>>>>>>> Till-Pascal
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                        "src": "15360:6:9"
=======
                                                        "src": "15360:6:10"
>>>>>>> Till-Pascal
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                      "src": "15352:3:9"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15352:15:9"
=======
                                                      "src": "15352:3:10"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15352:15:10"
>>>>>>> Till-Pascal
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                        "src": "15375:6:9"
=======
                                                        "src": "15375:6:10"
>>>>>>> Till-Pascal
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                      "src": "15369:5:9"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15369:13:9"
=======
                                                      "src": "15369:5:10"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15369:13:10"
>>>>>>> Till-Pascal
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                  "src": "15345:6:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15345:38:9"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "15345:38:9"
=======
                                                  "src": "15345:6:10"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15345:38:10"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "15345:38:10"
>>>>>>> Till-Pascal
                                            }
                                          ]
                                        },
                                        "evmVersion": "london",
                                        "externalReferences": [
                                          {
<<<<<<< HEAD
                                            "declaration": 1768,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15360:6:9",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1768,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15375:6:9",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1779,
                                        "nodeType": "InlineAssembly",
                                        "src": "15310:95:9"
                                      }
                                    ]
                                  },
                                  "id": 1781,
                                  "nodeType": "IfStatement",
                                  "src": "15156:267:9",
                                  "trueBody": {
                                    "id": 1778,
                                    "nodeType": "Block",
                                    "src": "15180:102:9",
=======
                                            "declaration": 2080,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15360:6:10",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 2080,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15375:6:10",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 2091,
                                        "nodeType": "InlineAssembly",
                                        "src": "15310:95:10"
                                      }
                                    ]
                                  },
                                  "id": 2093,
                                  "nodeType": "IfStatement",
                                  "src": "15156:267:10",
                                  "trueBody": {
                                    "id": 2090,
                                    "nodeType": "Block",
                                    "src": "15180:102:10",
>>>>>>> Till-Pascal
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
<<<<<<< HEAD
                                              "id": 1775,
=======
                                              "id": 2087,
>>>>>>> Till-Pascal
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
<<<<<<< HEAD
                                              "src": "15209:53:9",
=======
                                              "src": "15209:53:10",
>>>>>>> Till-Pascal
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                                "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721A: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                                "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
<<<<<<< HEAD
                                            "id": 1774,
=======
                                            "id": 2086,
>>>>>>> Till-Pascal
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              4294967277,
                                              4294967277
                                            ],
                                            "referencedDeclaration": 4294967277,
<<<<<<< HEAD
                                            "src": "15202:6:9",
=======
                                            "src": "15202:6:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
<<<<<<< HEAD
                                          "id": 1776,
=======
                                          "id": 2088,
>>>>>>> Till-Pascal
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "15202:61:9",
=======
                                          "src": "15202:61:10",
>>>>>>> Till-Pascal
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 1777,
                                        "nodeType": "ExpressionStatement",
                                        "src": "15202:61:9"
=======
                                        "id": 2089,
                                        "nodeType": "ExpressionStatement",
                                        "src": "15202:61:10"
>>>>>>> Till-Pascal
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
<<<<<<< HEAD
                            "id": 1783,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1769,
=======
                            "id": 2095,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2081,
>>>>>>> Till-Pascal
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
<<<<<<< HEAD
                                  "id": 1768,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "15130:6:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1783,
                                  "src": "15117:19:9",
=======
                                  "id": 2080,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "15130:6:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2095,
                                  "src": "15117:19:10",
>>>>>>> Till-Pascal
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 1767,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15117:5:9",
=======
                                    "id": 2079,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15117:5:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
<<<<<<< HEAD
                              "src": "15116:21:9"
                            },
                            "src": "15110:327:9"
=======
                              "src": "15116:21:10"
                            },
                            "src": "15110:327:10"
>>>>>>> Till-Pascal
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1748,
=======
                                "id": 2060,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "14954:10:9",
=======
                                "src": "14954:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1749,
=======
                              "id": 2061,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "14954:12:9",
=======
                              "src": "14954:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
<<<<<<< HEAD
                              "id": 1750,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1730,
                              "src": "14968:4:9",
=======
                              "id": 2062,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2042,
                              "src": "14968:4:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
<<<<<<< HEAD
                              "id": 1751,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1734,
                              "src": "14974:7:9",
=======
                              "id": 2063,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "14974:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
<<<<<<< HEAD
                              "id": 1752,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1736,
                              "src": "14983:5:9",
=======
                              "id": 2064,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2048,
                              "src": "14983:5:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 1745,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1732,
                                  "src": "14933:2:9",
=======
                                  "id": 2057,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2044,
                                  "src": "14933:2:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1744,
=======
                                "id": 2056,
>>>>>>> Till-Pascal
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
<<<<<<< HEAD
                                "src": "14917:15:9",
=======
                                "src": "14917:15:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1746,
=======
                              "id": 2058,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "14917:19:9",
=======
                              "src": "14917:19:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$133",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
<<<<<<< HEAD
                            "id": 1747,
=======
                            "id": 2059,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 132,
<<<<<<< HEAD
                            "src": "14917:36:9",
=======
                            "src": "14917:36:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1753,
=======
                          "id": 2065,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "14917:72:9",
=======
                          "src": "14917:72:10",
>>>>>>> Till-Pascal
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
<<<<<<< HEAD
                        "id": 1784,
                        "nodeType": "TryStatement",
                        "src": "14913:524:9"
=======
                        "id": 2096,
                        "nodeType": "TryStatement",
                        "src": "14913:524:10"
>>>>>>> Till-Pascal
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1728,
              "nodeType": "StructuredDocumentation",
              "src": "14165:542:9",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1791,
=======
              "id": 2040,
              "nodeType": "StructuredDocumentation",
              "src": "14165:542:10",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 2103,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
<<<<<<< HEAD
            "nameLocation": "14721:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1737,
=======
            "nameLocation": "14721:22:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2049,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14761:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "14753:12:9",
=======
                  "id": 2042,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14761:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "14753:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14753:7:9",
=======
                    "id": 2041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14753:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1732,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14783:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "14775:10:9",
=======
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14783:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "14775:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14775:7:9",
=======
                    "id": 2043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14775:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1734,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14803:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "14795:15:9",
=======
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14803:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "14795:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14795:7:9",
=======
                    "id": 2045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14795:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1736,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "14833:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "14820:18:9",
=======
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "14833:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "14820:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1735,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14820:5:9",
=======
                    "id": 2047,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14820:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "14743:101:9"
            },
            "returnParameters": {
              "id": 1740,
=======
              "src": "14743:101:10"
            },
            "returnParameters": {
              "id": 2052,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1739,
=======
                  "id": 2051,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1791,
                  "src": "14862:4:9",
=======
                  "scope": 2103,
                  "src": "14862:4:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1738,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14862:4:9",
=======
                    "id": 2050,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14862:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "14861:6:9"
            },
            "scope": 1818,
            "src": "14712:783:9",
=======
              "src": "14861:6:10"
            },
            "scope": 2130,
            "src": "14712:783:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1803,
              "nodeType": "Block",
              "src": "16121:2:9",
              "statements": []
            },
            "documentation": {
              "id": 1792,
              "nodeType": "StructuredDocumentation",
              "src": "15501:463:9",
              "text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
            },
            "id": 1804,
=======
              "id": 2115,
              "nodeType": "Block",
              "src": "16121:2:10",
              "statements": []
            },
            "documentation": {
              "id": 2104,
              "nodeType": "StructuredDocumentation",
              "src": "15501:463:10",
              "text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
            },
            "id": 2116,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
<<<<<<< HEAD
            "nameLocation": "15978:21:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1801,
=======
            "nameLocation": "15978:21:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2113,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1794,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16017:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "16009:12:9",
=======
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16017:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "16009:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16009:7:9",
=======
                    "id": 2105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16009:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1796,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16039:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "16031:10:9",
=======
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16039:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "16031:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16031:7:9",
=======
                    "id": 2107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16031:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1798,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "16059:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "16051:20:9",
=======
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "16059:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "16051:20:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16051:7:9",
=======
                    "id": 2109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16051:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1800,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "16089:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "16081:16:9",
=======
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "16089:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "16081:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16081:7:9",
=======
                    "id": 2111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16081:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "15999:104:9"
            },
            "returnParameters": {
              "id": 1802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16121:0:9"
            },
            "scope": 1818,
            "src": "15969:154:9",
=======
              "src": "15999:104:10"
            },
            "returnParameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16121:0:10"
            },
            "scope": 2130,
            "src": "15969:154:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1816,
              "nodeType": "Block",
              "src": "16672:2:9",
              "statements": []
            },
            "documentation": {
              "id": 1805,
              "nodeType": "StructuredDocumentation",
              "src": "16129:387:9",
              "text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
            },
            "id": 1817,
=======
              "id": 2128,
              "nodeType": "Block",
              "src": "16672:2:10",
              "statements": []
            },
            "documentation": {
              "id": 2117,
              "nodeType": "StructuredDocumentation",
              "src": "16129:387:10",
              "text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
            },
            "id": 2129,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfers",
<<<<<<< HEAD
            "nameLocation": "16530:20:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1814,
=======
            "nameLocation": "16530:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2126,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1807,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16568:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "16560:12:9",
=======
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16568:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "16560:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16560:7:9",
=======
                    "id": 2118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16560:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1809,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16590:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "16582:10:9",
=======
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16590:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "16582:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16582:7:9",
=======
                    "id": 2120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16582:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1811,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "16610:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "16602:20:9",
=======
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "16610:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "16602:20:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16602:7:9",
=======
                    "id": 2122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16602:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1813,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "16640:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "16632:16:9",
=======
                  "id": 2125,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "16640:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "16632:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16632:7:9",
=======
                    "id": 2124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16632:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "16550:104:9"
            },
            "returnParameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16672:0:9"
            },
            "scope": 1818,
            "src": "16521:153:9",
=======
              "src": "16550:104:10"
            },
            "returnParameters": {
              "id": 2127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16672:0:10"
            },
            "scope": 2130,
            "src": "16521:153:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 1819,
        "src": "1033:15643:9",
        "usedErrors": []
      }
    ],
    "src": "56:16621:9"
=======
        "scope": 2131,
        "src": "1033:15643:10",
        "usedErrors": []
      }
    ],
    "src": "56:16621:10"
>>>>>>> Till-Pascal
  },
  "legacyAST": {
    "absolutePath": "erc721a/contracts/ERC721A.sol",
    "exportedSymbols": {
      "Address": [
        486
      ],
      "Context": [
        508
      ],
      "ERC165": [
        735
      ],
      "ERC721A": [
<<<<<<< HEAD
        1818
=======
        2130
>>>>>>> Till-Pascal
      ],
      "IERC165": [
        747
      ],
      "IERC721": [
        115
      ],
      "IERC721Enumerable": [
        164
      ],
      "IERC721Metadata": [
        191
      ],
      "IERC721Receiver": [
        133
      ],
      "Strings": [
        711
      ]
    },
<<<<<<< HEAD
    "id": 1819,
=======
    "id": 2131,
>>>>>>> Till-Pascal
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 749,
=======
        "id": 1061,
>>>>>>> Till-Pascal
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
        "src": "56:23:9"
=======
        "src": "56:23:10"
>>>>>>> Till-Pascal
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
<<<<<<< HEAD
        "id": 750,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 116,
        "src": "81:58:9",
=======
        "id": 1062,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 116,
        "src": "81:58:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
<<<<<<< HEAD
        "id": 751,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 134,
        "src": "140:66:9",
=======
        "id": 1063,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 134,
        "src": "140:66:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
<<<<<<< HEAD
        "id": 752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 192,
        "src": "207:77:9",
=======
        "id": 1064,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 192,
        "src": "207:77:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
<<<<<<< HEAD
        "id": 753,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 165,
        "src": "285:79:9",
=======
        "id": 1065,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 165,
        "src": "285:79:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
<<<<<<< HEAD
        "id": 754,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 487,
        "src": "365:51:9",
=======
        "id": 1066,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 487,
        "src": "365:51:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
<<<<<<< HEAD
        "id": 755,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 509,
        "src": "417:51:9",
=======
        "id": 1067,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 509,
        "src": "417:51:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
<<<<<<< HEAD
        "id": 756,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 712,
        "src": "469:51:9",
=======
        "id": 1068,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 712,
        "src": "469:51:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
<<<<<<< HEAD
        "id": 757,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 736,
        "src": "521:64:9",
=======
        "id": 1069,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2131,
        "sourceUnit": 736,
        "src": "521:64:10",
>>>>>>> Till-Pascal
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 759,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 508,
              "src": "1053:7:9"
            },
            "id": 760,
            "nodeType": "InheritanceSpecifier",
            "src": "1053:7:9"
          },
          {
            "baseName": {
              "id": 761,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 735,
              "src": "1062:6:9"
            },
            "id": 762,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:6:9"
          },
          {
            "baseName": {
              "id": 763,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 115,
              "src": "1070:7:9"
            },
            "id": 764,
            "nodeType": "InheritanceSpecifier",
            "src": "1070:7:9"
          },
          {
            "baseName": {
              "id": 765,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 191,
              "src": "1079:15:9"
            },
            "id": 766,
            "nodeType": "InheritanceSpecifier",
            "src": "1079:15:9"
          },
          {
            "baseName": {
              "id": 767,
              "name": "IERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 164,
              "src": "1096:17:9"
            },
            "id": 768,
            "nodeType": "InheritanceSpecifier",
            "src": "1096:17:9"
=======
              "id": 1071,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 508,
              "src": "1053:7:10"
            },
            "id": 1072,
            "nodeType": "InheritanceSpecifier",
            "src": "1053:7:10"
          },
          {
            "baseName": {
              "id": 1073,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 735,
              "src": "1062:6:10"
            },
            "id": 1074,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:6:10"
          },
          {
            "baseName": {
              "id": 1075,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 115,
              "src": "1070:7:10"
            },
            "id": 1076,
            "nodeType": "InheritanceSpecifier",
            "src": "1070:7:10"
          },
          {
            "baseName": {
              "id": 1077,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 191,
              "src": "1079:15:10"
            },
            "id": 1078,
            "nodeType": "InheritanceSpecifier",
            "src": "1079:15:10"
          },
          {
            "baseName": {
              "id": 1079,
              "name": "IERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 164,
              "src": "1096:17:10"
            },
            "id": 1080,
            "nodeType": "InheritanceSpecifier",
            "src": "1096:17:10"
>>>>>>> Till-Pascal
          }
        ],
        "canonicalName": "ERC721A",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
<<<<<<< HEAD
          "id": 758,
          "nodeType": "StructuredDocumentation",
          "src": "587:445:9",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Does not support burning tokens to address(0).\n Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply"
        },
        "fullyImplemented": true,
        "id": 1818,
        "linearizedBaseContracts": [
          1818,
=======
          "id": 1070,
          "nodeType": "StructuredDocumentation",
          "src": "587:445:10",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Does not support burning tokens to address(0).\n Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply"
        },
        "fullyImplemented": true,
        "id": 2130,
        "linearizedBaseContracts": [
          2130,
>>>>>>> Till-Pascal
          164,
          191,
          115,
          735,
          747,
          508
        ],
        "name": "ERC721A",
<<<<<<< HEAD
        "nameLocation": "1042:7:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 771,
            "libraryName": {
              "id": 769,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 486,
              "src": "1126:7:9"
            },
            "nodeType": "UsingForDirective",
            "src": "1120:26:9",
            "typeName": {
              "id": 770,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1138:7:9",
=======
        "nameLocation": "1042:7:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1083,
            "libraryName": {
              "id": 1081,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 486,
              "src": "1126:7:10"
            },
            "nodeType": "UsingForDirective",
            "src": "1120:26:10",
            "typeName": {
              "id": 1082,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1138:7:10",
>>>>>>> Till-Pascal
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
<<<<<<< HEAD
            "id": 774,
            "libraryName": {
              "id": 772,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 711,
              "src": "1157:7:9"
            },
            "nodeType": "UsingForDirective",
            "src": "1151:26:9",
            "typeName": {
              "id": 773,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1169:7:9",
=======
            "id": 1086,
            "libraryName": {
              "id": 1084,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 711,
              "src": "1157:7:10"
            },
            "nodeType": "UsingForDirective",
            "src": "1151:26:10",
            "typeName": {
              "id": 1085,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1169:7:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "ERC721A.TokenOwnership",
<<<<<<< HEAD
            "id": 779,
            "members": [
              {
                "constant": false,
                "id": 776,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1223:4:9",
                "nodeType": "VariableDeclaration",
                "scope": 779,
                "src": "1215:12:9",
=======
            "id": 1091,
            "members": [
              {
                "constant": false,
                "id": 1088,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1223:4:10",
                "nodeType": "VariableDeclaration",
                "scope": 1091,
                "src": "1215:12:10",
>>>>>>> Till-Pascal
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 775,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1215:7:9",
=======
                  "id": 1087,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1215:7:10",
>>>>>>> Till-Pascal
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 778,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1244:14:9",
                "nodeType": "VariableDeclaration",
                "scope": 779,
                "src": "1237:21:9",
=======
                "id": 1090,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1244:14:10",
                "nodeType": "VariableDeclaration",
                "scope": 1091,
                "src": "1237:21:10",
>>>>>>> Till-Pascal
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 777,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:6:9",
=======
                  "id": 1089,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:6:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenOwnership",
<<<<<<< HEAD
            "nameLocation": "1190:14:9",
            "nodeType": "StructDefinition",
            "scope": 1818,
            "src": "1183:82:9",
=======
            "nameLocation": "1190:14:10",
            "nodeType": "StructDefinition",
            "scope": 2130,
            "src": "1183:82:10",
>>>>>>> Till-Pascal
            "visibility": "public"
          },
          {
            "canonicalName": "ERC721A.AddressData",
<<<<<<< HEAD
            "id": 784,
            "members": [
              {
                "constant": false,
                "id": 781,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "1308:7:9",
                "nodeType": "VariableDeclaration",
                "scope": 784,
                "src": "1300:15:9",
=======
            "id": 1096,
            "members": [
              {
                "constant": false,
                "id": 1093,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "1308:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 1096,
                "src": "1300:15:10",
>>>>>>> Till-Pascal
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 780,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1300:7:9",
=======
                  "id": 1092,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1300:7:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 783,
                "mutability": "mutable",
                "name": "numberMinted",
                "nameLocation": "1333:12:9",
                "nodeType": "VariableDeclaration",
                "scope": 784,
                "src": "1325:20:9",
=======
                "id": 1095,
                "mutability": "mutable",
                "name": "numberMinted",
                "nameLocation": "1333:12:10",
                "nodeType": "VariableDeclaration",
                "scope": 1096,
                "src": "1325:20:10",
>>>>>>> Till-Pascal
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 782,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1325:7:9",
=======
                  "id": 1094,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1325:7:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AddressData",
<<<<<<< HEAD
            "nameLocation": "1278:11:9",
            "nodeType": "StructDefinition",
            "scope": 1818,
            "src": "1271:81:9",
=======
            "nameLocation": "1278:11:10",
            "nodeType": "StructDefinition",
            "scope": 2130,
            "src": "1271:81:10",
>>>>>>> Till-Pascal
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 786,
            "mutability": "mutable",
            "name": "currentIndex",
            "nameLocation": "1375:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1358:29:9",
=======
            "id": 1098,
            "mutability": "mutable",
            "name": "currentIndex",
            "nameLocation": "1375:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1358:29:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 785,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1358:7:9",
=======
              "id": 1097,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1358:7:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 788,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1427:5:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1412:20:9",
=======
            "id": 1100,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1427:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1412:20:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 787,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1412:6:9",
=======
              "id": 1099,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1412:6:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 790,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1474:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1459:22:9",
=======
            "id": 1102,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1474:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1459:22:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 789,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1459:6:9",
=======
              "id": 1101,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1459:6:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 795,
            "mutability": "mutable",
            "name": "_ownerships",
            "nameLocation": "1703:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1659:55:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "typeName": {
              "id": 794,
              "keyType": {
                "id": 791,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1667:7:9",
=======
            "id": 1107,
            "mutability": "mutable",
            "name": "_ownerships",
            "nameLocation": "1703:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1659:55:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "typeName": {
              "id": 1106,
              "keyType": {
                "id": 1103,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1667:7:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1659:34:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
              },
              "valueType": {
                "id": 793,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 792,
                  "name": "TokenOwnership",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 779,
                  "src": "1678:14:9"
                },
                "referencedDeclaration": 779,
                "src": "1678:14:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
              "src": "1659:34:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
              },
              "valueType": {
                "id": 1105,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1104,
                  "name": "TokenOwnership",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1091,
                  "src": "1678:14:10"
                },
                "referencedDeclaration": 1091,
                "src": "1678:14:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                  "typeString": "struct ERC721A.TokenOwnership"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 800,
            "mutability": "mutable",
            "name": "_addressData",
            "nameLocation": "1806:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1766:52:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
              "typeString": "mapping(address => struct ERC721A.AddressData)"
            },
            "typeName": {
              "id": 799,
              "keyType": {
                "id": 796,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1774:7:9",
=======
            "id": 1112,
            "mutability": "mutable",
            "name": "_addressData",
            "nameLocation": "1806:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1766:52:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
              "typeString": "mapping(address => struct ERC721A.AddressData)"
            },
            "typeName": {
              "id": 1111,
              "keyType": {
                "id": 1108,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1774:7:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1766:31:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                "typeString": "mapping(address => struct ERC721A.AddressData)"
              },
              "valueType": {
                "id": 798,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 797,
                  "name": "AddressData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 784,
                  "src": "1785:11:9"
                },
                "referencedDeclaration": 784,
                "src": "1785:11:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressData_$784_storage_ptr",
=======
              "src": "1766:31:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                "typeString": "mapping(address => struct ERC721A.AddressData)"
              },
              "valueType": {
                "id": 1110,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1109,
                  "name": "AddressData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1096,
                  "src": "1785:11:10"
                },
                "referencedDeclaration": 1096,
                "src": "1785:11:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressData_$1096_storage_ptr",
>>>>>>> Till-Pascal
                  "typeString": "struct ERC721A.AddressData"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 804,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1910:15:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1874:51:9",
=======
            "id": 1116,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1910:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1874:51:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 803,
              "keyType": {
                "id": 801,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1882:7:9",
=======
              "id": 1115,
              "keyType": {
                "id": 1113,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1882:7:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1874:27:9",
=======
              "src": "1874:27:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 802,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1893:7:9",
=======
                "id": 1114,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1893:7:10",
>>>>>>> Till-Pascal
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 810,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "2033:18:9",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "1980:71:9",
=======
            "id": 1122,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "2033:18:10",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1980:71:10",
>>>>>>> Till-Pascal
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 809,
              "keyType": {
                "id": 805,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1988:7:9",
=======
              "id": 1121,
              "keyType": {
                "id": 1117,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1988:7:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1980:44:9",
=======
              "src": "1980:44:10",
>>>>>>> Till-Pascal
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 808,
                "keyType": {
                  "id": 806,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:9",
=======
                "id": 1120,
                "keyType": {
                  "id": 1118,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
<<<<<<< HEAD
                "src": "1999:24:9",
=======
                "src": "1999:24:10",
>>>>>>> Till-Pascal
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
<<<<<<< HEAD
                  "id": 807,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2018:4:9",
=======
                  "id": 1119,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2018:4:10",
>>>>>>> Till-Pascal
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 825,
              "nodeType": "Block",
              "src": "2114:57:9",
              "statements": [
                {
                  "expression": {
                    "id": 819,
=======
              "id": 1137,
              "nodeType": "Block",
              "src": "2114:57:10",
              "statements": [
                {
                  "expression": {
                    "id": 1131,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 817,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "2124:5:9",
=======
                      "id": 1129,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "2124:5:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 818,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "2132:5:9",
=======
                      "id": 1130,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "2132:5:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "2124:13:9",
=======
                    "src": "2124:13:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:13:9"
                },
                {
                  "expression": {
                    "id": 823,
=======
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:13:10"
                },
                {
                  "expression": {
                    "id": 1135,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 821,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "2147:7:9",
=======
                      "id": 1133,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "2147:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 822,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "2157:7:9",
=======
                      "id": 1134,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "2157:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "2147:17:9",
=======
                    "src": "2147:17:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:17:9"
                }
              ]
            },
            "id": 826,
=======
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:17:10"
                }
              ]
            },
            "id": 1138,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 815,
=======
              "id": 1127,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 812,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2084:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "2070:19:9",
=======
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2084:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "2070:19:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 811,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:6:9",
=======
                    "id": 1123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 814,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2105:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "2091:21:9",
=======
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2105:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "2091:21:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 813,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:6:9",
=======
                    "id": 1125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2069:44:9"
            },
            "returnParameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2114:0:9"
            },
            "scope": 1818,
            "src": "2058:113:9",
=======
              "src": "2069:44:10"
            },
            "returnParameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2114:0:10"
            },
            "scope": 2130,
            "src": "2058:113:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              145
            ],
            "body": {
<<<<<<< HEAD
              "id": 835,
              "nodeType": "Block",
              "src": "2304:36:9",
              "statements": [
                {
                  "expression": {
                    "id": 833,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 786,
                    "src": "2321:12:9",
=======
              "id": 1147,
              "nodeType": "Block",
              "src": "2304:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 1145,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1098,
                    "src": "2321:12:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 832,
                  "id": 834,
                  "nodeType": "Return",
                  "src": "2314:19:9"
=======
                  "functionReturnParameters": 1144,
                  "id": 1146,
                  "nodeType": "Return",
                  "src": "2314:19:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 827,
              "nodeType": "StructuredDocumentation",
              "src": "2177:60:9",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 836,
=======
              "id": 1139,
              "nodeType": "StructuredDocumentation",
              "src": "2177:60:10",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 1148,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
<<<<<<< HEAD
            "nameLocation": "2251:11:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 829,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2277:8:9"
            },
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:2:9"
            },
            "returnParameters": {
              "id": 832,
=======
            "nameLocation": "2251:11:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1141,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2277:8:10"
            },
            "parameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:2:10"
            },
            "returnParameters": {
              "id": 1144,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 831,
=======
                  "id": 1143,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 836,
                  "src": "2295:7:9",
=======
                  "scope": 1148,
                  "src": "2295:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:9",
=======
                    "id": 1142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2294:9:9"
            },
            "scope": 1818,
            "src": "2242:98:9",
=======
              "src": "2294:9:10"
            },
            "scope": 2130,
            "src": "2242:98:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              163
            ],
            "body": {
<<<<<<< HEAD
              "id": 855,
              "nodeType": "Block",
              "src": "2488:108:9",
=======
              "id": 1167,
              "nodeType": "Block",
              "src": "2488:108:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 849,
=======
                        "id": 1161,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 846,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "2506:5:9",
=======
                          "id": 1158,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "2506:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
<<<<<<< HEAD
                            "id": 847,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 836,
                            "src": "2514:11:9",
=======
                            "id": 1159,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "2514:11:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 848,
=======
                          "id": 1160,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2514:13:9",
=======
                          "src": "2514:13:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "2506:21:9",
=======
                        "src": "2506:21:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
<<<<<<< HEAD
                        "id": 850,
=======
                        "id": 1162,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2529:37:9",
=======
                        "src": "2529:37:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
                          "typeString": "literal_string \"ERC721A: global index out of bounds\""
                        },
                        "value": "ERC721A: global index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
                          "typeString": "literal_string \"ERC721A: global index out of bounds\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 845,
=======
                      "id": 1157,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2498:7:9",
=======
                      "src": "2498:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 851,
=======
                    "id": 1163,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2498:69:9",
=======
                    "src": "2498:69:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:69:9"
                },
                {
                  "expression": {
                    "id": 853,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 839,
                    "src": "2584:5:9",
=======
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:69:10"
                },
                {
                  "expression": {
                    "id": 1165,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1151,
                    "src": "2584:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 844,
                  "id": 854,
                  "nodeType": "Return",
                  "src": "2577:12:9"
=======
                  "functionReturnParameters": 1156,
                  "id": 1166,
                  "nodeType": "Return",
                  "src": "2577:12:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 837,
              "nodeType": "StructuredDocumentation",
              "src": "2346:61:9",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 856,
=======
              "id": 1149,
              "nodeType": "StructuredDocumentation",
              "src": "2346:61:10",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 1168,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
<<<<<<< HEAD
            "nameLocation": "2421:12:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 841,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2461:8:9"
            },
            "parameters": {
              "id": 840,
=======
            "nameLocation": "2421:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2461:8:10"
            },
            "parameters": {
              "id": 1152,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 839,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2442:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "2434:13:9",
=======
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2442:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "2434:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:9",
=======
                    "id": 1150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2433:15:9"
            },
            "returnParameters": {
              "id": 844,
=======
              "src": "2433:15:10"
            },
            "returnParameters": {
              "id": 1156,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 843,
=======
                  "id": 1155,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 856,
                  "src": "2479:7:9",
=======
                  "scope": 1168,
                  "src": "2479:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:7:9",
=======
                    "id": 1154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2478:9:9"
            },
            "scope": 1818,
            "src": "2412:184:9",
=======
              "src": "2478:9:10"
            },
            "scope": 2130,
            "src": "2412:184:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              155
            ],
            "body": {
<<<<<<< HEAD
              "id": 939,
              "nodeType": "Block",
              "src": "2987:886:9",
=======
              "id": 1251,
              "nodeType": "Block",
              "src": "2987:886:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 872,
=======
                        "id": 1184,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 868,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 861,
                          "src": "3005:5:9",
=======
                          "id": 1180,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "3005:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 870,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "3023:5:9",
=======
                              "id": 1182,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "3023:5:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
<<<<<<< HEAD
                            "id": 869,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "3013:9:9",
=======
                            "id": 1181,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "3013:9:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 871,
=======
                          "id": 1183,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3013:16:9",
=======
                          "src": "3013:16:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "3005:24:9",
=======
                        "src": "3005:24:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206f776e657220696e646578206f7574206f6620626f756e6473",
<<<<<<< HEAD
                        "id": 873,
=======
                        "id": 1185,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3031:36:9",
=======
                        "src": "3031:36:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
                          "typeString": "literal_string \"ERC721A: owner index out of bounds\""
                        },
                        "value": "ERC721A: owner index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
                          "typeString": "literal_string \"ERC721A: owner index out of bounds\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 867,
=======
                      "id": 1179,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2997:7:9",
=======
                      "src": "2997:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 874,
=======
                    "id": 1186,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2997:71:9",
=======
                    "src": "2997:71:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "2997:71:9"
                },
                {
                  "assignments": [
                    877
=======
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "2997:71:10"
                },
                {
                  "assignments": [
                    1189
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 877,
                      "mutability": "mutable",
                      "name": "numMintedSoFar",
                      "nameLocation": "3086:14:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "3078:22:9",
=======
                      "id": 1189,
                      "mutability": "mutable",
                      "name": "numMintedSoFar",
                      "nameLocation": "3086:14:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3078:22:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3078:7:9",
=======
                        "id": 1188,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3078:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 880,
=======
                  "id": 1192,
>>>>>>> Till-Pascal
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 878,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 836,
                      "src": "3103:11:9",
=======
                      "id": 1190,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "3103:11:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 879,
=======
                    "id": 1191,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3103:13:9",
=======
                    "src": "3103:13:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3078:38:9"
                },
                {
                  "assignments": [
                    882
=======
                  "src": "3078:38:10"
                },
                {
                  "assignments": [
                    1194
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 882,
                      "mutability": "mutable",
                      "name": "tokenIdsIdx",
                      "nameLocation": "3134:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "3126:19:9",
=======
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "tokenIdsIdx",
                      "nameLocation": "3134:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3126:19:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 881,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3126:7:9",
=======
                        "id": 1193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3126:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 883,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3126:19:9"
                },
                {
                  "assignments": [
                    885
=======
                  "id": 1195,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3126:19:10"
                },
                {
                  "assignments": [
                    1197
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 885,
                      "mutability": "mutable",
                      "name": "currOwnershipAddr",
                      "nameLocation": "3163:17:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "3155:25:9",
=======
                      "id": 1197,
                      "mutability": "mutable",
                      "name": "currOwnershipAddr",
                      "nameLocation": "3163:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3155:25:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 884,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3155:7:9",
=======
                        "id": 1196,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3155:7:10",
>>>>>>> Till-Pascal
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 886,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3155:25:9"
                },
                {
                  "id": 934,
                  "nodeType": "UncheckedBlock",
                  "src": "3311:489:9",
                  "statements": [
                    {
                      "body": {
                        "id": 932,
                        "nodeType": "Block",
                        "src": "3376:414:9",
                        "statements": [
                          {
                            "assignments": [
                              898
=======
                  "id": 1198,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3155:25:10"
                },
                {
                  "id": 1246,
                  "nodeType": "UncheckedBlock",
                  "src": "3311:489:10",
                  "statements": [
                    {
                      "body": {
                        "id": 1244,
                        "nodeType": "Block",
                        "src": "3376:414:10",
                        "statements": [
                          {
                            "assignments": [
                              1210
>>>>>>> Till-Pascal
                            ],
                            "declarations": [
                              {
                                "constant": false,
<<<<<<< HEAD
                                "id": 898,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "3416:9:9",
                                "nodeType": "VariableDeclaration",
                                "scope": 932,
                                "src": "3394:31:9",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 897,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 896,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 779,
                                    "src": "3394:14:9"
                                  },
                                  "referencedDeclaration": 779,
                                  "src": "3394:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
                                "id": 1210,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "3416:9:10",
                                "nodeType": "VariableDeclaration",
                                "scope": 1244,
                                "src": "3394:31:10",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 1209,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1208,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1091,
                                    "src": "3394:14:10"
                                  },
                                  "referencedDeclaration": 1091,
                                  "src": "3394:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                                    "typeString": "struct ERC721A.TokenOwnership"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
<<<<<<< HEAD
                            "id": 902,
                            "initialValue": {
                              "baseExpression": {
                                "id": 899,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "3428:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 901,
                              "indexExpression": {
                                "id": 900,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 888,
                                "src": "3440:1:9",
=======
                            "id": 1214,
                            "initialValue": {
                              "baseExpression": {
                                "id": 1211,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "3428:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 1213,
                              "indexExpression": {
                                "id": 1212,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "3440:1:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "3428:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
=======
                              "src": "3428:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
>>>>>>> Till-Pascal
                                "typeString": "struct ERC721A.TokenOwnership storage ref"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3394:48:9"
=======
                            "src": "3394:48:10"
>>>>>>> Till-Pascal
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
<<<<<<< HEAD
                              "id": 909,
=======
                              "id": 1221,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
<<<<<<< HEAD
                                  "id": 903,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 898,
                                  "src": "3464:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 904,
=======
                                  "id": 1215,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1210,
                                  "src": "3464:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 1216,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 776,
                                "src": "3464:14:9",
=======
                                "referencedDeclaration": 1088,
                                "src": "3464:14:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
<<<<<<< HEAD
                                    "id": 907,
=======
                                    "id": 1219,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "3490:1:9",
=======
                                    "src": "3490:1:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 906,
=======
                                  "id": 1218,
>>>>>>> Till-Pascal
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "3482:7:9",
=======
                                  "src": "3482:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 905,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3482:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 908,
=======
                                    "id": 1217,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3482:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1220,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "3482:10:9",
=======
                                "src": "3482:10:10",
>>>>>>> Till-Pascal
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
<<<<<<< HEAD
                              "src": "3464:28:9",
=======
                              "src": "3464:28:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 916,
                            "nodeType": "IfStatement",
                            "src": "3460:109:9",
                            "trueBody": {
                              "id": 915,
                              "nodeType": "Block",
                              "src": "3494:75:9",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 913,
=======
                            "id": 1228,
                            "nodeType": "IfStatement",
                            "src": "3460:109:10",
                            "trueBody": {
                              "id": 1227,
                              "nodeType": "Block",
                              "src": "3494:75:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1225,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
<<<<<<< HEAD
                                      "id": 910,
                                      "name": "currOwnershipAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 885,
                                      "src": "3516:17:9",
=======
                                      "id": 1222,
                                      "name": "currOwnershipAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1197,
                                      "src": "3516:17:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 911,
                                        "name": "ownership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 898,
                                        "src": "3536:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 912,
=======
                                        "id": 1223,
                                        "name": "ownership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1210,
                                        "src": "3536:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1224,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 776,
                                      "src": "3536:14:9",
=======
                                      "referencedDeclaration": 1088,
                                      "src": "3536:14:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "3516:34:9",
=======
                                    "src": "3516:34:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 914,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3516:34:9"
=======
                                  "id": 1226,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3516:34:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
<<<<<<< HEAD
                              "id": 919,
=======
                              "id": 1231,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
<<<<<<< HEAD
                                "id": 917,
                                "name": "currOwnershipAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 885,
                                "src": "3590:17:9",
=======
                                "id": 1229,
                                "name": "currOwnershipAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1197,
                                "src": "3590:17:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
<<<<<<< HEAD
                                "id": 918,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 859,
                                "src": "3611:5:9",
=======
                                "id": 1230,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1171,
                                "src": "3611:5:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
<<<<<<< HEAD
                              "src": "3590:26:9",
=======
                              "src": "3590:26:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 931,
                            "nodeType": "IfStatement",
                            "src": "3586:190:9",
                            "trueBody": {
                              "id": 930,
                              "nodeType": "Block",
                              "src": "3618:158:9",
=======
                            "id": 1243,
                            "nodeType": "IfStatement",
                            "src": "3586:190:10",
                            "trueBody": {
                              "id": 1242,
                              "nodeType": "Block",
                              "src": "3618:158:10",
>>>>>>> Till-Pascal
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 922,
=======
                                    "id": 1234,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
<<<<<<< HEAD
                                      "id": 920,
                                      "name": "tokenIdsIdx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 882,
                                      "src": "3644:11:9",
=======
                                      "id": 1232,
                                      "name": "tokenIdsIdx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "3644:11:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
<<<<<<< HEAD
                                      "id": 921,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 861,
                                      "src": "3659:5:9",
=======
                                      "id": 1233,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1173,
                                      "src": "3659:5:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "3644:20:9",
=======
                                    "src": "3644:20:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 926,
                                  "nodeType": "IfStatement",
                                  "src": "3640:83:9",
                                  "trueBody": {
                                    "id": 925,
                                    "nodeType": "Block",
                                    "src": "3666:57:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 923,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 888,
                                          "src": "3699:1:9",
=======
                                  "id": 1238,
                                  "nodeType": "IfStatement",
                                  "src": "3640:83:10",
                                  "trueBody": {
                                    "id": 1237,
                                    "nodeType": "Block",
                                    "src": "3666:57:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 1235,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1200,
                                          "src": "3699:1:10",
>>>>>>> Till-Pascal
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
<<<<<<< HEAD
                                        "functionReturnParameters": 866,
                                        "id": 924,
                                        "nodeType": "Return",
                                        "src": "3692:8:9"
=======
                                        "functionReturnParameters": 1178,
                                        "id": 1236,
                                        "nodeType": "Return",
                                        "src": "3692:8:10"
>>>>>>> Till-Pascal
                                      }
                                    ]
                                  }
                                },
                                {
                                  "expression": {
<<<<<<< HEAD
                                    "id": 928,
=======
                                    "id": 1240,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
<<<<<<< HEAD
                                    "src": "3744:13:9",
                                    "subExpression": {
                                      "id": 927,
                                      "name": "tokenIdsIdx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 882,
                                      "src": "3744:11:9",
=======
                                    "src": "3744:13:10",
                                    "subExpression": {
                                      "id": 1239,
                                      "name": "tokenIdsIdx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "3744:11:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 929,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3744:13:9"
=======
                                  "id": 1241,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3744:13:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 892,
=======
                        "id": 1204,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 890,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "3351:1:9",
=======
                          "id": 1202,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "3351:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 891,
                          "name": "numMintedSoFar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 877,
                          "src": "3355:14:9",
=======
                          "id": 1203,
                          "name": "numMintedSoFar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "3355:14:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "3351:18:9",
=======
                        "src": "3351:18:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "id": 933,
                      "initializationExpression": {
                        "assignments": [
                          888
=======
                      "id": 1245,
                      "initializationExpression": {
                        "assignments": [
                          1200
>>>>>>> Till-Pascal
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 888,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "3348:1:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 933,
                            "src": "3340:9:9",
=======
                            "id": 1200,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "3348:1:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1245,
                            "src": "3340:9:10",
>>>>>>> Till-Pascal
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 887,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3340:7:9",
=======
                              "id": 1199,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3340:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 889,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3340:9:9"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 894,
=======
                        "id": 1201,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3340:9:10"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1206,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
<<<<<<< HEAD
                          "src": "3371:3:9",
                          "subExpression": {
                            "id": 893,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "3371:1:9",
=======
                          "src": "3371:3:10",
                          "subExpression": {
                            "id": 1205,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "3371:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 895,
                        "nodeType": "ExpressionStatement",
                        "src": "3371:3:9"
                      },
                      "nodeType": "ForStatement",
                      "src": "3335:455:9"
=======
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "3371:3:10"
                      },
                      "nodeType": "ForStatement",
                      "src": "3335:455:10"
>>>>>>> Till-Pascal
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243373231413a20756e61626c6520746f2067657420746f6b656e206f66206f776e657220627920696e646578",
<<<<<<< HEAD
                        "id": 936,
=======
                        "id": 1248,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3817:48:9",
=======
                        "src": "3817:48:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
                          "typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
                        },
                        "value": "ERC721A: unable to get token of owner by index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
                          "typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 935,
=======
                      "id": 1247,
>>>>>>> Till-Pascal
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
<<<<<<< HEAD
                      "src": "3810:6:9",
=======
                      "src": "3810:6:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 937,
=======
                    "id": 1249,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3810:56:9",
=======
                    "src": "3810:56:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:56:9"
=======
                  "id": 1250,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:56:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 857,
              "nodeType": "StructuredDocumentation",
              "src": "2602:282:9",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first.\n It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
            },
            "functionSelector": "2f745c59",
            "id": 940,
=======
              "id": 1169,
              "nodeType": "StructuredDocumentation",
              "src": "2602:282:10",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first.\n It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
            },
            "functionSelector": "2f745c59",
            "id": 1252,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
<<<<<<< HEAD
            "nameLocation": "2898:19:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 863,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2960:8:9"
            },
            "parameters": {
              "id": 862,
=======
            "nameLocation": "2898:19:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1175,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2960:8:10"
            },
            "parameters": {
              "id": 1174,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 859,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2926:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "2918:13:9",
=======
                  "id": 1171,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2926:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "2918:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:9",
=======
                    "id": 1170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 861,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2941:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "2933:13:9",
=======
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2941:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "2933:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2933:7:9",
=======
                    "id": 1172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2933:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2917:30:9"
            },
            "returnParameters": {
              "id": 866,
=======
              "src": "2917:30:10"
            },
            "returnParameters": {
              "id": 1178,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 865,
=======
                  "id": 1177,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 940,
                  "src": "2978:7:9",
=======
                  "scope": 1252,
                  "src": "2978:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:7:9",
=======
                    "id": 1176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2977:9:9"
            },
            "scope": 1818,
            "src": "2889:984:9",
=======
              "src": "2977:9:10"
            },
            "scope": 2130,
            "src": "2889:984:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              734,
              746
            ],
            "body": {
<<<<<<< HEAD
              "id": 977,
              "nodeType": "Block",
              "src": "4048:258:9",
=======
              "id": 1289,
              "nodeType": "Block",
              "src": "4048:258:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
<<<<<<< HEAD
                    "id": 975,
=======
                    "id": 1287,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
<<<<<<< HEAD
                      "id": 970,
=======
                      "id": 1282,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 963,
=======
                        "id": 1275,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
<<<<<<< HEAD
                          "id": 956,
=======
                          "id": 1268,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
<<<<<<< HEAD
                            "id": 951,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "4077:11:9",
=======
                            "id": 1263,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "4077:11:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 953,
=======
                                  "id": 1265,
>>>>>>> Till-Pascal
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
<<<<<<< HEAD
                                  "src": "4097:7:9",
=======
                                  "src": "4097:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 952,
=======
                                "id": 1264,
>>>>>>> Till-Pascal
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
<<<<<<< HEAD
                                "src": "4092:4:9",
=======
                                "src": "4092:4:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
<<<<<<< HEAD
                              "id": 954,
=======
                              "id": 1266,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "4092:13:9",
=======
                              "src": "4092:13:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
                                "typeString": "type(contract IERC721)"
                              }
                            },
<<<<<<< HEAD
                            "id": 955,
=======
                            "id": 1267,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "4092:25:9",
=======
                            "src": "4092:25:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
<<<<<<< HEAD
                          "src": "4077:40:9",
=======
                          "src": "4077:40:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
<<<<<<< HEAD
                          "id": 962,
=======
                          "id": 1274,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
<<<<<<< HEAD
                            "id": 957,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "4133:11:9",
=======
                            "id": 1269,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "4133:11:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 959,
=======
                                  "id": 1271,
>>>>>>> Till-Pascal
                                  "name": "IERC721Metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
<<<<<<< HEAD
                                  "src": "4153:15:9",
=======
                                  "src": "4153:15:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$191_$",
                                    "typeString": "type(contract IERC721Metadata)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$191_$",
                                    "typeString": "type(contract IERC721Metadata)"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 958,
=======
                                "id": 1270,
>>>>>>> Till-Pascal
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
<<<<<<< HEAD
                                "src": "4148:4:9",
=======
                                "src": "4148:4:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
<<<<<<< HEAD
                              "id": 960,
=======
                              "id": 1272,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "4148:21:9",
=======
                              "src": "4148:21:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$191",
                                "typeString": "type(contract IERC721Metadata)"
                              }
                            },
<<<<<<< HEAD
                            "id": 961,
=======
                            "id": 1273,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "4148:33:9",
=======
                            "src": "4148:33:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
<<<<<<< HEAD
                          "src": "4133:48:9",
=======
                          "src": "4133:48:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "4077:104:9",
=======
                        "src": "4077:104:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
<<<<<<< HEAD
                        "id": 969,
=======
                        "id": 1281,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 964,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "4197:11:9",
=======
                          "id": 1276,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "4197:11:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 966,
=======
                                "id": 1278,
>>>>>>> Till-Pascal
                                "name": "IERC721Enumerable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
<<<<<<< HEAD
                                "src": "4217:17:9",
=======
                                "src": "4217:17:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$164_$",
                                  "typeString": "type(contract IERC721Enumerable)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$164_$",
                                  "typeString": "type(contract IERC721Enumerable)"
                                }
                              ],
<<<<<<< HEAD
                              "id": 965,
=======
                              "id": 1277,
>>>>>>> Till-Pascal
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
<<<<<<< HEAD
                              "src": "4212:4:9",
=======
                              "src": "4212:4:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
<<<<<<< HEAD
                            "id": 967,
=======
                            "id": 1279,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4212:23:9",
=======
                            "src": "4212:23:10",
>>>>>>> Till-Pascal
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$164",
                              "typeString": "type(contract IERC721Enumerable)"
                            }
                          },
<<<<<<< HEAD
                          "id": 968,
=======
                          "id": 1280,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "4212:35:9",
=======
                          "src": "4212:35:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
<<<<<<< HEAD
                        "src": "4197:50:9",
=======
                        "src": "4197:50:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "src": "4077:170:9",
=======
                      "src": "4077:170:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 973,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "4287:11:9",
=======
                          "id": 1285,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "4287:11:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
<<<<<<< HEAD
                          "id": 971,
=======
                          "id": 1283,
>>>>>>> Till-Pascal
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
<<<<<<< HEAD
                          "src": "4263:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721A_$1818_$",
                            "typeString": "type(contract super ERC721A)"
                          }
                        },
                        "id": 972,
=======
                          "src": "4263:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721A_$2130_$",
                            "typeString": "type(contract super ERC721A)"
                          }
                        },
                        "id": 1284,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 734,
<<<<<<< HEAD
                        "src": "4263:23:9",
=======
                        "src": "4263:23:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
<<<<<<< HEAD
                      "id": 974,
=======
                      "id": 1286,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "4263:36:9",
=======
                      "src": "4263:36:10",
>>>>>>> Till-Pascal
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "4077:222:9",
=======
                    "src": "4077:222:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 950,
                  "id": 976,
                  "nodeType": "Return",
                  "src": "4058:241:9"
=======
                  "functionReturnParameters": 1262,
                  "id": 1288,
                  "nodeType": "Return",
                  "src": "4058:241:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 941,
              "nodeType": "StructuredDocumentation",
              "src": "3879:56:9",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 978,
=======
              "id": 1253,
              "nodeType": "StructuredDocumentation",
              "src": "3879:56:10",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1290,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
<<<<<<< HEAD
            "nameLocation": "3949:17:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 947,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 945,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 735,
                  "src": "4016:6:9"
                },
                {
                  "id": 946,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 747,
                  "src": "4024:7:9"
                }
              ],
              "src": "4007:25:9"
            },
            "parameters": {
              "id": 944,
=======
            "nameLocation": "3949:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1259,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1257,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 735,
                  "src": "4016:6:10"
                },
                {
                  "id": 1258,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 747,
                  "src": "4024:7:10"
                }
              ],
              "src": "4007:25:10"
            },
            "parameters": {
              "id": 1256,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 943,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3974:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "3967:18:9",
=======
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3974:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1290,
                  "src": "3967:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 942,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:6:9",
=======
                    "id": 1254,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3966:20:9"
            },
            "returnParameters": {
              "id": 950,
=======
              "src": "3966:20:10"
            },
            "returnParameters": {
              "id": 1262,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 949,
=======
                  "id": 1261,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 978,
                  "src": "4042:4:9",
=======
                  "scope": 1290,
                  "src": "4042:4:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 948,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4042:4:9",
=======
                    "id": 1260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4042:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4041:6:9"
            },
            "scope": 1818,
            "src": "3940:366:9",
=======
              "src": "4041:6:10"
            },
            "scope": 2130,
            "src": "3940:366:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              40
            ],
            "body": {
<<<<<<< HEAD
              "id": 1005,
              "nodeType": "Block",
              "src": "4438:145:9",
=======
              "id": 1317,
              "nodeType": "Block",
              "src": "4438:145:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 993,
=======
                        "id": 1305,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 988,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "4456:5:9",
=======
                          "id": 1300,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "4456:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 991,
=======
                              "id": 1303,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "4473:1:9",
=======
                              "src": "4473:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 990,
=======
                            "id": 1302,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "4465:7:9",
=======
                            "src": "4465:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 989,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4465:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 992,
=======
                              "id": 1301,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4465:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1304,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "4465:10:9",
=======
                          "src": "4465:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "4456:19:9",
=======
                        "src": "4456:19:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 994,
=======
                        "id": 1306,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4477:45:9",
=======
                        "src": "4477:45:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
                          "typeString": "literal_string \"ERC721A: balance query for the zero address\""
                        },
                        "value": "ERC721A: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
                          "typeString": "literal_string \"ERC721A: balance query for the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 987,
=======
                      "id": 1299,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "4448:7:9",
=======
                      "src": "4448:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 995,
=======
                    "id": 1307,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4448:75:9",
=======
                    "src": "4448:75:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:75:9"
=======
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:75:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
<<<<<<< HEAD
                            "id": 999,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "4548:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 1001,
                          "indexExpression": {
                            "id": 1000,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "4561:5:9",
=======
                            "id": 1311,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "4548:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 1313,
                          "indexExpression": {
                            "id": 1312,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "4561:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "4548:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$784_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 1002,
=======
                          "src": "4548:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 1314,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 781,
                        "src": "4548:27:9",
=======
                        "referencedDeclaration": 1093,
                        "src": "4548:27:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
<<<<<<< HEAD
                      "id": 998,
=======
                      "id": 1310,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                      "src": "4540:7:9",
=======
                      "src": "4540:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 997,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4540:7:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1003,
=======
                        "id": 1309,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4540:7:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1315,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4540:36:9",
=======
                    "src": "4540:36:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 986,
                  "id": 1004,
                  "nodeType": "Return",
                  "src": "4533:43:9"
=======
                  "functionReturnParameters": 1298,
                  "id": 1316,
                  "nodeType": "Return",
                  "src": "4533:43:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 979,
              "nodeType": "StructuredDocumentation",
              "src": "4312:48:9",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1006,
=======
              "id": 1291,
              "nodeType": "StructuredDocumentation",
              "src": "4312:48:10",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1318,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
<<<<<<< HEAD
            "nameLocation": "4374:9:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 983,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4411:8:9"
            },
            "parameters": {
              "id": 982,
=======
            "nameLocation": "4374:9:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1295,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4411:8:10"
            },
            "parameters": {
              "id": 1294,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 981,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4392:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "4384:13:9",
=======
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4392:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "4384:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:7:9",
=======
                    "id": 1292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4383:15:9"
            },
            "returnParameters": {
              "id": 986,
=======
              "src": "4383:15:10"
            },
            "returnParameters": {
              "id": 1298,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 985,
=======
                  "id": 1297,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1006,
                  "src": "4429:7:9",
=======
                  "scope": 1318,
                  "src": "4429:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:9",
=======
                    "id": 1296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4428:9:9"
            },
            "scope": 1818,
            "src": "4365:218:9",
=======
              "src": "4428:9:10"
            },
            "scope": 2130,
            "src": "4365:218:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1031,
              "nodeType": "Block",
              "src": "4659:156:9",
=======
              "id": 1343,
              "nodeType": "Block",
              "src": "4659:156:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1019,
=======
                        "id": 1331,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1014,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "4677:5:9",
=======
                          "id": 1326,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "4677:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 1017,
=======
                              "id": 1329,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "4694:1:9",
=======
                              "src": "4694:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1016,
=======
                            "id": 1328,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "4686:7:9",
=======
                            "src": "4686:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1015,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4686:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1018,
=======
                              "id": 1327,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4686:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1330,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "4686:10:9",
=======
                          "src": "4686:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "4677:19:9",
=======
                        "src": "4677:19:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206e756d626572206d696e74656420717565727920666f7220746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 1020,
=======
                        "id": 1332,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4698:51:9",
=======
                        "src": "4698:51:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
                          "typeString": "literal_string \"ERC721A: number minted query for the zero address\""
                        },
                        "value": "ERC721A: number minted query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
                          "typeString": "literal_string \"ERC721A: number minted query for the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1013,
=======
                      "id": 1325,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "4669:7:9",
=======
                      "src": "4669:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1021,
=======
                    "id": 1333,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4669:81:9",
=======
                    "src": "4669:81:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "4669:81:9"
=======
                  "id": 1334,
                  "nodeType": "ExpressionStatement",
                  "src": "4669:81:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
<<<<<<< HEAD
                            "id": 1025,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "4775:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 1027,
                          "indexExpression": {
                            "id": 1026,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1008,
                            "src": "4788:5:9",
=======
                            "id": 1337,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "4775:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 1339,
                          "indexExpression": {
                            "id": 1338,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "4788:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "4775:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$784_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 1028,
=======
                          "src": "4775:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 1340,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberMinted",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 783,
                        "src": "4775:32:9",
=======
                        "referencedDeclaration": 1095,
                        "src": "4775:32:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1024,
=======
                      "id": 1336,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                      "src": "4767:7:9",
=======
                      "src": "4767:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1023,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4767:7:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1029,
=======
                        "id": 1335,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4767:7:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1341,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4767:41:9",
=======
                    "src": "4767:41:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1012,
                  "id": 1030,
                  "nodeType": "Return",
                  "src": "4760:48:9"
                }
              ]
            },
            "id": 1032,
=======
                  "functionReturnParameters": 1324,
                  "id": 1342,
                  "nodeType": "Return",
                  "src": "4760:48:10"
                }
              ]
            },
            "id": 1344,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_numberMinted",
<<<<<<< HEAD
            "nameLocation": "4598:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1009,
=======
            "nameLocation": "4598:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4620:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "4612:13:9",
=======
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4620:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1344,
                  "src": "4612:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:7:9",
=======
                    "id": 1319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4611:15:9"
            },
            "returnParameters": {
              "id": 1012,
=======
              "src": "4611:15:10"
            },
            "returnParameters": {
              "id": 1324,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1011,
=======
                  "id": 1323,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1032,
                  "src": "4650:7:9",
=======
                  "scope": 1344,
                  "src": "4650:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4650:7:9",
=======
                    "id": 1322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4650:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4649:9:9"
            },
            "scope": 1818,
            "src": "4589:226:9",
=======
              "src": "4649:9:10"
            },
            "scope": 2130,
            "src": "4589:226:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1083,
              "nodeType": "Block",
              "src": "5095:440:9",
=======
              "id": 1395,
              "nodeType": "Block",
              "src": "5095:440:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 1043,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "5121:7:9",
=======
                            "id": 1355,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "5121:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1042,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "5113:7:9",
=======
                          "id": 1354,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1679,
                          "src": "5113:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1044,
=======
                        "id": 1356,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "5113:16:9",
=======
                        "src": "5113:16:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
<<<<<<< HEAD
                        "id": 1045,
=======
                        "id": 1357,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5131:44:9",
=======
                        "src": "5131:44:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
                          "typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
                        },
                        "value": "ERC721A: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
                          "typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1041,
=======
                      "id": 1353,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5105:7:9",
=======
                      "src": "5105:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1046,
=======
                    "id": 1358,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5105:71:9",
=======
                    "src": "5105:71:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:71:9"
                },
                {
                  "id": 1078,
                  "nodeType": "UncheckedBlock",
                  "src": "5187:274:9",
                  "statements": [
                    {
                      "body": {
                        "id": 1076,
                        "nodeType": "Block",
                        "src": "5259:192:9",
                        "statements": [
                          {
                            "assignments": [
                              1060
=======
                  "id": 1359,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:71:10"
                },
                {
                  "id": 1390,
                  "nodeType": "UncheckedBlock",
                  "src": "5187:274:10",
                  "statements": [
                    {
                      "body": {
                        "id": 1388,
                        "nodeType": "Block",
                        "src": "5259:192:10",
                        "statements": [
                          {
                            "assignments": [
                              1372
>>>>>>> Till-Pascal
                            ],
                            "declarations": [
                              {
                                "constant": false,
<<<<<<< HEAD
                                "id": 1060,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "5299:9:9",
                                "nodeType": "VariableDeclaration",
                                "scope": 1076,
                                "src": "5277:31:9",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 1059,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1058,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 779,
                                    "src": "5277:14:9"
                                  },
                                  "referencedDeclaration": 779,
                                  "src": "5277:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
                                "id": 1372,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "5299:9:10",
                                "nodeType": "VariableDeclaration",
                                "scope": 1388,
                                "src": "5277:31:10",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 1371,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1370,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1091,
                                    "src": "5277:14:10"
                                  },
                                  "referencedDeclaration": 1091,
                                  "src": "5277:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                                    "typeString": "struct ERC721A.TokenOwnership"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1064,
                            "initialValue": {
                              "baseExpression": {
                                "id": 1061,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "5311:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 1063,
                              "indexExpression": {
                                "id": 1062,
                                "name": "curr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1049,
                                "src": "5323:4:9",
=======
                            "id": 1376,
                            "initialValue": {
                              "baseExpression": {
                                "id": 1373,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "5311:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 1375,
                              "indexExpression": {
                                "id": 1374,
                                "name": "curr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1361,
                                "src": "5323:4:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "5311:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
=======
                              "src": "5311:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
>>>>>>> Till-Pascal
                                "typeString": "struct ERC721A.TokenOwnership storage ref"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "5277:51:9"
=======
                            "src": "5277:51:10"
>>>>>>> Till-Pascal
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
<<<<<<< HEAD
                              "id": 1071,
=======
                              "id": 1383,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
<<<<<<< HEAD
                                  "id": 1065,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1060,
                                  "src": "5350:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 1066,
=======
                                  "id": 1377,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1372,
                                  "src": "5350:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 1378,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 776,
                                "src": "5350:14:9",
=======
                                "referencedDeclaration": 1088,
                                "src": "5350:14:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
<<<<<<< HEAD
                                    "id": 1069,
=======
                                    "id": 1381,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "5376:1:9",
=======
                                    "src": "5376:1:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 1068,
=======
                                  "id": 1380,
>>>>>>> Till-Pascal
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "5368:7:9",
=======
                                  "src": "5368:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 1067,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5368:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1070,
=======
                                    "id": 1379,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5368:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1382,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "5368:10:9",
=======
                                "src": "5368:10:10",
>>>>>>> Till-Pascal
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
<<<<<<< HEAD
                              "src": "5350:28:9",
=======
                              "src": "5350:28:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 1075,
                            "nodeType": "IfStatement",
                            "src": "5346:91:9",
                            "trueBody": {
                              "id": 1074,
                              "nodeType": "Block",
                              "src": "5380:57:9",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1072,
                                    "name": "ownership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1060,
                                    "src": "5409:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                      "typeString": "struct ERC721A.TokenOwnership memory"
                                    }
                                  },
                                  "functionReturnParameters": 1040,
                                  "id": 1073,
                                  "nodeType": "Return",
                                  "src": "5402:16:9"
=======
                            "id": 1387,
                            "nodeType": "IfStatement",
                            "src": "5346:91:10",
                            "trueBody": {
                              "id": 1386,
                              "nodeType": "Block",
                              "src": "5380:57:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1384,
                                    "name": "ownership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1372,
                                    "src": "5409:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                      "typeString": "struct ERC721A.TokenOwnership memory"
                                    }
                                  },
                                  "functionReturnParameters": 1352,
                                  "id": 1385,
                                  "nodeType": "Return",
                                  "src": "5402:16:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1054,
=======
                        "id": 1366,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1052,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "5240:4:9",
=======
                          "id": 1364,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "5240:4:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 1053,
=======
                          "id": 1365,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "5248:1:9",
=======
                          "src": "5248:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "5240:9:9",
=======
                        "src": "5240:9:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "id": 1077,
                      "initializationExpression": {
                        "assignments": [
                          1049
=======
                      "id": 1389,
                      "initializationExpression": {
                        "assignments": [
                          1361
>>>>>>> Till-Pascal
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 1049,
                            "mutability": "mutable",
                            "name": "curr",
                            "nameLocation": "5224:4:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1077,
                            "src": "5216:12:9",
=======
                            "id": 1361,
                            "mutability": "mutable",
                            "name": "curr",
                            "nameLocation": "5224:4:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1389,
                            "src": "5216:12:10",
>>>>>>> Till-Pascal
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1048,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5216:7:9",
=======
                              "id": 1360,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5216:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1051,
                        "initialValue": {
                          "id": 1050,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1035,
                          "src": "5231:7:9",
=======
                        "id": 1363,
                        "initialValue": {
                          "id": 1362,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1347,
                          "src": "5231:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "5216:22:9"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1056,
=======
                        "src": "5216:22:10"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1368,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
<<<<<<< HEAD
                          "src": "5251:6:9",
                          "subExpression": {
                            "id": 1055,
                            "name": "curr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "5251:4:9",
=======
                          "src": "5251:6:10",
                          "subExpression": {
                            "id": 1367,
                            "name": "curr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "5251:4:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 1057,
                        "nodeType": "ExpressionStatement",
                        "src": "5251:6:9"
                      },
                      "nodeType": "ForStatement",
                      "src": "5211:240:9"
=======
                        "id": 1369,
                        "nodeType": "ExpressionStatement",
                        "src": "5251:6:10"
                      },
                      "nodeType": "ForStatement",
                      "src": "5211:240:10"
>>>>>>> Till-Pascal
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865206f776e6572206f6620746f6b656e",
<<<<<<< HEAD
                        "id": 1080,
=======
                        "id": 1392,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5478:49:9",
=======
                        "src": "5478:49:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
                          "typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
                        },
                        "value": "ERC721A: unable to determine the owner of token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
                          "typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1079,
=======
                      "id": 1391,
>>>>>>> Till-Pascal
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
<<<<<<< HEAD
                      "src": "5471:6:9",
=======
                      "src": "5471:6:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1081,
=======
                    "id": 1393,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5471:57:9",
=======
                    "src": "5471:57:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:57:9"
=======
                  "id": 1394,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:57:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1033,
              "nodeType": "StructuredDocumentation",
              "src": "4821:185:9",
              "text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
            },
            "id": 1084,
=======
              "id": 1345,
              "nodeType": "StructuredDocumentation",
              "src": "4821:185:10",
              "text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
            },
            "id": 1396,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownershipOf",
<<<<<<< HEAD
            "nameLocation": "5020:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1036,
=======
            "nameLocation": "5020:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1348,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5040:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "5032:15:9",
=======
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5040:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1396,
                  "src": "5032:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5032:7:9",
=======
                    "id": 1346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5032:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5031:17:9"
            },
            "returnParameters": {
              "id": 1040,
=======
              "src": "5031:17:10"
            },
            "returnParameters": {
              "id": 1352,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1039,
=======
                  "id": 1351,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1084,
                  "src": "5072:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                    "typeString": "struct ERC721A.TokenOwnership"
                  },
                  "typeName": {
                    "id": 1038,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1037,
                      "name": "TokenOwnership",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 779,
                      "src": "5072:14:9"
                    },
                    "referencedDeclaration": 779,
                    "src": "5072:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
                  "scope": 1396,
                  "src": "5072:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                    "typeString": "struct ERC721A.TokenOwnership"
                  },
                  "typeName": {
                    "id": 1350,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1349,
                      "name": "TokenOwnership",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1091,
                      "src": "5072:14:10"
                    },
                    "referencedDeclaration": 1091,
                    "src": "5072:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                      "typeString": "struct ERC721A.TokenOwnership"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5071:23:9"
            },
            "scope": 1818,
            "src": "5011:524:9",
=======
              "src": "5071:23:10"
            },
            "scope": 2130,
            "src": "5011:524:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              48
            ],
            "body": {
<<<<<<< HEAD
              "id": 1098,
              "nodeType": "Block",
              "src": "5665:49:9",
=======
              "id": 1410,
              "nodeType": "Block",
              "src": "5665:49:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 1094,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "5694:7:9",
=======
                          "id": 1406,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "5694:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1093,
                        "name": "ownershipOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "5682:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$779_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                        }
                      },
                      "id": 1095,
=======
                        "id": 1405,
                        "name": "ownershipOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1396,
                        "src": "5682:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1091_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                        }
                      },
                      "id": 1407,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5682:20:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership memory"
                      }
                    },
                    "id": 1096,
=======
                      "src": "5682:20:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership memory"
                      }
                    },
                    "id": 1408,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "addr",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 776,
                    "src": "5682:25:9",
=======
                    "referencedDeclaration": 1088,
                    "src": "5682:25:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1092,
                  "id": 1097,
                  "nodeType": "Return",
                  "src": "5675:32:9"
=======
                  "functionReturnParameters": 1404,
                  "id": 1409,
                  "nodeType": "Return",
                  "src": "5675:32:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1085,
              "nodeType": "StructuredDocumentation",
              "src": "5541:46:9",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1099,
=======
              "id": 1397,
              "nodeType": "StructuredDocumentation",
              "src": "5541:46:10",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1411,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
<<<<<<< HEAD
            "nameLocation": "5601:7:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5638:8:9"
            },
            "parameters": {
              "id": 1088,
=======
            "nameLocation": "5601:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1401,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5638:8:10"
            },
            "parameters": {
              "id": 1400,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5617:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "5609:15:9",
=======
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5617:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "5609:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5609:7:9",
=======
                    "id": 1398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5609:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5608:17:9"
            },
            "returnParameters": {
              "id": 1092,
=======
              "src": "5608:17:10"
            },
            "returnParameters": {
              "id": 1404,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1091,
=======
                  "id": 1403,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1099,
                  "src": "5656:7:9",
=======
                  "scope": 1411,
                  "src": "5656:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:7:9",
=======
                    "id": 1402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5655:9:9"
            },
            "scope": 1818,
            "src": "5592:122:9",
=======
              "src": "5655:9:10"
            },
            "scope": 2130,
            "src": "5592:122:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              176
            ],
            "body": {
<<<<<<< HEAD
              "id": 1108,
              "nodeType": "Block",
              "src": "5845:29:9",
              "statements": [
                {
                  "expression": {
                    "id": 1106,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 788,
                    "src": "5862:5:9",
=======
              "id": 1420,
              "nodeType": "Block",
              "src": "5845:29:10",
              "statements": [
                {
                  "expression": {
                    "id": 1418,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1100,
                    "src": "5862:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1105,
                  "id": 1107,
                  "nodeType": "Return",
                  "src": "5855:12:9"
=======
                  "functionReturnParameters": 1417,
                  "id": 1419,
                  "nodeType": "Return",
                  "src": "5855:12:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1100,
              "nodeType": "StructuredDocumentation",
              "src": "5720:51:9",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1109,
=======
              "id": 1412,
              "nodeType": "StructuredDocumentation",
              "src": "5720:51:10",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1421,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
<<<<<<< HEAD
            "nameLocation": "5785:4:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5812:8:9"
            },
            "parameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5789:2:9"
            },
            "returnParameters": {
              "id": 1105,
=======
            "nameLocation": "5785:4:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1414,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5812:8:10"
            },
            "parameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5789:2:10"
            },
            "returnParameters": {
              "id": 1417,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1104,
=======
                  "id": 1416,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1109,
                  "src": "5830:13:9",
=======
                  "scope": 1421,
                  "src": "5830:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5830:6:9",
=======
                    "id": 1415,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5830:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5829:15:9"
            },
            "scope": 1818,
            "src": "5776:98:9",
=======
              "src": "5829:15:10"
            },
            "scope": 2130,
            "src": "5776:98:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              182
            ],
            "body": {
<<<<<<< HEAD
              "id": 1118,
              "nodeType": "Block",
              "src": "6009:31:9",
              "statements": [
                {
                  "expression": {
                    "id": 1116,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 790,
                    "src": "6026:7:9",
=======
              "id": 1430,
              "nodeType": "Block",
              "src": "6009:31:10",
              "statements": [
                {
                  "expression": {
                    "id": 1428,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1102,
                    "src": "6026:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1115,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "6019:14:9"
=======
                  "functionReturnParameters": 1427,
                  "id": 1429,
                  "nodeType": "Return",
                  "src": "6019:14:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1110,
              "nodeType": "StructuredDocumentation",
              "src": "5880:53:9",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1119,
=======
              "id": 1422,
              "nodeType": "StructuredDocumentation",
              "src": "5880:53:10",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1431,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
<<<<<<< HEAD
            "nameLocation": "5947:6:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1112,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5976:8:9"
            },
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5953:2:9"
            },
            "returnParameters": {
              "id": 1115,
=======
            "nameLocation": "5947:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5976:8:10"
            },
            "parameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5953:2:10"
            },
            "returnParameters": {
              "id": 1427,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1114,
=======
                  "id": 1426,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1119,
                  "src": "5994:13:9",
=======
                  "scope": 1431,
                  "src": "5994:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1113,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:6:9",
=======
                    "id": 1425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5993:15:9"
            },
            "scope": 1818,
            "src": "5938:102:9",
=======
              "src": "5993:15:10"
            },
            "scope": 2130,
            "src": "5938:102:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              190
            ],
            "body": {
<<<<<<< HEAD
              "id": 1160,
              "nodeType": "Block",
              "src": "6194:242:9",
=======
              "id": 1472,
              "nodeType": "Block",
              "src": "6194:242:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 1130,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "6220:7:9",
=======
                            "id": 1442,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "6220:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1129,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "6212:7:9",
=======
                          "id": 1441,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1679,
                          "src": "6212:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1131,
=======
                        "id": 1443,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "6212:16:9",
=======
                        "src": "6212:16:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
<<<<<<< HEAD
                        "id": 1132,
=======
                        "id": 1444,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6230:49:9",
=======
                        "src": "6230:49:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1128,
=======
                      "id": 1440,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "6204:7:9",
=======
                      "src": "6204:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1133,
=======
                    "id": 1445,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6204:76:9",
=======
                    "src": "6204:76:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:76:9"
                },
                {
                  "assignments": [
                    1136
=======
                  "id": 1446,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:76:10"
                },
                {
                  "assignments": [
                    1448
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1136,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "6305:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1160,
                      "src": "6291:21:9",
=======
                      "id": 1448,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "6305:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1472,
                      "src": "6291:21:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1135,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6291:6:9",
=======
                        "id": 1447,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6291:6:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1139,
=======
                  "id": 1451,
>>>>>>> Till-Pascal
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 1137,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "6315:8:9",
=======
                      "id": 1449,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1482,
                      "src": "6315:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1138,
=======
                    "id": 1450,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6315:10:9",
=======
                    "src": "6315:10:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6291:34:9"
=======
                  "src": "6291:34:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
<<<<<<< HEAD
                      "id": 1146,
=======
                      "id": 1458,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1142,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "6348:7:9",
=======
                              "id": 1454,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "6348:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1141,
=======
                            "id": 1453,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "6342:5:9",
=======
                            "src": "6342:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1140,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6342:5:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1143,
=======
                              "id": 1452,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6342:5:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1455,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6342:14:9",
=======
                          "src": "6342:14:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
<<<<<<< HEAD
                        "id": 1144,
=======
                        "id": 1456,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "6342:21:9",
=======
                        "src": "6342:21:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
<<<<<<< HEAD
                        "id": 1145,
=======
                        "id": 1457,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6367:1:9",
=======
                        "src": "6367:1:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
<<<<<<< HEAD
                      "src": "6342:26:9",
=======
                      "src": "6342:26:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
<<<<<<< HEAD
                      "id": 1157,
=======
                      "id": 1469,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "6427:2:9",
=======
                      "src": "6427:2:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
<<<<<<< HEAD
                    "id": 1158,
=======
                    "id": 1470,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
<<<<<<< HEAD
                    "src": "6342:87:9",
=======
                    "src": "6342:87:10",
>>>>>>> Till-Pascal
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1151,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "6395:7:9",
=======
                              "id": 1463,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "6395:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
<<<<<<< HEAD
                                  "id": 1152,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1122,
                                  "src": "6404:7:9",
=======
                                  "id": 1464,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "6404:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "id": 1153,
=======
                                "id": 1465,
>>>>>>> Till-Pascal
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 593,
<<<<<<< HEAD
                                "src": "6404:16:9",
=======
                                "src": "6404:16:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1154,
=======
                              "id": 1466,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "6404:18:9",
=======
                              "src": "6404:18:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 1149,
=======
                              "id": 1461,
>>>>>>> Till-Pascal
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967295,
<<<<<<< HEAD
                              "src": "6378:3:9",
=======
                              "src": "6378:3:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
<<<<<<< HEAD
                            "id": 1150,
=======
                            "id": 1462,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "6378:16:9",
=======
                            "src": "6378:16:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1155,
=======
                          "id": 1467,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6378:45:9",
=======
                          "src": "6378:45:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1148,
=======
                        "id": 1460,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                        "src": "6371:6:9",
=======
                        "src": "6371:6:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 1147,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6371:6:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1156,
=======
                          "id": 1459,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6371:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1468,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6371:53:9",
=======
                      "src": "6371:53:10",
>>>>>>> Till-Pascal
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1127,
                  "id": 1159,
                  "nodeType": "Return",
                  "src": "6335:94:9"
=======
                  "functionReturnParameters": 1439,
                  "id": 1471,
                  "nodeType": "Return",
                  "src": "6335:94:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1120,
              "nodeType": "StructuredDocumentation",
              "src": "6046:55:9",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1161,
=======
              "id": 1432,
              "nodeType": "StructuredDocumentation",
              "src": "6046:55:10",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1473,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
<<<<<<< HEAD
            "nameLocation": "6115:8:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1124,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6161:8:9"
            },
            "parameters": {
              "id": 1123,
=======
            "nameLocation": "6115:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1436,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6161:8:10"
            },
            "parameters": {
              "id": 1435,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6132:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "6124:15:9",
=======
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6132:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1473,
                  "src": "6124:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6124:7:9",
=======
                    "id": 1433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6124:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6123:17:9"
            },
            "returnParameters": {
              "id": 1127,
=======
              "src": "6123:17:10"
            },
            "returnParameters": {
              "id": 1439,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1126,
=======
                  "id": 1438,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1161,
                  "src": "6179:13:9",
=======
                  "scope": 1473,
                  "src": "6179:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6179:6:9",
=======
                    "id": 1437,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6179:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6178:15:9"
            },
            "scope": 1818,
            "src": "6106:330:9",
=======
              "src": "6178:15:10"
            },
            "scope": 2130,
            "src": "6106:330:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1169,
              "nodeType": "Block",
              "src": "6743:26:9",
=======
              "id": 1481,
              "nodeType": "Block",
              "src": "6743:26:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
<<<<<<< HEAD
                    "id": 1167,
=======
                    "id": 1479,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "6760:2:9",
=======
                    "src": "6760:2:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1166,
                  "id": 1168,
                  "nodeType": "Return",
                  "src": "6753:9:9"
=======
                  "functionReturnParameters": 1478,
                  "id": 1480,
                  "nodeType": "Return",
                  "src": "6753:9:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1162,
              "nodeType": "StructuredDocumentation",
              "src": "6442:230:9",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 1170,
=======
              "id": 1474,
              "nodeType": "StructuredDocumentation",
              "src": "6442:230:10",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 1482,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
<<<<<<< HEAD
            "nameLocation": "6686:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6694:2:9"
            },
            "returnParameters": {
              "id": 1166,
=======
            "nameLocation": "6686:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6694:2:10"
            },
            "returnParameters": {
              "id": 1478,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1165,
=======
                  "id": 1477,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1170,
                  "src": "6728:13:9",
=======
                  "scope": 1482,
                  "src": "6728:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6728:6:9",
=======
                    "id": 1476,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6728:6:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6727:15:9"
            },
            "scope": 1818,
            "src": "6677:92:9",
=======
              "src": "6727:15:10"
            },
            "scope": 2130,
            "src": "6677:92:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              76
            ],
            "body": {
<<<<<<< HEAD
              "id": 1213,
              "nodeType": "Block",
              "src": "6888:341:9",
              "statements": [
                {
                  "assignments": [
                    1180
=======
              "id": 1525,
              "nodeType": "Block",
              "src": "6888:341:10",
              "statements": [
                {
                  "assignments": [
                    1492
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1180,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6906:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1213,
                      "src": "6898:13:9",
=======
                      "id": 1492,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6906:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1525,
                      "src": "6898:13:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1179,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6898:7:9",
=======
                        "id": 1491,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6898:7:10",
>>>>>>> Till-Pascal
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1185,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1183,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "6930:7:9",
=======
                  "id": 1497,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1495,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "6930:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 1181,
                        "name": "ERC721A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "6914:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721A_$1818_$",
                          "typeString": "type(contract ERC721A)"
                        }
                      },
                      "id": 1182,
=======
                        "id": 1493,
                        "name": "ERC721A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2130,
                        "src": "6914:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721A_$2130_$",
                          "typeString": "type(contract ERC721A)"
                        }
                      },
                      "id": 1494,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 1099,
                      "src": "6914:15:9",
=======
                      "referencedDeclaration": 1411,
                      "src": "6914:15:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1184,
=======
                    "id": 1496,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6914:24:9",
=======
                    "src": "6914:24:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6898:40:9"
=======
                  "src": "6898:40:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1189,
=======
                        "id": 1501,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1187,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "6956:2:9",
=======
                          "id": 1499,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1485,
                          "src": "6956:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 1188,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1180,
                          "src": "6962:5:9",
=======
                          "id": 1500,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1492,
                          "src": "6962:5:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "6956:11:9",
=======
                        "src": "6956:11:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e6572",
<<<<<<< HEAD
                        "id": 1190,
=======
                        "id": 1502,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6969:36:9",
=======
                        "src": "6969:36:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
                          "typeString": "literal_string \"ERC721A: approval to current owner\""
                        },
                        "value": "ERC721A: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
                          "typeString": "literal_string \"ERC721A: approval to current owner\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1186,
=======
                      "id": 1498,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "6948:7:9",
=======
                      "src": "6948:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1191,
=======
                    "id": 1503,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6948:58:9",
=======
                    "src": "6948:58:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "6948:58:9"
=======
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "6948:58:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 1203,
=======
                        "id": 1515,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 1197,
=======
                          "id": 1509,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
<<<<<<< HEAD
                              "id": 1194,
=======
                              "id": 1506,
>>>>>>> Till-Pascal
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 498,
<<<<<<< HEAD
                              "src": "7038:10:9",
=======
                              "src": "7038:10:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1195,
=======
                            "id": 1507,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "7038:12:9",
=======
                            "src": "7038:12:10",
>>>>>>> Till-Pascal
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 1196,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "7054:5:9",
=======
                            "id": 1508,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "7054:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "7038:21:9",
=======
                          "src": "7038:21:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1199,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "7080:5:9",
=======
                              "id": 1511,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1492,
                              "src": "7080:5:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1200,
=======
                                "id": 1512,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "7087:10:9",
=======
                                "src": "7087:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1201,
=======
                              "id": 1513,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "7087:12:9",
=======
                              "src": "7087:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1198,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1287,
                            "src": "7063:16:9",
=======
                            "id": 1510,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1599,
                            "src": "7063:16:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1202,
=======
                          "id": 1514,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "7063:37:9",
=======
                          "src": "7063:37:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "7038:62:9",
=======
                        "src": "7038:62:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
<<<<<<< HEAD
                        "id": 1204,
=======
                        "id": 1516,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7114:59:9",
=======
                        "src": "7114:59:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
                          "typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721A: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
                          "typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1193,
=======
                      "id": 1505,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "7017:7:9",
=======
                      "src": "7017:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1205,
=======
                    "id": 1517,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7017:166:9",
=======
                    "src": "7017:166:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "7017:166:9"
=======
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "7017:166:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1208,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "7203:2:9",
=======
                        "id": 1520,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "7203:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1209,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "7207:7:9",
=======
                        "id": 1521,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "7207:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1210,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "7216:5:9",
=======
                        "id": 1522,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1492,
                        "src": "7216:5:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1207,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "7194:8:9",
=======
                      "id": 1519,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "7194:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1211,
=======
                    "id": 1523,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7194:28:9",
=======
                    "src": "7194:28:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "7194:28:9"
=======
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "7194:28:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1171,
              "nodeType": "StructuredDocumentation",
              "src": "6775:46:9",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1214,
=======
              "id": 1483,
              "nodeType": "StructuredDocumentation",
              "src": "6775:46:10",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1526,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
<<<<<<< HEAD
            "nameLocation": "6835:7:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6879:8:9"
            },
            "parameters": {
              "id": 1176,
=======
            "nameLocation": "6835:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1489,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6879:8:10"
            },
            "parameters": {
              "id": 1488,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6851:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "6843:10:9",
=======
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6851:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "6843:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6843:7:9",
=======
                    "id": 1484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6843:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1175,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6863:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "6855:15:9",
=======
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6863:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "6855:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6855:7:9",
=======
                    "id": 1486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6855:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6842:29:9"
            },
            "returnParameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6888:0:9"
            },
            "scope": 1818,
            "src": "6826:403:9",
=======
              "src": "6842:29:10"
            },
            "returnParameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6888:0:10"
            },
            "scope": 2130,
            "src": "6826:403:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              84
            ],
            "body": {
<<<<<<< HEAD
              "id": 1234,
              "nodeType": "Block",
              "src": "7367:133:9",
=======
              "id": 1546,
              "nodeType": "Block",
              "src": "7367:133:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 1225,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1217,
                            "src": "7393:7:9",
=======
                            "id": 1537,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1529,
                            "src": "7393:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1224,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "7385:7:9",
=======
                          "id": 1536,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1679,
                          "src": "7385:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1226,
=======
                        "id": 1538,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "7385:16:9",
=======
                        "src": "7385:16:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
<<<<<<< HEAD
                        "id": 1227,
=======
                        "id": 1539,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7403:47:9",
=======
                        "src": "7403:47:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
                          "typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
                        },
                        "value": "ERC721A: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
                          "typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1223,
=======
                      "id": 1535,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "7377:7:9",
=======
                      "src": "7377:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1228,
=======
                    "id": 1540,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7377:74:9",
=======
                    "src": "7377:74:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1229,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:74:9"
=======
                  "id": 1541,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:74:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 1230,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "7469:15:9",
=======
                      "id": 1542,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "7469:15:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1232,
                    "indexExpression": {
                      "id": 1231,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "7485:7:9",
=======
                    "id": 1544,
                    "indexExpression": {
                      "id": 1543,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1529,
                      "src": "7485:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "7469:24:9",
=======
                    "src": "7469:24:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1222,
                  "id": 1233,
                  "nodeType": "Return",
                  "src": "7462:31:9"
=======
                  "functionReturnParameters": 1534,
                  "id": 1545,
                  "nodeType": "Return",
                  "src": "7462:31:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1215,
              "nodeType": "StructuredDocumentation",
              "src": "7235:50:9",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1235,
=======
              "id": 1527,
              "nodeType": "StructuredDocumentation",
              "src": "7235:50:10",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1547,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
<<<<<<< HEAD
            "nameLocation": "7299:11:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1219,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7340:8:9"
            },
            "parameters": {
              "id": 1218,
=======
            "nameLocation": "7299:11:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1531,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7340:8:10"
            },
            "parameters": {
              "id": 1530,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7319:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1235,
                  "src": "7311:15:9",
=======
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7319:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "7311:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7311:7:9",
=======
                    "id": 1528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7311:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7310:17:9"
            },
            "returnParameters": {
              "id": 1222,
=======
              "src": "7310:17:10"
            },
            "returnParameters": {
              "id": 1534,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1221,
=======
                  "id": 1533,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1235,
                  "src": "7358:7:9",
=======
                  "scope": 1547,
                  "src": "7358:7:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7358:7:9",
=======
                    "id": 1532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7358:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7357:9:9"
            },
            "scope": 1818,
            "src": "7290:210:9",
=======
              "src": "7357:9:10"
            },
            "scope": 2130,
            "src": "7290:210:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              92
            ],
            "body": {
<<<<<<< HEAD
              "id": 1268,
              "nodeType": "Block",
              "src": "7643:207:9",
=======
              "id": 1580,
              "nodeType": "Block",
              "src": "7643:207:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1248,
=======
                        "id": 1560,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1245,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1238,
                          "src": "7661:8:9",
=======
                          "id": 1557,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1550,
                          "src": "7661:8:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
<<<<<<< HEAD
                            "id": 1246,
=======
                            "id": 1558,
>>>>>>> Till-Pascal
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
<<<<<<< HEAD
                            "src": "7673:10:9",
=======
                            "src": "7673:10:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1247,
=======
                          "id": 1559,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "7673:12:9",
=======
                          "src": "7673:12:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "7661:24:9",
=======
                        "src": "7661:24:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
<<<<<<< HEAD
                        "id": 1249,
=======
                        "id": 1561,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7687:28:9",
=======
                        "src": "7687:28:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
                          "typeString": "literal_string \"ERC721A: approve to caller\""
                        },
                        "value": "ERC721A: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
                          "typeString": "literal_string \"ERC721A: approve to caller\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1244,
=======
                      "id": 1556,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "7653:7:9",
=======
                      "src": "7653:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1250,
=======
                    "id": 1562,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7653:63:9",
=======
                    "src": "7653:63:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1251,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:63:9"
                },
                {
                  "expression": {
                    "id": 1259,
=======
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:63:10"
                },
                {
                  "expression": {
                    "id": 1571,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 1252,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "7727:18:9",
=======
                          "id": 1564,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "7727:18:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
<<<<<<< HEAD
                        "id": 1256,
=======
                        "id": 1568,
>>>>>>> Till-Pascal
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
<<<<<<< HEAD
                            "id": 1253,
=======
                            "id": 1565,
>>>>>>> Till-Pascal
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
<<<<<<< HEAD
                            "src": "7746:10:9",
=======
                            "src": "7746:10:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1254,
=======
                          "id": 1566,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "7746:12:9",
=======
                          "src": "7746:12:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "7727:32:9",
=======
                        "src": "7727:32:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
<<<<<<< HEAD
                      "id": 1257,
                      "indexExpression": {
                        "id": 1255,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "7760:8:9",
=======
                      "id": 1569,
                      "indexExpression": {
                        "id": 1567,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1550,
                        "src": "7760:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "7727:42:9",
=======
                      "src": "7727:42:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 1258,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "7772:8:9",
=======
                      "id": 1570,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1552,
                      "src": "7772:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "7727:53:9",
=======
                    "src": "7727:53:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 1260,
                  "nodeType": "ExpressionStatement",
                  "src": "7727:53:9"
=======
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "7727:53:10"
>>>>>>> Till-Pascal
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
<<<<<<< HEAD
                          "id": 1262,
=======
                          "id": 1574,
>>>>>>> Till-Pascal
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
<<<<<<< HEAD
                          "src": "7810:10:9",
=======
                          "src": "7810:10:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1263,
=======
                        "id": 1575,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "7810:12:9",
=======
                        "src": "7810:12:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1264,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "7824:8:9",
=======
                        "id": 1576,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1550,
                        "src": "7824:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1265,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "7834:8:9",
=======
                        "id": 1577,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "7834:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1261,
=======
                      "id": 1573,
>>>>>>> Till-Pascal
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
<<<<<<< HEAD
                      "src": "7795:14:9",
=======
                      "src": "7795:14:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1266,
=======
                    "id": 1578,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7795:48:9",
=======
                    "src": "7795:48:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1267,
                  "nodeType": "EmitStatement",
                  "src": "7790:53:9"
=======
                  "id": 1579,
                  "nodeType": "EmitStatement",
                  "src": "7790:53:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1236,
              "nodeType": "StructuredDocumentation",
              "src": "7506:56:9",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1269,
=======
              "id": 1548,
              "nodeType": "StructuredDocumentation",
              "src": "7506:56:10",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1581,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
<<<<<<< HEAD
            "nameLocation": "7576:17:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1242,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7634:8:9"
            },
            "parameters": {
              "id": 1241,
=======
            "nameLocation": "7576:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1554,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7634:8:10"
            },
            "parameters": {
              "id": 1553,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7602:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "7594:16:9",
=======
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7602:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "7594:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7594:7:9",
=======
                    "id": 1549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7594:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "7617:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "7612:13:9",
=======
                  "id": 1552,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "7617:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "7612:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7612:4:9",
=======
                    "id": 1551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7612:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7593:33:9"
            },
            "returnParameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7643:0:9"
            },
            "scope": 1818,
            "src": "7567:283:9",
=======
              "src": "7593:33:10"
            },
            "returnParameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7643:0:10"
            },
            "scope": 2130,
            "src": "7567:283:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              102
            ],
            "body": {
<<<<<<< HEAD
              "id": 1286,
              "nodeType": "Block",
              "src": "8019:59:9",
=======
              "id": 1598,
              "nodeType": "Block",
              "src": "8019:59:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 1280,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "8036:18:9",
=======
                        "id": 1592,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "8036:18:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
<<<<<<< HEAD
                      "id": 1282,
                      "indexExpression": {
                        "id": 1281,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "8055:5:9",
=======
                      "id": 1594,
                      "indexExpression": {
                        "id": 1593,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "8055:5:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "8036:25:9",
=======
                      "src": "8036:25:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1284,
                    "indexExpression": {
                      "id": 1283,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "8062:8:9",
=======
                    "id": 1596,
                    "indexExpression": {
                      "id": 1595,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1586,
                      "src": "8062:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "8036:35:9",
=======
                    "src": "8036:35:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1279,
                  "id": 1285,
                  "nodeType": "Return",
                  "src": "8029:42:9"
=======
                  "functionReturnParameters": 1591,
                  "id": 1597,
                  "nodeType": "Return",
                  "src": "8029:42:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1270,
              "nodeType": "StructuredDocumentation",
              "src": "7856:55:9",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1287,
=======
              "id": 1582,
              "nodeType": "StructuredDocumentation",
              "src": "7856:55:10",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1599,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
<<<<<<< HEAD
            "nameLocation": "7925:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7995:8:9"
            },
            "parameters": {
              "id": 1275,
=======
            "nameLocation": "7925:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1588,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7995:8:10"
            },
            "parameters": {
              "id": 1587,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1272,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7950:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "7942:13:9",
=======
                  "id": 1584,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7950:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1599,
                  "src": "7942:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7942:7:9",
=======
                    "id": 1583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7942:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7965:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "7957:16:9",
=======
                  "id": 1586,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7965:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1599,
                  "src": "7957:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:9",
=======
                    "id": 1585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7941:33:9"
            },
            "returnParameters": {
              "id": 1279,
=======
              "src": "7941:33:10"
            },
            "returnParameters": {
              "id": 1591,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1278,
=======
                  "id": 1590,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1287,
                  "src": "8013:4:9",
=======
                  "scope": 1599,
                  "src": "8013:4:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8013:4:9",
=======
                    "id": 1589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8013:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8012:6:9"
            },
            "scope": 1818,
            "src": "7916:162:9",
=======
              "src": "8012:6:10"
            },
            "scope": 2130,
            "src": "7916:162:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              68
            ],
            "body": {
<<<<<<< HEAD
              "id": 1304,
              "nodeType": "Block",
              "src": "8251:45:9",
=======
              "id": 1616,
              "nodeType": "Block",
              "src": "8251:45:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1299,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1290,
                        "src": "8271:4:9",
=======
                        "id": 1611,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1602,
                        "src": "8271:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1300,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "8277:2:9",
=======
                        "id": 1612,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "8277:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1301,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1294,
                        "src": "8281:7:9",
=======
                        "id": 1613,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "8281:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1298,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1704,
                      "src": "8261:9:9",
=======
                      "id": 1610,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "8261:9:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1302,
=======
                    "id": 1614,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8261:28:9",
=======
                    "src": "8261:28:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "8261:28:9"
=======
                  "id": 1615,
                  "nodeType": "ExpressionStatement",
                  "src": "8261:28:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1288,
              "nodeType": "StructuredDocumentation",
              "src": "8084:51:9",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1305,
=======
              "id": 1600,
              "nodeType": "StructuredDocumentation",
              "src": "8084:51:10",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1617,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
<<<<<<< HEAD
            "nameLocation": "8149:12:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1296,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8242:8:9"
            },
            "parameters": {
              "id": 1295,
=======
            "nameLocation": "8149:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8242:8:10"
            },
            "parameters": {
              "id": 1607,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8179:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "8171:12:9",
=======
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8179:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "8171:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8171:7:9",
=======
                    "id": 1601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8171:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1292,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8201:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "8193:10:9",
=======
                  "id": 1604,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8201:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "8193:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:7:9",
=======
                    "id": 1603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1294,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8221:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "8213:15:9",
=======
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8221:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "8213:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8213:7:9",
=======
                    "id": 1605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8213:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8161:73:9"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8251:0:9"
            },
            "scope": 1818,
            "src": "8140:156:9",
=======
              "src": "8161:73:10"
            },
            "returnParameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8251:0:10"
            },
            "scope": 2130,
            "src": "8140:156:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              58
            ],
            "body": {
<<<<<<< HEAD
              "id": 1323,
              "nodeType": "Block",
              "src": "8477:56:9",
=======
              "id": 1635,
              "nodeType": "Block",
              "src": "8477:56:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1317,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "8504:4:9",
=======
                        "id": 1629,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "8504:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1318,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "8510:2:9",
=======
                        "id": 1630,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "8510:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1319,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "8514:7:9",
=======
                        "id": 1631,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "8514:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
<<<<<<< HEAD
                        "id": 1320,
=======
                        "id": 1632,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "8523:2:9",
=======
                        "src": "8523:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1316,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1324,
                        1354
                      ],
                      "referencedDeclaration": 1354,
                      "src": "8487:16:9",
=======
                      "id": 1628,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1636,
                        1666
                      ],
                      "referencedDeclaration": 1666,
                      "src": "8487:16:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1321,
=======
                    "id": 1633,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8487:39:9",
=======
                    "src": "8487:39:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "8487:39:9"
=======
                  "id": 1634,
                  "nodeType": "ExpressionStatement",
                  "src": "8487:39:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1306,
              "nodeType": "StructuredDocumentation",
              "src": "8302:55:9",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1324,
=======
              "id": 1618,
              "nodeType": "StructuredDocumentation",
              "src": "8302:55:10",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1636,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
<<<<<<< HEAD
            "nameLocation": "8371:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1314,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8468:8:9"
            },
            "parameters": {
              "id": 1313,
=======
            "nameLocation": "8371:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1626,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8468:8:10"
            },
            "parameters": {
              "id": 1625,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8405:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "8397:12:9",
=======
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8405:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "8397:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8397:7:9",
=======
                    "id": 1619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8397:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8427:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "8419:10:9",
=======
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8427:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "8419:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:9",
=======
                    "id": 1621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8447:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "8439:15:9",
=======
                  "id": 1624,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8447:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "8439:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8439:7:9",
=======
                    "id": 1623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8439:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8387:73:9"
            },
            "returnParameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8477:0:9"
            },
            "scope": 1818,
            "src": "8362:171:9",
=======
              "src": "8387:73:10"
            },
            "returnParameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8477:0:10"
            },
            "scope": 2130,
            "src": "8362:171:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              114
            ],
            "body": {
<<<<<<< HEAD
              "id": 1353,
              "nodeType": "Block",
              "src": "8742:201:9",
=======
              "id": 1665,
              "nodeType": "Block",
              "src": "8742:201:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1338,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1327,
                        "src": "8762:4:9",
=======
                        "id": 1650,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "8762:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1339,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "8768:2:9",
=======
                        "id": 1651,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "8768:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1340,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1331,
                        "src": "8772:7:9",
=======
                        "id": 1652,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "8772:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1337,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1704,
                      "src": "8752:9:9",
=======
                      "id": 1649,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "8752:9:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1341,
=======
                    "id": 1653,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8752:28:9",
=======
                    "src": "8752:28:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "8752:28:9"
=======
                  "id": 1654,
                  "nodeType": "ExpressionStatement",
                  "src": "8752:28:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 1345,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1327,
                            "src": "8834:4:9",
=======
                            "id": 1657,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "8834:4:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 1346,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1329,
                            "src": "8840:2:9",
=======
                            "id": 1658,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "8840:2:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 1347,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1331,
                            "src": "8844:7:9",
=======
                            "id": 1659,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1643,
                            "src": "8844:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 1348,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "8853:5:9",
=======
                            "id": 1660,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1645,
                            "src": "8853:5:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1344,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1791,
                          "src": "8811:22:9",
=======
                          "id": 1656,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2103,
                          "src": "8811:22:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1349,
=======
                        "id": 1661,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "8811:48:9",
=======
                        "src": "8811:48:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
<<<<<<< HEAD
                        "id": 1350,
=======
                        "id": 1662,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "8873:53:9",
=======
                        "src": "8873:53:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721A: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1343,
=======
                      "id": 1655,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "8790:7:9",
=======
                      "src": "8790:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1351,
=======
                    "id": 1663,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8790:146:9",
=======
                    "src": "8790:146:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1352,
                  "nodeType": "ExpressionStatement",
                  "src": "8790:146:9"
=======
                  "id": 1664,
                  "nodeType": "ExpressionStatement",
                  "src": "8790:146:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1325,
              "nodeType": "StructuredDocumentation",
              "src": "8539:55:9",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1354,
=======
              "id": 1637,
              "nodeType": "StructuredDocumentation",
              "src": "8539:55:10",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1666,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
<<<<<<< HEAD
            "nameLocation": "8608:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1335,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8733:8:9"
            },
            "parameters": {
              "id": 1334,
=======
            "nameLocation": "8608:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1647,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8733:8:10"
            },
            "parameters": {
              "id": 1646,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1327,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8642:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "8634:12:9",
=======
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8642:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "8634:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8634:7:9",
=======
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8634:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8664:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "8656:10:9",
=======
                  "id": 1641,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8664:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "8656:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8656:7:9",
=======
                    "id": 1640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8656:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1331,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8684:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "8676:15:9",
=======
                  "id": 1643,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8684:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "8676:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8676:7:9",
=======
                    "id": 1642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8676:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8714:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "8701:18:9",
=======
                  "id": 1645,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8714:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "8701:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1332,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8701:5:9",
=======
                    "id": 1644,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8701:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8624:101:9"
            },
            "returnParameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8742:0:9"
            },
            "scope": 1818,
            "src": "8599:344:9",
=======
              "src": "8624:101:10"
            },
            "returnParameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8742:0:10"
            },
            "scope": 2130,
            "src": "8599:344:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1366,
              "nodeType": "Block",
              "src": "9252:46:9",
=======
              "id": 1678,
              "nodeType": "Block",
              "src": "9252:46:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 1364,
=======
                    "id": 1676,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 1362,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1357,
                      "src": "9269:7:9",
=======
                      "id": 1674,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1669,
                      "src": "9269:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
<<<<<<< HEAD
                      "id": 1363,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "9279:12:9",
=======
                      "id": 1675,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "9279:12:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "9269:22:9",
=======
                    "src": "9269:22:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1361,
                  "id": 1365,
                  "nodeType": "Return",
                  "src": "9262:29:9"
=======
                  "functionReturnParameters": 1673,
                  "id": 1677,
                  "nodeType": "Return",
                  "src": "9262:29:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1355,
              "nodeType": "StructuredDocumentation",
              "src": "8949:235:9",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
            },
            "id": 1367,
=======
              "id": 1667,
              "nodeType": "StructuredDocumentation",
              "src": "8949:235:10",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
            },
            "id": 1679,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
<<<<<<< HEAD
            "nameLocation": "9198:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1358,
=======
            "nameLocation": "9198:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1670,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1357,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9214:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "9206:15:9",
=======
                  "id": 1669,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9214:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "9206:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9206:7:9",
=======
                    "id": 1668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9206:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9205:17:9"
            },
            "returnParameters": {
              "id": 1361,
=======
              "src": "9205:17:10"
            },
            "returnParameters": {
              "id": 1673,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1360,
=======
                  "id": 1672,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1367,
                  "src": "9246:4:9",
=======
                  "scope": 1679,
                  "src": "9246:4:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1359,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9246:4:9",
=======
                    "id": 1671,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9246:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9245:6:9"
            },
            "scope": 1818,
            "src": "9189:109:9",
=======
              "src": "9245:6:10"
            },
            "scope": 2130,
            "src": "9189:109:10",
>>>>>>> Till-Pascal
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1380,
              "nodeType": "Block",
              "src": "9362:44:9",
=======
              "id": 1692,
              "nodeType": "Block",
              "src": "9362:44:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1375,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1369,
                        "src": "9382:2:9",
=======
                        "id": 1687,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "9382:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1376,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "9386:8:9",
=======
                        "id": 1688,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "9386:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
<<<<<<< HEAD
                        "id": 1377,
=======
                        "id": 1689,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "9396:2:9",
=======
                        "src": "9396:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1374,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1381,
                        1399
                      ],
                      "referencedDeclaration": 1399,
                      "src": "9372:9:9",
=======
                      "id": 1686,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1693,
                        1711
                      ],
                      "referencedDeclaration": 1711,
                      "src": "9372:9:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1378,
=======
                    "id": 1690,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "9372:27:9",
=======
                    "src": "9372:27:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1379,
                  "nodeType": "ExpressionStatement",
                  "src": "9372:27:9"
                }
              ]
            },
            "id": 1381,
=======
                  "id": 1691,
                  "nodeType": "ExpressionStatement",
                  "src": "9372:27:10"
                }
              ]
            },
            "id": 1693,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
<<<<<<< HEAD
            "nameLocation": "9313:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1372,
=======
            "nameLocation": "9313:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1684,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9331:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "9323:10:9",
=======
                  "id": 1681,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9331:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "9323:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9323:7:9",
=======
                    "id": 1680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9323:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9343:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "9335:16:9",
=======
                  "id": 1683,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9343:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "9335:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:7:9",
=======
                    "id": 1682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9322:30:9"
            },
            "returnParameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9362:0:9"
            },
            "scope": 1818,
            "src": "9304:102:9",
=======
              "src": "9322:30:10"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9362:0:10"
            },
            "scope": 2130,
            "src": "9304:102:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1398,
              "nodeType": "Block",
              "src": "9865:49:9",
=======
              "id": 1710,
              "nodeType": "Block",
              "src": "9865:49:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1392,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1384,
                        "src": "9881:2:9",
=======
                        "id": 1704,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "9881:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1393,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1386,
                        "src": "9885:8:9",
=======
                        "id": 1705,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1698,
                        "src": "9885:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1394,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "9895:5:9",
=======
                        "id": 1706,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1700,
                        "src": "9895:5:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
<<<<<<< HEAD
                        "id": 1395,
=======
                        "id": 1707,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "9902:4:9",
=======
                        "src": "9902:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1391,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "9875:5:9",
=======
                      "id": 1703,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "9875:5:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1396,
=======
                    "id": 1708,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "9875:32:9",
=======
                    "src": "9875:32:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "9875:32:9"
=======
                  "id": 1709,
                  "nodeType": "ExpressionStatement",
                  "src": "9875:32:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1382,
              "nodeType": "StructuredDocumentation",
              "src": "9412:340:9",
              "text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 1399,
=======
              "id": 1694,
              "nodeType": "StructuredDocumentation",
              "src": "9412:340:10",
              "text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 1711,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
<<<<<<< HEAD
            "nameLocation": "9766:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1389,
=======
            "nameLocation": "9766:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1701,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1384,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9793:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "9785:10:9",
=======
                  "id": 1696,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9793:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "9785:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9785:7:9",
=======
                    "id": 1695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9785:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1386,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9813:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "9805:16:9",
=======
                  "id": 1698,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9813:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "9805:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9805:7:9",
=======
                    "id": 1697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9805:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1388,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9844:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "9831:18:9",
=======
                  "id": 1700,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9844:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "9831:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9831:5:9",
=======
                    "id": 1699,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9831:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9775:80:9"
            },
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9865:0:9"
            },
            "scope": 1818,
            "src": "9757:157:9",
=======
              "src": "9775:80:10"
            },
            "returnParameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9865:0:10"
            },
            "scope": 2130,
            "src": "9757:157:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1538,
              "nodeType": "Block",
              "src": "10284:1375:9",
              "statements": [
                {
                  "assignments": [
                    1412
=======
              "id": 1850,
              "nodeType": "Block",
              "src": "10284:1375:10",
              "statements": [
                {
                  "assignments": [
                    1724
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1412,
                      "mutability": "mutable",
                      "name": "startTokenId",
                      "nameLocation": "10302:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1538,
                      "src": "10294:20:9",
=======
                      "id": 1724,
                      "mutability": "mutable",
                      "name": "startTokenId",
                      "nameLocation": "10302:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1850,
                      "src": "10294:20:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10294:7:9",
=======
                        "id": 1723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10294:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1414,
                  "initialValue": {
                    "id": 1413,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 786,
                    "src": "10317:12:9",
=======
                  "id": 1726,
                  "initialValue": {
                    "id": 1725,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1098,
                    "src": "10317:12:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "10294:35:9"
=======
                  "src": "10294:35:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1421,
=======
                        "id": 1733,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1416,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "10347:2:9",
=======
                          "id": 1728,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "10347:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 1419,
=======
                              "id": 1731,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "10361:1:9",
=======
                              "src": "10361:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1418,
=======
                            "id": 1730,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "10353:7:9",
=======
                            "src": "10353:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1417,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10353:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1420,
=======
                              "id": 1729,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10353:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1732,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "10353:10:9",
=======
                          "src": "10353:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "10347:16:9",
=======
                        "src": "10347:16:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206d696e7420746f20746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 1422,
=======
                        "id": 1734,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "10365:35:9",
=======
                        "src": "10365:35:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
                          "typeString": "literal_string \"ERC721A: mint to the zero address\""
                        },
                        "value": "ERC721A: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
                          "typeString": "literal_string \"ERC721A: mint to the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1415,
=======
                      "id": 1727,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "10339:7:9",
=======
                      "src": "10339:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1423,
=======
                    "id": 1735,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "10339:62:9",
=======
                    "src": "10339:62:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1424,
                  "nodeType": "ExpressionStatement",
                  "src": "10339:62:9"
=======
                  "id": 1736,
                  "nodeType": "ExpressionStatement",
                  "src": "10339:62:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1428,
=======
                        "id": 1740,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1426,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1404,
                          "src": "10419:8:9",
=======
                          "id": 1738,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1716,
                          "src": "10419:8:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 1427,
=======
                          "id": 1739,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "10431:1:9",
=======
                          "src": "10431:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "10419:13:9",
=======
                        "src": "10419:13:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207175616e74697479206d7573742062652067726561746572207468616e2030",
<<<<<<< HEAD
                        "id": 1429,
=======
                        "id": 1741,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "10434:42:9",
=======
                        "src": "10434:42:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1",
                          "typeString": "literal_string \"ERC721A: quantity must be greater than 0\""
                        },
                        "value": "ERC721A: quantity must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc1f9fb0e603971836d588a8edc31ad1917393079ad1425796c0e460d6033de1",
                          "typeString": "literal_string \"ERC721A: quantity must be greater than 0\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1425,
=======
                      "id": 1737,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "10411:7:9",
=======
                      "src": "10411:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1430,
=======
                    "id": 1742,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "10411:66:9",
=======
                    "src": "10411:66:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1431,
                  "nodeType": "ExpressionStatement",
                  "src": "10411:66:9"
=======
                  "id": 1743,
                  "nodeType": "ExpressionStatement",
                  "src": "10411:66:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 1435,
=======
                            "id": 1747,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "10518:1:9",
=======
                            "src": "10518:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1434,
=======
                          "id": 1746,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "10510:7:9",
=======
                          "src": "10510:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1433,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10510:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1436,
=======
                            "id": 1745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10510:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1748,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "10510:10:9",
=======
                        "src": "10510:10:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1437,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "10522:2:9",
=======
                        "id": 1749,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "10522:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1438,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "10526:12:9",
=======
                        "id": 1750,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1724,
                        "src": "10526:12:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1439,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1404,
                        "src": "10540:8:9",
=======
                        "id": 1751,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "10540:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1432,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "10488:21:9",
=======
                      "id": 1744,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2116,
                      "src": "10488:21:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1440,
=======
                    "id": 1752,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "10488:61:9",
=======
                    "src": "10488:61:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1441,
                  "nodeType": "ExpressionStatement",
                  "src": "10488:61:9"
                },
                {
                  "id": 1527,
                  "nodeType": "UncheckedBlock",
                  "src": "10797:785:9",
                  "statements": [
                    {
                      "expression": {
                        "id": 1450,
=======
                  "id": 1753,
                  "nodeType": "ExpressionStatement",
                  "src": "10488:61:10"
                },
                {
                  "id": 1839,
                  "nodeType": "UncheckedBlock",
                  "src": "10797:785:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1762,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1442,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "10821:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1444,
                            "indexExpression": {
                              "id": 1443,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "10834:2:9",
=======
                              "id": 1754,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "10821:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1756,
                            "indexExpression": {
                              "id": 1755,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1714,
                              "src": "10834:2:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "10821:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$784_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1445,
=======
                            "src": "10821:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1757,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 781,
                          "src": "10821:24:9",
=======
                          "referencedDeclaration": 1093,
                          "src": "10821:24:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1448,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1404,
                              "src": "10857:8:9",
=======
                              "id": 1760,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "10857:8:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1447,
=======
                            "id": 1759,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "10849:7:9",
=======
                            "src": "10849:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1446,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "10849:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1449,
=======
                              "id": 1758,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "10849:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1761,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "10849:17:9",
=======
                          "src": "10849:17:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
<<<<<<< HEAD
                        "src": "10821:45:9",
=======
                        "src": "10821:45:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
<<<<<<< HEAD
                      "id": 1451,
                      "nodeType": "ExpressionStatement",
                      "src": "10821:45:9"
                    },
                    {
                      "expression": {
                        "id": 1460,
=======
                      "id": 1763,
                      "nodeType": "ExpressionStatement",
                      "src": "10821:45:10"
                    },
                    {
                      "expression": {
                        "id": 1772,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1452,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "10880:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1454,
                            "indexExpression": {
                              "id": 1453,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "10893:2:9",
=======
                              "id": 1764,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "10880:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1766,
                            "indexExpression": {
                              "id": 1765,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1714,
                              "src": "10893:2:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "10880:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$784_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1455,
=======
                            "src": "10880:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1767,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "numberMinted",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 783,
                          "src": "10880:29:9",
=======
                          "referencedDeclaration": 1095,
                          "src": "10880:29:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 1458,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1404,
                              "src": "10921:8:9",
=======
                              "id": 1770,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "10921:8:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1457,
=======
                            "id": 1769,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "10913:7:9",
=======
                            "src": "10913:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1456,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "10913:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1459,
=======
                              "id": 1768,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "10913:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1771,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "10913:17:9",
=======
                          "src": "10913:17:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
<<<<<<< HEAD
                        "src": "10880:50:9",
=======
                        "src": "10880:50:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
<<<<<<< HEAD
                      "id": 1461,
                      "nodeType": "ExpressionStatement",
                      "src": "10880:50:9"
                    },
                    {
                      "expression": {
                        "id": 1467,
=======
                      "id": 1773,
                      "nodeType": "ExpressionStatement",
                      "src": "10880:50:10"
                    },
                    {
                      "expression": {
                        "id": 1779,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1462,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "10945:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1464,
                            "indexExpression": {
                              "id": 1463,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "10957:12:9",
=======
                              "id": 1774,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "10945:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1776,
                            "indexExpression": {
                              "id": 1775,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "10957:12:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "10945:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1465,
=======
                            "src": "10945:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1777,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 776,
                          "src": "10945:30:9",
=======
                          "referencedDeclaration": 1088,
                          "src": "10945:30:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
<<<<<<< HEAD
                          "id": 1466,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "10978:2:9",
=======
                          "id": 1778,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "10978:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "10945:35:9",
=======
                        "src": "10945:35:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
<<<<<<< HEAD
                      "id": 1468,
                      "nodeType": "ExpressionStatement",
                      "src": "10945:35:9"
                    },
                    {
                      "expression": {
                        "id": 1478,
=======
                      "id": 1780,
                      "nodeType": "ExpressionStatement",
                      "src": "10945:35:10"
                    },
                    {
                      "expression": {
                        "id": 1790,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1469,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "10994:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1471,
                            "indexExpression": {
                              "id": 1470,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1412,
                              "src": "11006:12:9",
=======
                              "id": 1781,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "10994:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1783,
                            "indexExpression": {
                              "id": 1782,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "11006:12:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "10994:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1472,
=======
                            "src": "10994:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1784,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 778,
                          "src": "10994:40:9",
=======
                          "referencedDeclaration": 1090,
                          "src": "10994:40:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 1475,
=======
                                "id": 1787,
>>>>>>> Till-Pascal
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
<<<<<<< HEAD
                                "src": "11044:5:9",
=======
                                "src": "11044:5:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
<<<<<<< HEAD
                              "id": 1476,
=======
                              "id": 1788,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "11044:15:9",
=======
                              "src": "11044:15:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1474,
=======
                            "id": 1786,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "11037:6:9",
=======
                            "src": "11037:6:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1473,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "11037:6:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1477,
=======
                              "id": 1785,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "11037:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1789,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "11037:23:9",
=======
                          "src": "11037:23:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
<<<<<<< HEAD
                        "src": "10994:66:9",
=======
                        "src": "10994:66:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
<<<<<<< HEAD
                      "id": 1479,
                      "nodeType": "ExpressionStatement",
                      "src": "10994:66:9"
                    },
                    {
                      "assignments": [
                        1481
=======
                      "id": 1791,
                      "nodeType": "ExpressionStatement",
                      "src": "10994:66:10"
                    },
                    {
                      "assignments": [
                        1793
>>>>>>> Till-Pascal
                      ],
                      "declarations": [
                        {
                          "constant": false,
<<<<<<< HEAD
                          "id": 1481,
                          "mutability": "mutable",
                          "name": "updatedIndex",
                          "nameLocation": "11083:12:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1527,
                          "src": "11075:20:9",
=======
                          "id": 1793,
                          "mutability": "mutable",
                          "name": "updatedIndex",
                          "nameLocation": "11083:12:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1839,
                          "src": "11075:20:10",
>>>>>>> Till-Pascal
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1480,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11075:7:9",
=======
                            "id": 1792,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11075:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1483,
                      "initialValue": {
                        "id": 1482,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "11098:12:9",
=======
                      "id": 1795,
                      "initialValue": {
                        "id": 1794,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1724,
                        "src": "11098:12:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                      "src": "11075:35:9"
                    },
                    {
                      "body": {
                        "id": 1521,
                        "nodeType": "Block",
                        "src": "11160:370:9",
=======
                      "src": "11075:35:10"
                    },
                    {
                      "body": {
                        "id": 1833,
                        "nodeType": "Block",
                        "src": "11160:370:10",
>>>>>>> Till-Pascal
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
<<<<<<< HEAD
                                      "id": 1496,
=======
                                      "id": 1808,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
<<<<<<< HEAD
                                      "src": "11200:1:9",
=======
                                      "src": "11200:1:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
<<<<<<< HEAD
                                    "id": 1495,
=======
                                    "id": 1807,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                    "src": "11192:7:9",
=======
                                    "src": "11192:7:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
<<<<<<< HEAD
                                      "id": 1494,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11192:7:9",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1497,
=======
                                      "id": 1806,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11192:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1809,
>>>>>>> Till-Pascal
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "11192:10:9",
=======
                                  "src": "11192:10:10",
>>>>>>> Till-Pascal
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
<<<<<<< HEAD
                                  "id": 1498,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1402,
                                  "src": "11204:2:9",
=======
                                  "id": 1810,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1714,
                                  "src": "11204:2:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
<<<<<<< HEAD
                                  "id": 1499,
                                  "name": "updatedIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1481,
                                  "src": "11208:12:9",
=======
                                  "id": 1811,
                                  "name": "updatedIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1793,
                                  "src": "11208:12:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1493,
=======
                                "id": 1805,
>>>>>>> Till-Pascal
                                "name": "Transfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
<<<<<<< HEAD
                                "src": "11183:8:9",
=======
                                "src": "11183:8:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1500,
=======
                              "id": 1812,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "11183:38:9",
=======
                              "src": "11183:38:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
<<<<<<< HEAD
                            "id": 1501,
                            "nodeType": "EmitStatement",
                            "src": "11178:43:9"
                          },
                          {
                            "condition": {
                              "id": 1502,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "11243:4:9",
=======
                            "id": 1813,
                            "nodeType": "EmitStatement",
                            "src": "11178:43:10"
                          },
                          {
                            "condition": {
                              "id": 1814,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "11243:4:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 1517,
                            "nodeType": "IfStatement",
                            "src": "11239:244:9",
                            "trueBody": {
                              "id": 1516,
                              "nodeType": "Block",
                              "src": "11249:234:9",
=======
                            "id": 1829,
                            "nodeType": "IfStatement",
                            "src": "11239:244:10",
                            "trueBody": {
                              "id": 1828,
                              "nodeType": "Block",
                              "src": "11249:234:10",
>>>>>>> Till-Pascal
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
<<<<<<< HEAD
                                                "id": 1507,
=======
                                                "id": 1819,
>>>>>>> Till-Pascal
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
<<<<<<< HEAD
                                                "src": "11335:1:9",
=======
                                                "src": "11335:1:10",
>>>>>>> Till-Pascal
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
<<<<<<< HEAD
                                              "id": 1506,
=======
                                              "id": 1818,
>>>>>>> Till-Pascal
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                              "src": "11327:7:9",
=======
                                              "src": "11327:7:10",
>>>>>>> Till-Pascal
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
<<<<<<< HEAD
                                                "id": 1505,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11327:7:9",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1508,
=======
                                                "id": 1817,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11327:7:10",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1820,
>>>>>>> Till-Pascal
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                                            "src": "11327:10:9",
=======
                                            "src": "11327:10:10",
>>>>>>> Till-Pascal
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
<<<<<<< HEAD
                                            "id": 1509,
                                            "name": "to",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1402,
                                            "src": "11339:2:9",
=======
                                            "id": 1821,
                                            "name": "to",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1714,
                                            "src": "11339:2:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
<<<<<<< HEAD
                                            "id": 1510,
                                            "name": "updatedIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1481,
                                            "src": "11343:12:9",
=======
                                            "id": 1822,
                                            "name": "updatedIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1793,
                                            "src": "11343:12:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
<<<<<<< HEAD
                                            "id": 1511,
                                            "name": "_data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1406,
                                            "src": "11357:5:9",
=======
                                            "id": 1823,
                                            "name": "_data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1718,
                                            "src": "11357:5:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
<<<<<<< HEAD
                                          "id": 1504,
                                          "name": "_checkOnERC721Received",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1791,
                                          "src": "11304:22:9",
=======
                                          "id": 1816,
                                          "name": "_checkOnERC721Received",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2103,
                                          "src": "11304:22:10",
>>>>>>> Till-Pascal
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 1512,
=======
                                        "id": 1824,
>>>>>>> Till-Pascal
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                        "src": "11304:59:9",
=======
                                        "src": "11304:59:10",
>>>>>>> Till-Pascal
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
<<<<<<< HEAD
                                        "id": 1513,
=======
                                        "id": 1825,
>>>>>>> Till-Pascal
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
<<<<<<< HEAD
                                        "src": "11389:53:9",
=======
                                        "src": "11389:53:10",
>>>>>>> Till-Pascal
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                        },
                                        "value": "ERC721A: transfer to non ERC721Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                        }
                                      ],
<<<<<<< HEAD
                                      "id": 1503,
=======
                                      "id": 1815,
>>>>>>> Till-Pascal
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                                      "src": "11271:7:9",
=======
                                      "src": "11271:7:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 1514,
=======
                                    "id": 1826,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                    "src": "11271:193:9",
=======
                                    "src": "11271:193:10",
>>>>>>> Till-Pascal
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1515,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11271:193:9"
=======
                                  "id": 1827,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11271:193:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
<<<<<<< HEAD
                              "id": 1519,
=======
                              "id": 1831,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
<<<<<<< HEAD
                              "src": "11501:14:9",
                              "subExpression": {
                                "id": 1518,
                                "name": "updatedIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1481,
                                "src": "11501:12:9",
=======
                              "src": "11501:14:10",
                              "subExpression": {
                                "id": 1830,
                                "name": "updatedIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1793,
                                "src": "11501:12:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
<<<<<<< HEAD
                            "id": 1520,
                            "nodeType": "ExpressionStatement",
                            "src": "11501:14:9"
=======
                            "id": 1832,
                            "nodeType": "ExpressionStatement",
                            "src": "11501:14:10"
>>>>>>> Till-Pascal
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1489,
=======
                        "id": 1801,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1487,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1485,
                          "src": "11141:1:9",
=======
                          "id": 1799,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1797,
                          "src": "11141:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 1488,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1404,
                          "src": "11145:8:9",
=======
                          "id": 1800,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1716,
                          "src": "11145:8:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "11141:12:9",
=======
                        "src": "11141:12:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "id": 1522,
                      "initializationExpression": {
                        "assignments": [
                          1485
=======
                      "id": 1834,
                      "initializationExpression": {
                        "assignments": [
                          1797
>>>>>>> Till-Pascal
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 1485,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "11138:1:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1522,
                            "src": "11130:9:9",
=======
                            "id": 1797,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "11138:1:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1834,
                            "src": "11130:9:10",
>>>>>>> Till-Pascal
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1484,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11130:7:9",
=======
                              "id": 1796,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11130:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1486,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11130:9:9"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1491,
=======
                        "id": 1798,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11130:9:10"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 1803,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
<<<<<<< HEAD
                          "src": "11155:3:9",
                          "subExpression": {
                            "id": 1490,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1485,
                            "src": "11155:1:9",
=======
                          "src": "11155:3:10",
                          "subExpression": {
                            "id": 1802,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1797,
                            "src": "11155:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 1492,
                        "nodeType": "ExpressionStatement",
                        "src": "11155:3:9"
                      },
                      "nodeType": "ForStatement",
                      "src": "11125:405:9"
                    },
                    {
                      "expression": {
                        "id": 1525,
=======
                        "id": 1804,
                        "nodeType": "ExpressionStatement",
                        "src": "11155:3:10"
                      },
                      "nodeType": "ForStatement",
                      "src": "11125:405:10"
                    },
                    {
                      "expression": {
                        "id": 1837,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
<<<<<<< HEAD
                          "id": 1523,
                          "name": "currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 786,
                          "src": "11544:12:9",
=======
                          "id": 1835,
                          "name": "currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1098,
                          "src": "11544:12:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
<<<<<<< HEAD
                          "id": 1524,
                          "name": "updatedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1481,
                          "src": "11559:12:9",
=======
                          "id": 1836,
                          "name": "updatedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1793,
                          "src": "11559:12:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "11544:27:9",
=======
                        "src": "11544:27:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD
                      "id": 1526,
                      "nodeType": "ExpressionStatement",
                      "src": "11544:27:9"
=======
                      "id": 1838,
                      "nodeType": "ExpressionStatement",
                      "src": "11544:27:10"
>>>>>>> Till-Pascal
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 1531,
=======
                            "id": 1843,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "11621:1:9",
=======
                            "src": "11621:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1530,
=======
                          "id": 1842,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "11613:7:9",
=======
                          "src": "11613:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1529,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11613:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1532,
=======
                            "id": 1841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11613:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1844,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "11613:10:9",
=======
                        "src": "11613:10:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1533,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "11625:2:9",
=======
                        "id": 1845,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "11625:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1534,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "11629:12:9",
=======
                        "id": 1846,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1724,
                        "src": "11629:12:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1535,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1404,
                        "src": "11643:8:9",
=======
                        "id": 1847,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "11643:8:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1528,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1817,
                      "src": "11592:20:9",
=======
                      "id": 1840,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "11592:20:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1536,
=======
                    "id": 1848,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "11592:60:9",
=======
                    "src": "11592:60:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:60:9"
=======
                  "id": 1849,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:60:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1400,
              "nodeType": "StructuredDocumentation",
              "src": "9920:236:9",
              "text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 1539,
=======
              "id": 1712,
              "nodeType": "StructuredDocumentation",
              "src": "9920:236:10",
              "text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 1851,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
<<<<<<< HEAD
            "nameLocation": "10170:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1409,
=======
            "nameLocation": "10170:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1721,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1402,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10193:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "10185:10:9",
=======
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10193:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "10185:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10185:7:9",
=======
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10185:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1404,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "10213:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "10205:16:9",
=======
                  "id": 1716,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "10213:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "10205:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10205:7:9",
=======
                    "id": 1715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10205:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1406,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10244:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "10231:18:9",
=======
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10244:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "10231:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1405,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10231:5:9",
=======
                    "id": 1717,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10231:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1408,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "10264:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "10259:9:9",
=======
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "10264:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "10259:9:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10259:4:9",
=======
                    "id": 1719,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10259:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "10175:99:9"
            },
            "returnParameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10284:0:9"
            },
            "scope": 1818,
            "src": "10161:1498:9",
=======
              "src": "10175:99:10"
            },
            "returnParameters": {
              "id": 1722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10284:0:10"
            },
            "scope": 2130,
            "src": "10161:1498:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1703,
              "nodeType": "Block",
              "src": "12001:1858:9",
              "statements": [
                {
                  "assignments": [
                    1551
=======
              "id": 2015,
              "nodeType": "Block",
              "src": "12001:1858:10",
              "statements": [
                {
                  "assignments": [
                    1863
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1551,
                      "mutability": "mutable",
                      "name": "prevOwnership",
                      "nameLocation": "12033:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "12011:35:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership"
                      },
                      "typeName": {
                        "id": 1550,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1549,
                          "name": "TokenOwnership",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 779,
                          "src": "12011:14:9"
                        },
                        "referencedDeclaration": 779,
                        "src": "12011:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
=======
                      "id": 1863,
                      "mutability": "mutable",
                      "name": "prevOwnership",
                      "nameLocation": "12033:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2015,
                      "src": "12011:35:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership"
                      },
                      "typeName": {
                        "id": 1862,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1861,
                          "name": "TokenOwnership",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1091,
                          "src": "12011:14:10"
                        },
                        "referencedDeclaration": 1091,
                        "src": "12011:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage_ptr",
>>>>>>> Till-Pascal
                          "typeString": "struct ERC721A.TokenOwnership"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1555,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1553,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "12061:7:9",
=======
                  "id": 1867,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1865,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "12061:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1552,
                      "name": "ownershipOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "12049:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$779_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                      }
                    },
                    "id": 1554,
=======
                      "id": 1864,
                      "name": "ownershipOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "12049:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1091_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                      }
                    },
                    "id": 1866,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12049:20:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
=======
                    "src": "12049:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
>>>>>>> Till-Pascal
                      "typeString": "struct ERC721A.TokenOwnership memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "12011:58:9"
                },
                {
                  "assignments": [
                    1557
=======
                  "src": "12011:58:10"
                },
                {
                  "assignments": [
                    1869
>>>>>>> Till-Pascal
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1557,
                      "mutability": "mutable",
                      "name": "isApprovedOrOwner",
                      "nameLocation": "12085:17:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "12080:22:9",
=======
                      "id": 1869,
                      "mutability": "mutable",
                      "name": "isApprovedOrOwner",
                      "nameLocation": "12085:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2015,
                      "src": "12080:22:10",
>>>>>>> Till-Pascal
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1556,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12080:4:9",
=======
                        "id": 1868,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12080:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1578,
=======
                  "id": 1890,
>>>>>>> Till-Pascal
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 1576,
=======
                        "id": 1888,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
<<<<<<< HEAD
                          "id": 1569,
=======
                          "id": 1881,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
<<<<<<< HEAD
                            "id": 1562,
=======
                            "id": 1874,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1558,
=======
                                "id": 1870,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "12106:10:9",
=======
                                "src": "12106:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1559,
=======
                              "id": 1871,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "12106:12:9",
=======
                              "src": "12106:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
<<<<<<< HEAD
                                "id": 1560,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1551,
                                "src": "12122:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1561,
=======
                                "id": 1872,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1863,
                                "src": "12122:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1873,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 776,
                              "src": "12122:18:9",
=======
                              "referencedDeclaration": 1088,
                              "src": "12122:18:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
<<<<<<< HEAD
                            "src": "12106:34:9",
=======
                            "src": "12106:34:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
<<<<<<< HEAD
                            "id": 1568,
=======
                            "id": 1880,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 1564,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1546,
                                  "src": "12168:7:9",
=======
                                  "id": 1876,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1858,
                                  "src": "12168:7:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1563,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "12156:11:9",
=======
                                "id": 1875,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1547,
                                "src": "12156:11:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1565,
=======
                              "id": 1877,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "12156:20:9",
=======
                              "src": "12156:20:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1566,
=======
                                "id": 1878,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "12180:10:9",
=======
                                "src": "12180:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1567,
=======
                              "id": 1879,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "12180:12:9",
=======
                              "src": "12180:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
<<<<<<< HEAD
                            "src": "12156:36:9",
=======
                            "src": "12156:36:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
<<<<<<< HEAD
                          "src": "12106:86:9",
=======
                          "src": "12106:86:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 1571,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1551,
                                "src": "12225:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1572,
=======
                                "id": 1883,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1863,
                                "src": "12225:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1884,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 776,
                              "src": "12225:18:9",
=======
                              "referencedDeclaration": 1088,
                              "src": "12225:18:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1573,
=======
                                "id": 1885,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "12245:10:9",
=======
                                "src": "12245:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1574,
=======
                              "id": 1886,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "12245:12:9",
=======
                              "src": "12245:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1570,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1287,
                            "src": "12208:16:9",
=======
                            "id": 1882,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1599,
                            "src": "12208:16:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1575,
=======
                          "id": 1887,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "12208:50:9",
=======
                          "src": "12208:50:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "12106:152:9",
=======
                        "src": "12106:152:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 1577,
=======
                    "id": 1889,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "12105:154:9",
=======
                    "src": "12105:154:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "12080:179:9"
=======
                  "src": "12080:179:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1580,
                        "name": "isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1557,
                        "src": "12278:17:9",
=======
                        "id": 1892,
                        "name": "isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "12278:17:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
<<<<<<< HEAD
                        "id": 1581,
=======
                        "id": 1893,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "12297:52:9",
=======
                        "src": "12297:52:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
                          "typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721A: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
                          "typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1579,
=======
                      "id": 1891,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "12270:7:9",
=======
                      "src": "12270:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1582,
=======
                    "id": 1894,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12270:80:9",
=======
                    "src": "12270:80:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "12270:80:9"
=======
                  "id": 1895,
                  "nodeType": "ExpressionStatement",
                  "src": "12270:80:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1588,
=======
                        "id": 1900,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 1585,
                            "name": "prevOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1551,
                            "src": "12369:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                              "typeString": "struct ERC721A.TokenOwnership memory"
                            }
                          },
                          "id": 1586,
=======
                            "id": 1897,
                            "name": "prevOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1863,
                            "src": "12369:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                              "typeString": "struct ERC721A.TokenOwnership memory"
                            }
                          },
                          "id": 1898,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 776,
                          "src": "12369:18:9",
=======
                          "referencedDeclaration": 1088,
                          "src": "12369:18:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 1587,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1542,
                          "src": "12391:4:9",
=======
                          "id": 1899,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1854,
                          "src": "12391:4:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "12369:26:9",
=======
                        "src": "12369:26:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
<<<<<<< HEAD
                        "id": 1589,
=======
                        "id": 1901,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "12397:40:9",
=======
                        "src": "12397:40:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
                          "typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
                        },
                        "value": "ERC721A: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
                          "typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1584,
=======
                      "id": 1896,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "12361:7:9",
=======
                      "src": "12361:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1590,
=======
                    "id": 1902,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12361:77:9",
=======
                    "src": "12361:77:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "12361:77:9"
=======
                  "id": 1903,
                  "nodeType": "ExpressionStatement",
                  "src": "12361:77:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1598,
=======
                        "id": 1910,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1593,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1544,
                          "src": "12456:2:9",
=======
                          "id": 1905,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1856,
                          "src": "12456:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 1596,
=======
                              "id": 1908,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "12470:1:9",
=======
                              "src": "12470:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1595,
=======
                            "id": 1907,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "12462:7:9",
=======
                            "src": "12462:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1594,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12462:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1597,
=======
                              "id": 1906,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12462:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1909,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "12462:10:9",
=======
                          "src": "12462:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "12456:16:9",
=======
                        "src": "12456:16:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 1599,
=======
                        "id": 1911,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "12474:39:9",
=======
                        "src": "12474:39:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
                          "typeString": "literal_string \"ERC721A: transfer to the zero address\""
                        },
                        "value": "ERC721A: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
                          "typeString": "literal_string \"ERC721A: transfer to the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1592,
=======
                      "id": 1904,
>>>>>>> Till-Pascal
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "12448:7:9",
=======
                      "src": "12448:7:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1600,
=======
                    "id": 1912,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12448:66:9",
=======
                    "src": "12448:66:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1601,
                  "nodeType": "ExpressionStatement",
                  "src": "12448:66:9"
=======
                  "id": 1913,
                  "nodeType": "ExpressionStatement",
                  "src": "12448:66:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1603,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "12547:4:9",
=======
                        "id": 1915,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "12547:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1604,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "12553:2:9",
=======
                        "id": 1916,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "12553:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1605,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "12557:7:9",
=======
                        "id": 1917,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "12557:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 1606,
=======
                        "id": 1918,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "12566:1:9",
=======
                        "src": "12566:1:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1602,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "12525:21:9",
=======
                      "id": 1914,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2116,
                      "src": "12525:21:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1607,
=======
                    "id": 1919,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12525:43:9",
=======
                    "src": "12525:43:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1608,
                  "nodeType": "ExpressionStatement",
                  "src": "12525:43:9"
=======
                  "id": 1920,
                  "nodeType": "ExpressionStatement",
                  "src": "12525:43:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 1612,
=======
                            "id": 1924,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "12647:1:9",
=======
                            "src": "12647:1:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1611,
=======
                          "id": 1923,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "12639:7:9",
=======
                          "src": "12639:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1610,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12639:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1613,
=======
                            "id": 1922,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12639:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1925,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "12639:10:9",
=======
                        "src": "12639:10:10",
>>>>>>> Till-Pascal
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1614,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "12651:7:9",
=======
                        "id": 1926,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "12651:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 1615,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1551,
                          "src": "12660:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1616,
=======
                          "id": 1927,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1863,
                          "src": "12660:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1928,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 776,
                        "src": "12660:18:9",
=======
                        "referencedDeclaration": 1088,
                        "src": "12660:18:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1609,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "12630:8:9",
=======
                      "id": 1921,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "12630:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1617,
=======
                    "id": 1929,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "12630:49:9",
=======
                    "src": "12630:49:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "12630:49:9"
                },
                {
                  "id": 1689,
                  "nodeType": "UncheckedBlock",
                  "src": "12945:813:9",
                  "statements": [
                    {
                      "expression": {
                        "id": 1624,
=======
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "12630:49:10"
                },
                {
                  "id": 2001,
                  "nodeType": "UncheckedBlock",
                  "src": "12945:813:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1936,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1619,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "12969:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1621,
                            "indexExpression": {
                              "id": 1620,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1542,
                              "src": "12982:4:9",
=======
                              "id": 1931,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "12969:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1933,
                            "indexExpression": {
                              "id": 1932,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1854,
                              "src": "12982:4:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "12969:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$784_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1622,
=======
                            "src": "12969:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1934,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 781,
                          "src": "12969:26:9",
=======
                          "referencedDeclaration": 1093,
                          "src": "12969:26:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 1623,
=======
                          "id": 1935,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "12999:1:9",
=======
                          "src": "12999:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
<<<<<<< HEAD
                        "src": "12969:31:9",
=======
                        "src": "12969:31:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
<<<<<<< HEAD
                      "id": 1625,
                      "nodeType": "ExpressionStatement",
                      "src": "12969:31:9"
                    },
                    {
                      "expression": {
                        "id": 1631,
=======
                      "id": 1937,
                      "nodeType": "ExpressionStatement",
                      "src": "12969:31:10"
                    },
                    {
                      "expression": {
                        "id": 1943,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1626,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "13014:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1628,
                            "indexExpression": {
                              "id": 1627,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1544,
                              "src": "13027:2:9",
=======
                              "id": 1938,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "13014:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1096_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1940,
                            "indexExpression": {
                              "id": 1939,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1856,
                              "src": "13027:2:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "13014:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$784_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1629,
=======
                            "src": "13014:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$1096_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1941,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 781,
                          "src": "13014:24:9",
=======
                          "referencedDeclaration": 1093,
                          "src": "13014:24:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 1630,
=======
                          "id": 1942,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "13042:1:9",
=======
                          "src": "13042:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
<<<<<<< HEAD
                        "src": "13014:29:9",
=======
                        "src": "13014:29:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
<<<<<<< HEAD
                      "id": 1632,
                      "nodeType": "ExpressionStatement",
                      "src": "13014:29:9"
                    },
                    {
                      "expression": {
                        "id": 1638,
=======
                      "id": 1944,
                      "nodeType": "ExpressionStatement",
                      "src": "13014:29:10"
                    },
                    {
                      "expression": {
                        "id": 1950,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1633,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "13058:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1635,
                            "indexExpression": {
                              "id": 1634,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1546,
                              "src": "13070:7:9",
=======
                              "id": 1945,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "13058:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1947,
                            "indexExpression": {
                              "id": 1946,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1858,
                              "src": "13070:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "13058:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1636,
=======
                            "src": "13058:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1948,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 776,
                          "src": "13058:25:9",
=======
                          "referencedDeclaration": 1088,
                          "src": "13058:25:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
<<<<<<< HEAD
                          "id": 1637,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1544,
                          "src": "13086:2:9",
=======
                          "id": 1949,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1856,
                          "src": "13086:2:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "13058:30:9",
=======
                        "src": "13058:30:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
<<<<<<< HEAD
                      "id": 1639,
                      "nodeType": "ExpressionStatement",
                      "src": "13058:30:9"
                    },
                    {
                      "expression": {
                        "id": 1649,
=======
                      "id": 1951,
                      "nodeType": "ExpressionStatement",
                      "src": "13058:30:10"
                    },
                    {
                      "expression": {
                        "id": 1961,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1640,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "13102:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1642,
                            "indexExpression": {
                              "id": 1641,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1546,
                              "src": "13114:7:9",
=======
                              "id": 1952,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "13102:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1954,
                            "indexExpression": {
                              "id": 1953,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1858,
                              "src": "13114:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "13102:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1643,
=======
                            "src": "13102:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1955,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 778,
                          "src": "13102:35:9",
=======
                          "referencedDeclaration": 1090,
                          "src": "13102:35:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 1646,
=======
                                "id": 1958,
>>>>>>> Till-Pascal
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
<<<<<<< HEAD
                                "src": "13147:5:9",
=======
                                "src": "13147:5:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
<<<<<<< HEAD
                              "id": 1647,
=======
                              "id": 1959,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "13147:15:9",
=======
                              "src": "13147:15:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1645,
=======
                            "id": 1957,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "13140:6:9",
=======
                            "src": "13140:6:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1644,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "13140:6:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1648,
=======
                              "id": 1956,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "13140:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1960,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "13140:23:9",
=======
                          "src": "13140:23:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
<<<<<<< HEAD
                        "src": "13102:61:9",
=======
                        "src": "13102:61:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
<<<<<<< HEAD
                      "id": 1650,
                      "nodeType": "ExpressionStatement",
                      "src": "13102:61:9"
                    },
                    {
                      "assignments": [
                        1652
=======
                      "id": 1962,
                      "nodeType": "ExpressionStatement",
                      "src": "13102:61:10"
                    },
                    {
                      "assignments": [
                        1964
>>>>>>> Till-Pascal
                      ],
                      "declarations": [
                        {
                          "constant": false,
<<<<<<< HEAD
                          "id": 1652,
                          "mutability": "mutable",
                          "name": "nextTokenId",
                          "nameLocation": "13419:11:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1689,
                          "src": "13411:19:9",
=======
                          "id": 1964,
                          "mutability": "mutable",
                          "name": "nextTokenId",
                          "nameLocation": "13419:11:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 2001,
                          "src": "13411:19:10",
>>>>>>> Till-Pascal
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1651,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13411:7:9",
=======
                            "id": 1963,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13411:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1656,
=======
                      "id": 1968,
>>>>>>> Till-Pascal
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1655,
=======
                        "id": 1967,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 1653,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1546,
                          "src": "13433:7:9",
=======
                          "id": 1965,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1858,
                          "src": "13433:7:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 1654,
=======
                          "id": 1966,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "13443:1:9",
=======
                          "src": "13443:1:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
<<<<<<< HEAD
                        "src": "13433:11:9",
=======
                        "src": "13433:11:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                      "src": "13411:33:9"
=======
                      "src": "13411:33:10"
>>>>>>> Till-Pascal
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 1665,
=======
                        "id": 1977,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 1657,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "13462:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1659,
                            "indexExpression": {
                              "id": 1658,
                              "name": "nextTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1652,
                              "src": "13474:11:9",
=======
                              "id": 1969,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "13462:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1971,
                            "indexExpression": {
                              "id": 1970,
                              "name": "nextTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1964,
                              "src": "13474:11:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "13462:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1660,
=======
                            "src": "13462:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1972,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 776,
                          "src": "13462:29:9",
=======
                          "referencedDeclaration": 1088,
                          "src": "13462:29:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 1663,
=======
                              "id": 1975,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "13503:1:9",
=======
                              "src": "13503:1:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 1662,
=======
                            "id": 1974,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "13495:7:9",
=======
                            "src": "13495:7:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 1661,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13495:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1664,
=======
                              "id": 1973,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13495:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1976,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "13495:10:9",
=======
                          "src": "13495:10:10",
>>>>>>> Till-Pascal
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "13462:43:9",
=======
                        "src": "13462:43:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      "id": 1688,
                      "nodeType": "IfStatement",
                      "src": "13458:290:9",
                      "trueBody": {
                        "id": 1687,
                        "nodeType": "Block",
                        "src": "13507:241:9",
=======
                      "id": 2000,
                      "nodeType": "IfStatement",
                      "src": "13458:290:10",
                      "trueBody": {
                        "id": 1999,
                        "nodeType": "Block",
                        "src": "13507:241:10",
>>>>>>> Till-Pascal
                        "statements": [
                          {
                            "condition": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 1667,
                                  "name": "nextTokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1652,
                                  "src": "13537:11:9",
=======
                                  "id": 1979,
                                  "name": "nextTokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1964,
                                  "src": "13537:11:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1666,
                                "name": "_exists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1367,
                                "src": "13529:7:9",
=======
                                "id": 1978,
                                "name": "_exists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "13529:7:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view returns (bool)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1668,
=======
                              "id": 1980,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "13529:20:9",
=======
                              "src": "13529:20:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
<<<<<<< HEAD
                            "id": 1686,
                            "nodeType": "IfStatement",
                            "src": "13525:209:9",
                            "trueBody": {
                              "id": 1685,
                              "nodeType": "Block",
                              "src": "13551:183:9",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1675,
=======
                            "id": 1998,
                            "nodeType": "IfStatement",
                            "src": "13525:209:10",
                            "trueBody": {
                              "id": 1997,
                              "nodeType": "Block",
                              "src": "13551:183:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1987,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
<<<<<<< HEAD
                                          "id": 1669,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 795,
                                          "src": "13573:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1671,
                                        "indexExpression": {
                                          "id": 1670,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1652,
                                          "src": "13585:11:9",
=======
                                          "id": 1981,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1107,
                                          "src": "13573:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1983,
                                        "indexExpression": {
                                          "id": 1982,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1964,
                                          "src": "13585:11:10",
>>>>>>> Till-Pascal
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "13573:24:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1672,
=======
                                        "src": "13573:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1984,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 776,
                                      "src": "13573:29:9",
=======
                                      "referencedDeclaration": 1088,
                                      "src": "13573:29:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 1673,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1551,
                                        "src": "13605:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1674,
=======
                                        "id": 1985,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1863,
                                        "src": "13605:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1986,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 776,
                                      "src": "13605:18:9",
=======
                                      "referencedDeclaration": 1088,
                                      "src": "13605:18:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "13573:50:9",
=======
                                    "src": "13573:50:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1676,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13573:50:9"
                                },
                                {
                                  "expression": {
                                    "id": 1683,
=======
                                  "id": 1988,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13573:50:10"
                                },
                                {
                                  "expression": {
                                    "id": 1995,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
<<<<<<< HEAD
                                          "id": 1677,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 795,
                                          "src": "13645:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1679,
                                        "indexExpression": {
                                          "id": 1678,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1652,
                                          "src": "13657:11:9",
=======
                                          "id": 1989,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1107,
                                          "src": "13645:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1091_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1991,
                                        "indexExpression": {
                                          "id": 1990,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1964,
                                          "src": "13657:11:10",
>>>>>>> Till-Pascal
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "13645:24:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1680,
=======
                                        "src": "13645:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1992,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 778,
                                      "src": "13645:39:9",
=======
                                      "referencedDeclaration": 1090,
                                      "src": "13645:39:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 1681,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1551,
                                        "src": "13687:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1682,
=======
                                        "id": 1993,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1863,
                                        "src": "13687:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$1091_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1994,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 778,
                                      "src": "13687:28:9",
=======
                                      "referencedDeclaration": 1090,
                                      "src": "13687:28:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "13645:70:9",
=======
                                    "src": "13645:70:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 1684,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13645:70:9"
=======
                                  "id": 1996,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13645:70:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1691,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "13782:4:9",
=======
                        "id": 2003,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "13782:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1692,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "13788:2:9",
=======
                        "id": 2004,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "13788:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1693,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "13792:7:9",
=======
                        "id": 2005,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "13792:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1690,
=======
                      "id": 2002,
>>>>>>> Till-Pascal
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
<<<<<<< HEAD
                      "src": "13773:8:9",
=======
                      "src": "13773:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1694,
=======
                    "id": 2006,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "13773:27:9",
=======
                    "src": "13773:27:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1695,
                  "nodeType": "EmitStatement",
                  "src": "13768:32:9"
=======
                  "id": 2007,
                  "nodeType": "EmitStatement",
                  "src": "13768:32:10"
>>>>>>> Till-Pascal
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1697,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "13831:4:9",
=======
                        "id": 2009,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1854,
                        "src": "13831:4:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1698,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "13837:2:9",
=======
                        "id": 2010,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1856,
                        "src": "13837:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1699,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "13841:7:9",
=======
                        "id": 2011,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1858,
                        "src": "13841:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 1700,
=======
                        "id": 2012,
>>>>>>> Till-Pascal
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "13850:1:9",
=======
                        "src": "13850:1:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1696,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1817,
                      "src": "13810:20:9",
=======
                      "id": 2008,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2129,
                      "src": "13810:20:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1701,
=======
                    "id": 2013,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "13810:42:9",
=======
                    "src": "13810:42:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "13810:42:9"
=======
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "13810:42:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1540,
              "nodeType": "StructuredDocumentation",
              "src": "11665:231:9",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1704,
=======
              "id": 1852,
              "nodeType": "StructuredDocumentation",
              "src": "11665:231:10",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 2016,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
<<<<<<< HEAD
            "nameLocation": "11910:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1547,
=======
            "nameLocation": "11910:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1859,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11937:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "11929:12:9",
=======
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11937:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "11929:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11929:7:9",
=======
                    "id": 1853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11929:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11959:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "11951:10:9",
=======
                  "id": 1856,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11959:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "11951:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11951:7:9",
=======
                    "id": 1855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11951:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1546,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11979:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "11971:15:9",
=======
                  "id": 1858,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11979:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "11971:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11971:7:9",
=======
                    "id": 1857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11971:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "11919:73:9"
            },
            "returnParameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12001:0:9"
            },
            "scope": 1818,
            "src": "11901:1958:9",
=======
              "src": "11919:73:10"
            },
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12001:0:10"
            },
            "scope": 2130,
            "src": "11901:1958:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1726,
              "nodeType": "Block",
              "src": "14070:89:9",
              "statements": [
                {
                  "expression": {
                    "id": 1718,
=======
              "id": 2038,
              "nodeType": "Block",
              "src": "14070:89:10",
              "statements": [
                {
                  "expression": {
                    "id": 2030,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 1714,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "14080:15:9",
=======
                        "id": 2026,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "14080:15:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
<<<<<<< HEAD
                      "id": 1716,
                      "indexExpression": {
                        "id": 1715,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "14096:7:9",
=======
                      "id": 2028,
                      "indexExpression": {
                        "id": 2027,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "14096:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "14080:24:9",
=======
                      "src": "14080:24:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 1717,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1707,
                      "src": "14107:2:9",
=======
                      "id": 2029,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2019,
                      "src": "14107:2:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "14080:29:9",
=======
                    "src": "14080:29:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "14080:29:9"
=======
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "14080:29:10"
>>>>>>> Till-Pascal
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1721,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "14133:5:9",
=======
                        "id": 2033,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "14133:5:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1722,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "14140:2:9",
=======
                        "id": 2034,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "14140:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1723,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "14144:7:9",
=======
                        "id": 2035,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "14144:7:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1720,
=======
                      "id": 2032,
>>>>>>> Till-Pascal
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
<<<<<<< HEAD
                      "src": "14124:8:9",
=======
                      "src": "14124:8:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1724,
=======
                    "id": 2036,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "14124:28:9",
=======
                    "src": "14124:28:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1725,
                  "nodeType": "EmitStatement",
                  "src": "14119:33:9"
=======
                  "id": 2037,
                  "nodeType": "EmitStatement",
                  "src": "14119:33:10"
>>>>>>> Till-Pascal
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1705,
              "nodeType": "StructuredDocumentation",
              "src": "13865:100:9",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1727,
=======
              "id": 2017,
              "nodeType": "StructuredDocumentation",
              "src": "13865:100:10",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 2039,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
<<<<<<< HEAD
            "nameLocation": "13979:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1712,
=======
            "nameLocation": "13979:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2024,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14005:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "13997:10:9",
=======
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14005:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "13997:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13997:7:9",
=======
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13997:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1709,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14025:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "14017:15:9",
=======
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14025:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "14017:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14017:7:9",
=======
                    "id": 2020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14017:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1711,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "14050:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1727,
                  "src": "14042:13:9",
=======
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "14050:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "14042:13:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14042:7:9",
=======
                    "id": 2022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14042:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "13987:74:9"
            },
            "returnParameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14070:0:9"
            },
            "scope": 1818,
            "src": "13970:189:9",
=======
              "src": "13987:74:10"
            },
            "returnParameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14070:0:10"
            },
            "scope": 2130,
            "src": "13970:189:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1790,
              "nodeType": "Block",
              "src": "14868:627:9",
=======
              "id": 2102,
              "nodeType": "Block",
              "src": "14868:627:10",
>>>>>>> Till-Pascal
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
<<<<<<< HEAD
                        "id": 1741,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "14882:2:9",
=======
                        "id": 2053,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2044,
                        "src": "14882:2:10",
>>>>>>> Till-Pascal
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
<<<<<<< HEAD
                      "id": 1742,
=======
                      "id": 2054,
>>>>>>> Till-Pascal
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 209,
<<<<<<< HEAD
                      "src": "14882:13:9",
=======
                      "src": "14882:13:10",
>>>>>>> Till-Pascal
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1743,
=======
                    "id": 2055,
>>>>>>> Till-Pascal
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "14882:15:9",
=======
                    "src": "14882:15:10",
>>>>>>> Till-Pascal
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
<<<<<<< HEAD
                    "id": 1788,
                    "nodeType": "Block",
                    "src": "15453:36:9",
=======
                    "id": 2100,
                    "nodeType": "Block",
                    "src": "15453:36:10",
>>>>>>> Till-Pascal
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 1786,
=======
                          "id": 2098,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "15474:4:9",
=======
                          "src": "15474:4:10",
>>>>>>> Till-Pascal
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "functionReturnParameters": 1740,
                        "id": 1787,
                        "nodeType": "Return",
                        "src": "15467:11:9"
                      }
                    ]
                  },
                  "id": 1789,
                  "nodeType": "IfStatement",
                  "src": "14878:611:9",
                  "trueBody": {
                    "id": 1785,
                    "nodeType": "Block",
                    "src": "14899:548:9",
=======
                        "functionReturnParameters": 2052,
                        "id": 2099,
                        "nodeType": "Return",
                        "src": "15467:11:10"
                      }
                    ]
                  },
                  "id": 2101,
                  "nodeType": "IfStatement",
                  "src": "14878:611:10",
                  "trueBody": {
                    "id": 2097,
                    "nodeType": "Block",
                    "src": "14899:548:10",
>>>>>>> Till-Pascal
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
<<<<<<< HEAD
                              "id": 1765,
                              "nodeType": "Block",
                              "src": "15014:95:9",
=======
                              "id": 2077,
                              "nodeType": "Block",
                              "src": "15014:95:10",
>>>>>>> Till-Pascal
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
<<<<<<< HEAD
                                    "id": 1763,
=======
                                    "id": 2075,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
<<<<<<< HEAD
                                      "id": 1757,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1755,
                                      "src": "15039:6:9",
=======
                                      "id": 2069,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2067,
                                      "src": "15039:6:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
<<<<<<< HEAD
                                              "id": 1759,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1732,
                                              "src": "15065:2:9",
=======
                                              "id": 2071,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2044,
                                              "src": "15065:2:10",
>>>>>>> Till-Pascal
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
<<<<<<< HEAD
                                            "id": 1758,
=======
                                            "id": 2070,
>>>>>>> Till-Pascal
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 133,
<<<<<<< HEAD
                                            "src": "15049:15:9",
=======
                                            "src": "15049:15:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
<<<<<<< HEAD
                                          "id": 1760,
=======
                                          "id": 2072,
>>>>>>> Till-Pascal
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "15049:19:9",
=======
                                          "src": "15049:19:10",
>>>>>>> Till-Pascal
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$133",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 1761,
=======
                                        "id": 2073,
>>>>>>> Till-Pascal
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 132,
<<<<<<< HEAD
                                        "src": "15049:36:9",
=======
                                        "src": "15049:36:10",
>>>>>>> Till-Pascal
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
<<<<<<< HEAD
                                      "id": 1762,
=======
                                      "id": 2074,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "src": "15049:45:9",
=======
                                      "src": "15049:45:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
<<<<<<< HEAD
                                    "src": "15039:55:9",
=======
                                    "src": "15039:55:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
<<<<<<< HEAD
                                  "functionReturnParameters": 1740,
                                  "id": 1764,
                                  "nodeType": "Return",
                                  "src": "15032:62:9"
=======
                                  "functionReturnParameters": 2052,
                                  "id": 2076,
                                  "nodeType": "Return",
                                  "src": "15032:62:10"
>>>>>>> Till-Pascal
                                }
                              ]
                            },
                            "errorName": "",
<<<<<<< HEAD
                            "id": 1766,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1756,
=======
                            "id": 2078,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2068,
>>>>>>> Till-Pascal
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
<<<<<<< HEAD
                                  "id": 1755,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "15006:6:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1766,
                                  "src": "14999:13:9",
=======
                                  "id": 2067,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "15006:6:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2078,
                                  "src": "14999:13:10",
>>>>>>> Till-Pascal
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 1754,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14999:6:9",
=======
                                    "id": 2066,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14999:6:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
<<<<<<< HEAD
                              "src": "14998:15:9"
                            },
                            "src": "14990:119:9"
                          },
                          {
                            "block": {
                              "id": 1782,
                              "nodeType": "Block",
                              "src": "15138:299:9",
=======
                              "src": "14998:15:10"
                            },
                            "src": "14990:119:10"
                          },
                          {
                            "block": {
                              "id": 2094,
                              "nodeType": "Block",
                              "src": "15138:299:10",
>>>>>>> Till-Pascal
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 1773,
=======
                                    "id": 2085,
>>>>>>> Till-Pascal
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 1770,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1768,
                                        "src": "15160:6:9",
=======
                                        "id": 2082,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2080,
                                        "src": "15160:6:10",
>>>>>>> Till-Pascal
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
<<<<<<< HEAD
                                      "id": 1771,
=======
                                      "id": 2083,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "src": "15160:13:9",
=======
                                      "src": "15160:13:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
<<<<<<< HEAD
                                      "id": 1772,
=======
                                      "id": 2084,
>>>>>>> Till-Pascal
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
<<<<<<< HEAD
                                      "src": "15177:1:9",
=======
                                      "src": "15177:1:10",
>>>>>>> Till-Pascal
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
<<<<<<< HEAD
                                    "src": "15160:18:9",
=======
                                    "src": "15160:18:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
<<<<<<< HEAD
                                    "id": 1780,
                                    "nodeType": "Block",
                                    "src": "15288:135:9",
=======
                                    "id": 2092,
                                    "nodeType": "Block",
                                    "src": "15288:135:10",
>>>>>>> Till-Pascal
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
<<<<<<< HEAD
                                          "src": "15319:86:9",
=======
                                          "src": "15319:86:10",
>>>>>>> Till-Pascal
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                                                        "src": "15356:2:9",
=======
                                                        "src": "15356:2:10",
>>>>>>> Till-Pascal
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                        "src": "15360:6:9"
=======
                                                        "src": "15360:6:10"
>>>>>>> Till-Pascal
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                      "src": "15352:3:9"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15352:15:9"
=======
                                                      "src": "15352:3:10"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15352:15:10"
>>>>>>> Till-Pascal
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                        "src": "15375:6:9"
=======
                                                        "src": "15375:6:10"
>>>>>>> Till-Pascal
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                      "src": "15369:5:9"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15369:13:9"
=======
                                                      "src": "15369:5:10"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15369:13:10"
>>>>>>> Till-Pascal
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                                  "src": "15345:6:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15345:38:9"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "15345:38:9"
=======
                                                  "src": "15345:6:10"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15345:38:10"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "15345:38:10"
>>>>>>> Till-Pascal
                                            }
                                          ]
                                        },
                                        "evmVersion": "london",
                                        "externalReferences": [
                                          {
<<<<<<< HEAD
                                            "declaration": 1768,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15360:6:9",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1768,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15375:6:9",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1779,
                                        "nodeType": "InlineAssembly",
                                        "src": "15310:95:9"
                                      }
                                    ]
                                  },
                                  "id": 1781,
                                  "nodeType": "IfStatement",
                                  "src": "15156:267:9",
                                  "trueBody": {
                                    "id": 1778,
                                    "nodeType": "Block",
                                    "src": "15180:102:9",
=======
                                            "declaration": 2080,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15360:6:10",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 2080,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15375:6:10",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 2091,
                                        "nodeType": "InlineAssembly",
                                        "src": "15310:95:10"
                                      }
                                    ]
                                  },
                                  "id": 2093,
                                  "nodeType": "IfStatement",
                                  "src": "15156:267:10",
                                  "trueBody": {
                                    "id": 2090,
                                    "nodeType": "Block",
                                    "src": "15180:102:10",
>>>>>>> Till-Pascal
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
<<<<<<< HEAD
                                              "id": 1775,
=======
                                              "id": 2087,
>>>>>>> Till-Pascal
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
<<<<<<< HEAD
                                              "src": "15209:53:9",
=======
                                              "src": "15209:53:10",
>>>>>>> Till-Pascal
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                                "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721A: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                                "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
<<<<<<< HEAD
                                            "id": 1774,
=======
                                            "id": 2086,
>>>>>>> Till-Pascal
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              4294967277,
                                              4294967277
                                            ],
                                            "referencedDeclaration": 4294967277,
<<<<<<< HEAD
                                            "src": "15202:6:9",
=======
                                            "src": "15202:6:10",
>>>>>>> Till-Pascal
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
<<<<<<< HEAD
                                          "id": 1776,
=======
                                          "id": 2088,
>>>>>>> Till-Pascal
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "15202:61:9",
=======
                                          "src": "15202:61:10",
>>>>>>> Till-Pascal
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 1777,
                                        "nodeType": "ExpressionStatement",
                                        "src": "15202:61:9"
=======
                                        "id": 2089,
                                        "nodeType": "ExpressionStatement",
                                        "src": "15202:61:10"
>>>>>>> Till-Pascal
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
<<<<<<< HEAD
                            "id": 1783,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1769,
=======
                            "id": 2095,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2081,
>>>>>>> Till-Pascal
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
<<<<<<< HEAD
                                  "id": 1768,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "15130:6:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1783,
                                  "src": "15117:19:9",
=======
                                  "id": 2080,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "15130:6:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2095,
                                  "src": "15117:19:10",
>>>>>>> Till-Pascal
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 1767,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15117:5:9",
=======
                                    "id": 2079,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15117:5:10",
>>>>>>> Till-Pascal
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
<<<<<<< HEAD
                              "src": "15116:21:9"
                            },
                            "src": "15110:327:9"
=======
                              "src": "15116:21:10"
                            },
                            "src": "15110:327:10"
>>>>>>> Till-Pascal
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
<<<<<<< HEAD
                                "id": 1748,
=======
                                "id": 2060,
>>>>>>> Till-Pascal
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
<<<<<<< HEAD
                                "src": "14954:10:9",
=======
                                "src": "14954:10:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1749,
=======
                              "id": 2061,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "14954:12:9",
=======
                              "src": "14954:12:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
<<<<<<< HEAD
                              "id": 1750,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1730,
                              "src": "14968:4:9",
=======
                              "id": 2062,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2042,
                              "src": "14968:4:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
<<<<<<< HEAD
                              "id": 1751,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1734,
                              "src": "14974:7:9",
=======
                              "id": 2063,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "14974:7:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
<<<<<<< HEAD
                              "id": 1752,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1736,
                              "src": "14983:5:9",
=======
                              "id": 2064,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2048,
                              "src": "14983:5:10",
>>>>>>> Till-Pascal
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 1745,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1732,
                                  "src": "14933:2:9",
=======
                                  "id": 2057,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2044,
                                  "src": "14933:2:10",
>>>>>>> Till-Pascal
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1744,
=======
                                "id": 2056,
>>>>>>> Till-Pascal
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
<<<<<<< HEAD
                                "src": "14917:15:9",
=======
                                "src": "14917:15:10",
>>>>>>> Till-Pascal
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
<<<<<<< HEAD
                              "id": 1746,
=======
                              "id": 2058,
>>>>>>> Till-Pascal
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "14917:19:9",
=======
                              "src": "14917:19:10",
>>>>>>> Till-Pascal
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$133",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
<<<<<<< HEAD
                            "id": 1747,
=======
                            "id": 2059,
>>>>>>> Till-Pascal
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 132,
<<<<<<< HEAD
                            "src": "14917:36:9",
=======
                            "src": "14917:36:10",
>>>>>>> Till-Pascal
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
<<<<<<< HEAD
                          "id": 1753,
=======
                          "id": 2065,
>>>>>>> Till-Pascal
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "14917:72:9",
=======
                          "src": "14917:72:10",
>>>>>>> Till-Pascal
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
<<<<<<< HEAD
                        "id": 1784,
                        "nodeType": "TryStatement",
                        "src": "14913:524:9"
=======
                        "id": 2096,
                        "nodeType": "TryStatement",
                        "src": "14913:524:10"
>>>>>>> Till-Pascal
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1728,
              "nodeType": "StructuredDocumentation",
              "src": "14165:542:9",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1791,
=======
              "id": 2040,
              "nodeType": "StructuredDocumentation",
              "src": "14165:542:10",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 2103,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
<<<<<<< HEAD
            "nameLocation": "14721:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1737,
=======
            "nameLocation": "14721:22:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2049,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14761:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "14753:12:9",
=======
                  "id": 2042,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14761:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "14753:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14753:7:9",
=======
                    "id": 2041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14753:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1732,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14783:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "14775:10:9",
=======
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14783:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "14775:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14775:7:9",
=======
                    "id": 2043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14775:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1734,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14803:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "14795:15:9",
=======
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14803:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "14795:15:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14795:7:9",
=======
                    "id": 2045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14795:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1736,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "14833:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "14820:18:9",
=======
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "14833:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "14820:18:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1735,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14820:5:9",
=======
                    "id": 2047,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14820:5:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "14743:101:9"
            },
            "returnParameters": {
              "id": 1740,
=======
              "src": "14743:101:10"
            },
            "returnParameters": {
              "id": 2052,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1739,
=======
                  "id": 2051,
>>>>>>> Till-Pascal
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1791,
                  "src": "14862:4:9",
=======
                  "scope": 2103,
                  "src": "14862:4:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1738,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14862:4:9",
=======
                    "id": 2050,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14862:4:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "14861:6:9"
            },
            "scope": 1818,
            "src": "14712:783:9",
=======
              "src": "14861:6:10"
            },
            "scope": 2130,
            "src": "14712:783:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1803,
              "nodeType": "Block",
              "src": "16121:2:9",
              "statements": []
            },
            "documentation": {
              "id": 1792,
              "nodeType": "StructuredDocumentation",
              "src": "15501:463:9",
              "text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
            },
            "id": 1804,
=======
              "id": 2115,
              "nodeType": "Block",
              "src": "16121:2:10",
              "statements": []
            },
            "documentation": {
              "id": 2104,
              "nodeType": "StructuredDocumentation",
              "src": "15501:463:10",
              "text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
            },
            "id": 2116,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
<<<<<<< HEAD
            "nameLocation": "15978:21:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1801,
=======
            "nameLocation": "15978:21:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2113,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1794,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16017:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "16009:12:9",
=======
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16017:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "16009:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16009:7:9",
=======
                    "id": 2105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16009:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1796,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16039:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "16031:10:9",
=======
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16039:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "16031:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16031:7:9",
=======
                    "id": 2107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16031:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1798,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "16059:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "16051:20:9",
=======
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "16059:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "16051:20:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16051:7:9",
=======
                    "id": 2109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16051:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1800,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "16089:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "16081:16:9",
=======
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "16089:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "16081:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16081:7:9",
=======
                    "id": 2111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16081:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "15999:104:9"
            },
            "returnParameters": {
              "id": 1802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16121:0:9"
            },
            "scope": 1818,
            "src": "15969:154:9",
=======
              "src": "15999:104:10"
            },
            "returnParameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16121:0:10"
            },
            "scope": 2130,
            "src": "15969:154:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1816,
              "nodeType": "Block",
              "src": "16672:2:9",
              "statements": []
            },
            "documentation": {
              "id": 1805,
              "nodeType": "StructuredDocumentation",
              "src": "16129:387:9",
              "text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
            },
            "id": 1817,
=======
              "id": 2128,
              "nodeType": "Block",
              "src": "16672:2:10",
              "statements": []
            },
            "documentation": {
              "id": 2117,
              "nodeType": "StructuredDocumentation",
              "src": "16129:387:10",
              "text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
            },
            "id": 2129,
>>>>>>> Till-Pascal
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfers",
<<<<<<< HEAD
            "nameLocation": "16530:20:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1814,
=======
            "nameLocation": "16530:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2126,
>>>>>>> Till-Pascal
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1807,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16568:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "16560:12:9",
=======
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16568:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "16560:12:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16560:7:9",
=======
                    "id": 2118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16560:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1809,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16590:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "16582:10:9",
=======
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16590:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "16582:10:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16582:7:9",
=======
                    "id": 2120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16582:7:10",
>>>>>>> Till-Pascal
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1811,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "16610:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "16602:20:9",
=======
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "16610:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "16602:20:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16602:7:9",
=======
                    "id": 2122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16602:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1813,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "16640:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "16632:16:9",
=======
                  "id": 2125,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "16640:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "16632:16:10",
>>>>>>> Till-Pascal
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16632:7:9",
=======
                    "id": 2124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16632:7:10",
>>>>>>> Till-Pascal
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "16550:104:9"
            },
            "returnParameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16672:0:9"
            },
            "scope": 1818,
            "src": "16521:153:9",
=======
              "src": "16550:104:10"
            },
            "returnParameters": {
              "id": 2127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16672:0:10"
            },
            "scope": 2130,
            "src": "16521:153:10",
>>>>>>> Till-Pascal
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 1819,
        "src": "1033:15643:9",
        "usedErrors": []
      }
    ],
    "src": "56:16621:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-10T20:00:44.711Z",
=======
        "scope": 2131,
        "src": "1033:15643:10",
        "usedErrors": []
      }
    ],
    "src": "56:16621:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-03T08:23:19.189Z",
>>>>>>> Till-Pascal
  "devdoc": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Does not support burning tokens to address(0). Assumes that an owner cannot have more than the 2**128 - 1 (max value of uint128) of supply",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}. This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first. It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}